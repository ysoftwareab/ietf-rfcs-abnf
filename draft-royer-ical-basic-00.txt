

Network Working Group                                           D. Royer
Internet-Draft                                            IntelliCal LLC
Expires: July 2, 2005                                       January 2005

  Basic Internet Calendaring and Scheduling Core Object Specification
                           (iCalendar Basic)
                       draft-royer-ical-basic-00

Status of this Memo

   This document is an Internet-Draft and is subject to all provisions
   of section 3 of RFC 3667.  By submitting this Internet-Draft, each
   author represents that any applicable patent or other IPR claims of
   which he or she is aware have been or will be disclosed, and any of
   which he or she become aware will be disclosed, in accordance with
   RFC 3668.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as
   Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on July 2, 2005.

Copyright Notice

   Copyright (C) The Internet Society (2005).

Abstract

   This is the second release of a iCalendar.  After having learned from
   RFC-2445.  This document represents the common objects needed for
   calendaring.  VTODO, VJOURNAL, VTIMEZONE, recurrence rules, and
   scheduling and their associated properties have been removed.  These
   removals are expected to appear in new memos at a later time and will
   be independent extensions of this specification.  The new EXTENSIONS
   property will exist to allow for compatible sets of extensions.


Royer                     Expires July 2, 2005                  [Page 1]
Internet-Draft                 iCalendar                    January 2005

   A very large part of this memo is text directly from RFC-2445.

   This memo is intented to be 100% compatible with RFC-2445.  By
   limiting the objects to the ones used by most vendors this version
   has a better chance for interoperability and standardization.

   There is a clear need to provide and deploy interoperable calendaring
   and scheduling services for the Internet.  Current group scheduling
   and Personal Information Management (PIM) products are being extended
   for use across the Internet, today, in proprietary ways.  This memo
   has been defined to provide the definition of a common format for
   openly exchanging calendaring and scheduling information across the
   Internet.

   This MIME media type provides a standard content type for capturing
   calendar event entry information.  It also can be used to convey
   free/busy time information.  The content type is suitable as a MIME
   message entity that can be transferred over MIME based email systems,
   using HTTP or some other Internet transport.  In addition, the
   content type is useful as an object for interactions between desktop
   applications using the operating system clipboard, drag/drop or file
   systems capabilities.

   This memo is based on the earlier work of the vCalendar specification
   and RFC-2445, RFC-2446, RFC-2447, and CAP (an experimental protocol)
   for the exchange of personal calendaring and scheduling information.
   In order to avoid confusion with this referenced work, this memo is
   to be known as the iCalendar Basic (iCal-Basic) specification.

   This memo defines the format for specifying iCalendar object methods.
   An iCalendar object method is a set of usage constraints for the
   iCalendar object.  For example, these methods might define scheduling
   messages that request an event be scheduled, reply to an event
   request, send a cancellation notice for an event, modify or replace
   the definition of an event, provide a counter proposal for an
   original event request, delegate an event request to another
   individual, request free or busy time, reply to a free or busy time
   request, or provide similar scheduling messages.  The iCalendar
   Transport-indendent Interoperability Protocol (iTIP) defined in [2]
   is one such scheduling protocol.






Royer                     Expires July 2, 2005                  [Page 2]
Internet-Draft                 iCalendar                    January 2005

Table of Contents

   1.   Introduction . . . . . . . . . . . . . . . . . . . . . . . .   6
   2.   Basic Grammar and Conventions  . . . . . . . . . . . . . . .   8
     2.1  Formatting Conventions . . . . . . . . . . . . . . . . . .   8
     2.2  Related Memos  . . . . . . . . . . . . . . . . . . . . . .   9
     2.3  International Considerations . . . . . . . . . . . . . . .   9
   3.   Registration Information . . . . . . . . . . . . . . . . . .  10
     3.1  Content Type . . . . . . . . . . . . . . . . . . . . . . .  10
     3.2  Parameters . . . . . . . . . . . . . . . . . . . . . . . .  10
     3.3  Content Header Fields  . . . . . . . . . . . . . . . . . .  11
     3.4  Encoding Considerations  . . . . . . . . . . . . . . . . .  11
     3.5  Security Considerations  . . . . . . . . . . . . . . . . .  12
     3.6  Interoperability Considerations  . . . . . . . . . . . . .  12
     3.7  Applications Which Use This Media Type . . . . . . . . . .  12
     3.8  Additional Information . . . . . . . . . . . . . . . . . .  13
     3.9  Magic Numbers  . . . . . . . . . . . . . . . . . . . . . .  13
     3.10   File Extensions  . . . . . . . . . . . . . . . . . . . .  13
     3.11   Contact for Further Information: . . . . . . . . . . . .  13
     3.12   Intended Usage . . . . . . . . . . . . . . . . . . . . .  13
   4.   iCalendar Object Specification . . . . . . . . . . . . . . .  14
     4.1  Content Lines  . . . . . . . . . . . . . . . . . . . . . .  14
       4.1.1  List and Field Separators  . . . . . . . . . . . . . .  16
       4.1.2  Multiple Values  . . . . . . . . . . . . . . . . . . .  17
       4.1.3  Binary Content . . . . . . . . . . . . . . . . . . . .  17
       4.1.4  Character Set  . . . . . . . . . . . . . . . . . . . .  18
     4.2  Property Parameters  . . . . . . . . . . . . . . . . . . .  18
       4.2.1  Alternate Text Representation  . . . . . . . . . . . .  19
       4.2.2  Common Name  . . . . . . . . . . . . . . . . . . . . .  20
       4.2.3  Calendar User Type . . . . . . . . . . . . . . . . . .  21
       4.2.4  Delegators . . . . . . . . . . . . . . . . . . . . . .  21
       4.2.5  Delegatees . . . . . . . . . . . . . . . . . . . . . .  21
       4.2.6  Directory Entry Reference  . . . . . . . . . . . . . .  21
       4.2.7  Inline Encoding  . . . . . . . . . . . . . . . . . . .  22
       4.2.8  Format Type  . . . . . . . . . . . . . . . . . . . . .  23
       4.2.9  Free/Busy Time Type  . . . . . . . . . . . . . . . . .  23
       4.2.10   Language . . . . . . . . . . . . . . . . . . . . . .  24
       4.2.11   Group or List Membership . . . . . . . . . . . . . .  25
       4.2.12   Participation Status . . . . . . . . . . . . . . . .  25
       4.2.13   Recurrence Identifier Range  . . . . . . . . . . . .  26
       4.2.14   Relationship Type  . . . . . . . . . . . . . . . . .  26
       4.2.15   Participation Role . . . . . . . . . . . . . . . . .  26
       4.2.16   RSVP Expectation . . . . . . . . . . . . . . . . . .  27
       4.2.17   Sent By  . . . . . . . . . . . . . . . . . . . . . .  27
       4.2.18   Value Data Types . . . . . . . . . . . . . . . . . .  27
     4.3  Property Value Data Types  . . . . . . . . . . . . . . . .  28
       4.3.1  Binary . . . . . . . . . . . . . . . . . . . . . . . .  28
       4.3.2  Boolean  . . . . . . . . . . . . . . . . . . . . . . .  29


Royer                     Expires July 2, 2005                  [Page 3]
Internet-Draft                 iCalendar                    January 2005

       4.3.3  Calendar User Address  . . . . . . . . . . . . . . . .  30
       4.3.4  Date . . . . . . . . . . . . . . . . . . . . . . . . .  30
       4.3.5  Date-Time  . . . . . . . . . . . . . . . . . . . . . .  31
       4.3.6  Duration . . . . . . . . . . . . . . . . . . . . . . .  33
       4.3.7  Float  . . . . . . . . . . . . . . . . . . . . . . . .  33
       4.3.8  Integer  . . . . . . . . . . . . . . . . . . . . . . .  34
       4.3.9  Period of Time . . . . . . . . . . . . . . . . . . . .  34
       4.3.10   Recurrence Rule  . . . . . . . . . . . . . . . . . .  35
       4.3.11   Text . . . . . . . . . . . . . . . . . . . . . . . .  35
       4.3.12   Time . . . . . . . . . . . . . . . . . . . . . . . .  37
       4.3.13   URI  . . . . . . . . . . . . . . . . . . . . . . . .  39
       4.3.14   UTC Offset . . . . . . . . . . . . . . . . . . . . .  39
     4.4  iCalendar Object . . . . . . . . . . . . . . . . . . . . .  39
     4.5  Property . . . . . . . . . . . . . . . . . . . . . . . . .  40
     4.6  Calendar Components  . . . . . . . . . . . . . . . . . . .  40
       4.6.1  Event Component  . . . . . . . . . . . . . . . . . . .  41
       4.6.2  To-do Component  . . . . . . . . . . . . . . . . . . .  44
       4.6.3  Journal Component  . . . . . . . . . . . . . . . . . .  44
       4.6.4  Free/Busy Component  . . . . . . . . . . . . . . . . .  44
       4.6.5  Time Zone Component  . . . . . . . . . . . . . . . . .  47
       4.6.6  Alarm Component  . . . . . . . . . . . . . . . . . . .  47
     4.7  Calendar Properties  . . . . . . . . . . . . . . . . . . .  52
       4.7.1  Calendar Scale . . . . . . . . . . . . . . . . . . . .  52
       4.7.2  Method . . . . . . . . . . . . . . . . . . . . . . . .  53
       4.7.3  Product Identifier . . . . . . . . . . . . . . . . . .  53
       4.7.4  Version  . . . . . . . . . . . . . . . . . . . . . . .  54
     4.8  Component Properties . . . . . . . . . . . . . . . . . . .  55
       4.8.1  New Properties . . . . . . . . . . . . . . . . . . . .  55
       4.8.2  Descriptive Component Properties . . . . . . . . . . .  56
       4.8.3  Date and Time Component Properties . . . . . . . . . .  67
       4.8.4  Time Zone Component Properties . . . . . . . . . . . .  73
       4.8.5  Time Zone Name . . . . . . . . . . . . . . . . . . . .  73
       4.8.6  Time Zone Offset From  . . . . . . . . . . . . . . . .  73
       4.8.7  Time Zone Offset To  . . . . . . . . . . . . . . . . .  73
       4.8.8  Time Zone URL  . . . . . . . . . . . . . . . . . . . .  73
     4.9  Relationship Component Properties  . . . . . . . . . . . .  73
       4.9.1  Attendee . . . . . . . . . . . . . . . . . . . . . . .  73
       4.9.2  Contact  . . . . . . . . . . . . . . . . . . . . . . .  76
       4.9.3  Organizer  . . . . . . . . . . . . . . . . . . . . . .  77
       4.9.4  Recurrence ID  . . . . . . . . . . . . . . . . . . . .  79
       4.9.5  Related To . . . . . . . . . . . . . . . . . . . . . .  79
       4.9.6  Uniform Resource Locator . . . . . . . . . . . . . . .  79
       4.9.7  Unique Identifier  . . . . . . . . . . . . . . . . . .  80
     4.10   Recurrence Component Properties  . . . . . . . . . . . .  81
       4.10.1   Exception Date/Times . . . . . . . . . . . . . . . .  81
       4.10.2   Exception Rule . . . . . . . . . . . . . . . . . . .  81
       4.10.3   Recurrence Date/Times  . . . . . . . . . . . . . . .  81
       4.10.4   Recurrence Rule  . . . . . . . . . . . . . . . . . .  82


Royer                     Expires July 2, 2005                  [Page 4]
Internet-Draft                 iCalendar                    January 2005

     4.11   Alarm Component Properties . . . . . . . . . . . . . . .  82
       4.11.1   Action . . . . . . . . . . . . . . . . . . . . . . .  82
       4.11.2   Repeat Count . . . . . . . . . . . . . . . . . . . .  83
       4.11.3   Trigger  . . . . . . . . . . . . . . . . . . . . . .  83
     4.12   Change Management Component Properties . . . . . . . . .  85
       4.12.1   Date/Time Created  . . . . . . . . . . . . . . . . .  85
       4.12.2   Date/Time Stamp  . . . . . . . . . . . . . . . . . .  85
       4.12.3   Last Modified  . . . . . . . . . . . . . . . . . . .  86
       4.12.4   Sequence Number  . . . . . . . . . . . . . . . . . .  87
     4.13   Miscellaneous Component Properties . . . . . . . . . . .  88
       4.13.1   Non-standard Properties  . . . . . . . . . . . . . .  88
       4.13.2   Request Status . . . . . . . . . . . . . . . . . . .  89
   5.   iCalendar Object Examples  . . . . . . . . . . . . . . . . .  93
   6.   Recommended Practices  . . . . . . . . . . . . . . . . . . .  95
   7.   Registration of Content Type Elements  . . . . . . . . . . .  96
     7.1  Registration of New and Modified iCalendar Object
          Methods  . . . . . . . . . . . . . . . . . . . . . . . . .  96
     7.2  Registration of New Properties . . . . . . . . . . . . . .  96
       7.2.1  Define the property  . . . . . . . . . . . . . . . . .  96
       7.2.2  Post the Property definition . . . . . . . . . . . . .  97
       7.2.3  Allow a comment period . . . . . . . . . . . . . . . .  97
       7.2.4  Submit the property for approval . . . . . . . . . . .  97
     7.3  Property Change Control  . . . . . . . . . . . . . . . . .  98
   8.   References (BOILERPLATE) . . . . . . . . . . . . . . . . . .  99
   9.   Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . 100
   10.  Authors' and Chairs' Addresses (BOILERPLATE) . . . . . . . . 101
   11.  Full Copyright Statement (BOILERPLATE) . . . . . . . . . . . 102
   12.  References . . . . . . . . . . . . . . . . . . . . . . . . . 102
        Author's Address . . . . . . . . . . . . . . . . . . . . . . 103
        Intellectual Property and Copyright Statements . . . . . . . 104











Royer                     Expires July 2, 2005                  [Page 5]
Internet-Draft                 iCalendar                    January 2005

1.  Introduction

   While implementing iCalendar applications much has been learned.
   Among those lessions is the need to make a simpler version of
   iCalendar that includes the common features used by almost all
   vendors.  This memo describes a 'Basic' version of iCalendar that
   does not include recurrence rules, to-do's, journals, or timezones.
   These removals may be added in separate memos at a later time.  These
   simplifications are seen as a way for more vendors to produce objects
   that are compatible with each other and without having to support all
   of the features possible in RFC-2445.  A new property called
   EXTENSIONS allows for those conforming to this specification to
   detect any optional features while existing RFC-2445 implementations
   should already ignore the unknown property.  A few properties have
   been tagged as no longer needed, these are marked as 'deprecated' in
   the sections that follow (GEO for example).  And other properties and
   components are tagged as not in iCal-Basic, these may be reintroduced
   in future memos (RRULE for example).

   The use of calendaring and scheduling has grown considerably in the
   last decade.  Enterprise and inter-enterprise business has become
   dependent on rapid scheduling of events and actions using this
   information technology.  However, the longer term growth of
   calendaring and scheduling, is currently limited by the lack of
   Internet standards for the message content types that are central to
   these knowledgeware applications.  This memo is intended to progress
   the level of interoperability possible between dissimilar calendaring
   and scheduling applications.  This memo defines a MIME content type
   for exchanging electronic calendaring and scheduling information.
   The Internet Calendaring and Scheduling Core Object Specification, or
   iCalendar, allows for the capture and exchange of information
   normally stored within a calendaring and scheduling application; such
   as a Personal Information Manager (PIM) or a Group Scheduling
   product.

   The iCalendar format is suitable as an exchange format between
   applications or systems.  The format is defined in terms of a MIME
   content type.  This will enable the object to be exchanged using
   several transports, including but not limited to SMTP, HTTP, a file
   system, desktop interactive protocols such as the use of a memory-
   based clipboard or drag/drop interactions, point-to-point
   asynchronous communication, wired-network transport, or some form of

   unwired transport such as infrared might also be used.

   The memo also provides for the definition of iCalendar object methods
   that will map this content type to a set of messages for supporting
   calendaring and scheduling operations such as requesting, replying


Royer                     Expires July 2, 2005                  [Page 6]
Internet-Draft                 iCalendar                    January 2005

   to, modifying, and canceling meetings or appointments.  The iCalendar
   object methods can be used to define other calendaring and scheduling
   operations such a requesting for and replying with free/busy time
   data.  Such a scheduling protocol is defined in the iCalendar
   Transport-independent Interoperability Protocol (iTIP) defined in
   [2].

   The memo also includes a formal grammar for the content type based on
   the Internet ABNF defined in [12].  This ABNF is required for the
   implementation of parsers and to serve as the definitive reference
   when ambiguities or questions arise in interpreting the descriptive
   prose definition of the memo.




















Royer                     Expires July 2, 2005                  [Page 7]
Internet-Draft                 iCalendar                    January 2005

2.  Basic Grammar and Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY" and
   "OPTIONAL" in this document are to be interoperated as described in
   [11].

   This memo makes use of both a descriptive prose and a more formal
   notation for defining the calendaring and scheduling format.

   The notation used in this memo is the ABNF notation of [12].  Readers
   intending on implementing this format defined in this memo should be
   familiar with this notation in order to properly interpret the
   specifications of this memo.

   All numeric and hexadecimal values used in this memo are given in
   decimal notation.

   All names of properties, property parameters, enumerated property
   values and property parameter values are case-insensitive.  However,
   all other property values are case-sensitive, unless otherwise
   stated.
      Note: All indented editorial notes, such as this one, are intended
      to provide the reader with additional information.  The
      information is not essential to the building of an implementation
      conformant with this memo.  The information is provided to
      highlight a particular feature or characteristic of the memo.

   The format for the iCalendar object is based on the syntax of the
   [14] content type.  While the iCalendar object is not a profile of
   the [14] content type, it does reuse a number of the elements from
   the [14] specification.

2.1  Formatting Conventions

   The mechanisms defined in this memo are defined in prose.  Many of
   the terms used to describe these have common usage that is different
   than the standards usage of this memo.  In order to reference within
   this memo elements of the calendaring and scheduling model, core
   object (this memo) or interoperability protocol [2] some formatting
   conventions have been used.  Calendaring and scheduling roles are
   referred to in quoted-strings of text with the first character of
   each word in upper case.  For example, "Organizer" refers to a role
   of a "Calendar User" within the scheduling protocol defined by [2].
   Calendar components defined by this memo are referred to with
   capitalized, quoted-strings of text.  All calendar components start
   with the letter "V".  For example, "VEVENT" refers to the event
   calendar component.  Scheduling methods defined by [2] are referred


Royer                     Expires July 2, 2005                  [Page 8]
Internet-Draft                 iCalendar                    January 2005

   to with capitalized, quoted-strings of text.  For example, "REQUEST"
   refers to the method for requesting a scheduling calendar component
   be created or modified, "REPLY" refers to the method a recipient of a
   request uses to update their status with the "Organizer" of the
   calendar component.

   The properties defined by this memo are referred to with capitalized,
   quoted-strings of text, followed by the word "property".  For
   example, "ATTENDEE" property refers to the iCalendar property used to
   convey the calendar address of a calendar user.  Property parameters
   defined by this memo are referred to with lowercase, quoted-strings
   of text, followed by the word "parameter".  For example, "value"
   parameter refers to the iCalendar property parameter used to override
   the default data type for a property value.  Enumerated values
   defined by this memo are referred to with capitalized text, either
   alone or followed by the word "value".  For example, the "CANCELED"
   value can be used with the "STATUS" property.

2.2  Related Memos

   Implementers will need to be familiar with several other memos that,
   along with this memo, form a framework for Internet calendaring and
   scheduling standards.  This memo, [ICAL-BASIC], specifies a core
   specification of objects, data types, properties and property
   parameters.

   [2] - specifies an interoperability protocol for scheduling between
   different implementations;

   [1] specifies an Internet email binding for [2].

   This memo does not attempt to repeat the specification of concepts or
   definitions from these other memos.  Where possible, references are
   made to the memo that provides for the specification of these
   concepts or definitions.

2.3  International Considerations

   In the rest of this document, descriptions of characters are of the
   form "character name (codepoint)", where "codepoint" is from the US-
   ASCII character set.  The "character name" is the authoritative
   description; (codepoint) is a reference to that character in US-ASCII
   or US-ASCII compatible sets (for example the ISO-8859-x family, UTF-
   8, ISO-2022-xx, KOI8-R).  If a non-US-ASCII compatible character set
   is used, appropriate code-point from that character set MUST be
   chosen instead.  Use of non-US-ASCII-compatible character sets is NOT
   recommended.


Royer                     Expires July 2, 2005                  [Page 9]
Internet-Draft                 iCalendar                    January 2005

3.  Registration Information

   The Calendaring and Scheduling Core Object Specification is intended
   for use as a MIME content type.  However, the implementation of the
   memo is in no way limited solely as a MIME content type.

3.1  Content Type

   The following text is intended to register this memo as the MIME
   content type "text/calendar".
      To: ietf-types@uninett.no
      Subject: Registration of MIME content type text/calendar.
      MIME media type name: text
      MIME subtype name: calendar

3.2  Parameters

   Required parameters: none

   Optional parameters: charset, method, component and optinfo

   The "charset" parameter is defined in [9] for other body parts.  It
   is used to identify the default character set used within the body
   part.

   The "method" parameter is used to convey the iCalendar object method
   or transaction semantics for the calendaring and scheduling
   information.  It also is an identifier for the restricted set of
   properties and values that the iCalendar object consists of.  The
   parameter is to be used as a guide for applications interpreting the
   information contained within the body part.  It SHOULD NOT be used to
   exclude or require particular pieces of information unless the
   identified method definition specifically calls for this behavior.
   Unless specifically forbidden by a particular method definition, a
   text/calendar content type can contain any set of properties
   permitted by the Calendaring and Scheduling Core Object
   Specification.  The "method" parameter MUST be the same value as that
   specified in the "METHOD" component property in the iCalendar object.
   If one is present, the other MUST also be present.

   The value for the "method" parameter is defined as follows:

           method  = 1*(ALPHA / DIGIT / "-")
           ; IANA registered iCalendar object method

   The "component" parameter conveys the type of iCalendar calendar
   component within the body part.  If the iCalendar object contains
   more than one calendar component type, then multiple component


Royer                     Expires July 2, 2005                 [Page 10]
Internet-Draft                 iCalendar                    January 2005

   parameters MUST be specified.

   The value for the "component" parameter is defined as follows:

           component       = "VFREEBUSY"
                           / x-name / iana-token)

   The "optinfo" parameter conveys optional information about the
   iCalendar object within the body part.  This parameter can only
   specify semantics already specified by the iCalendar object and that
   can be otherwise determined by parsing the body part.  In addition,
   the optional information specified by this parameter MUST be
   consistent with that information specified by the iCalendar object.
   For example, it can be used to convey the "Attendee" response status
   to a meeting request.  The parameter value consists of a string
   value.

   The parameter can be specified multiple times.

   This parameter MAY only specify semantics already specified by the
   iCalendar object and that can be otherwise determined by parsing the
   body part.

   The value for the "optinfo" parameter is defined as follows:

           optinfo = infovalue / qinfovalue

           infovalue       = iana-token / x-name

           qinfovalue      = DQUOTE (infovalue) DQUOTE

3.3  Content Header Fields

   Optional content header fields: Any header fields defined by [RFC
   2045].

3.4  Encoding Considerations

   This MIME content type can contain 8bit characters, so the use of
   quoted-printable or BASE64 MIME content-transfer-encodings might be
   necessary when iCalendar objects are transferred across protocols
   restricted to the 7bit repertoire.  Note that a text valued property
   in the content entity can also have content encoding of special
   characters using a BACKSLASH character (US-ASCII decimal 92)
   escapement technique.  This means that content values can end up
   encoded twice.


Royer                     Expires July 2, 2005                 [Page 11]
Internet-Draft                 iCalendar                    January 2005

3.5  Security Considerations

   SPOOFING - - In this memo, the "Organizer" is the only person
   authorized to make changes to an existing "VEVENT" calendar component
   and redistribute the updates to the "Attendees".  An iCalendar object
   that maliciously changes or cancels an existing "VEVENT" or
   "VFREEBUSY" calendar component might be constructed by someone other
   than the "Organizer" and sent to the "Attendees".  In addition in
   this memo, other than the "Organizer", an "Attendee" of a "VEVENT"
   calendar component is the only other person authorized to update any
   parameter associated with their "ATTENDEE" property and send it to
   the "Organizer".  An iCalendar object that maliciously changes the
   "ATTENDEE" parameters can be constructed by someone other than the
   real "Attendee" and sent to the "Organizer".

   PROCEDURAL ALARMS - - An iCalendar object can be created that
   contains a "VEVENT" calendar component with "VALARM" calendar
   components.  The "VALARM" calendar component can be of type PROCEDURE
   and can have an attachment containing some sort of executable
   program.  Implementations that incorporate these types of alarms are
   subject to any virus or malicious attack that might occur as a result
   of executing the attachment.

   ATTACHMENTS - - An iCalendar object can include references to Uniform
   Resource Locators that can be programmed resources.

   Implementers and users of this memo should be aware of the network
   security implications of accepting and parsing such information.  In
   addition, the security considerations observed by implementations of
   electronic mail systems should be followed for this memo.

3.6  Interoperability Considerations

   This MIME content type is intended to define a common format for
   conveying calendaring and scheduling information between different
   systems.  It is heavily based on the earlier [17] industry
   specification.

3.7  Applications Which Use This Media Type

   This content-type is designed for widespread use by Internet
   calendaring and scheduling applications.  In addition, applications
   in the workflow and document management area might find this content-
   type applicable.  The [2] and [1] Internet protocols directly use
   this content-type also.  Future work on an Internet calendar access
   protocol will utilize this content-type too.



Royer                     Expires July 2, 2005                 [Page 12]
Internet-Draft                 iCalendar                    January 2005

3.8  Additional Information

   This memo defines this content-type.

3.9  Magic Numbers

   None.

3.10  File Extensions

   The file extension of "ics" is to be used to designate a file
   containing (an arbitrary set of) calendaring and scheduling
   information consistent with this MIME content type.

   The file extension of "ifb" is to be used to designate a file
   containing free or busy time information consistent with this MIME
   content type.

   Macintosh file type codes: The file type code of "iCal" is to be used
   in Apple MacIntosh operating system environments to designate a file
   containing calendaring and scheduling information consistent with
   this MIME media type.

   The file type code of "iFBf" is to be used in Apple MacIntosh
   operating system environments to designate a file containing free or
   busy time information consistent with this MIME media type.

3.11  Contact for Further Information:

      Doug Royer
      267 Kentlands Blvd., #3041
      Gaithersburg, MD 20878
      208-612-4639
      Doug@Royer.com

3.12  Intended Usage

   COMMON






Royer                     Expires July 2, 2005                 [Page 13]
Internet-Draft                 iCalendar                    January 2005

4.  iCalendar Object Specification

   The following sections define the details of a Calendaring and
   Scheduling Core Object Specification.  This information is intended
   to be an integral part of the MIME content type registration.  In
   addition, this information can be used independent of such content
   registration.  In particular, this memo has direct applicability for
   use as a calendaring and scheduling exchange format in file-, memory-
   or network-based transport mechanisms.

4.1  Content Lines

   The iCalendar object is organized into individual lines of text,
   called content lines.  Content lines are delimited by a line break,
   which is a CRLF sequence (US-ASCII decimal 13, followed by US-ASCII
   decimal 10).

   Lines of text SHOULD NOT be longer than 75 octets, excluding the line
   break.  Long content lines SHOULD be split into a multiple line
   representations using a line "folding" technique.  That is, a long
   line can be split between any two characters by inserting a CRLF
   immediately followed by a single linear white space character (i.e.,
   SPACE, US-ASCII decimal 32 or HTAB, US-ASCII decimal 9).  Any
   sequence of CRLF followed immediately by a single linear white space
   character is ignored (i.e., removed) when processing the content
   type.

   For example the line:
      DESCRIPTION:This is a long description that exists on a long line.

   Can be represented as:

        DESCRIPTION:This is a lo
         ng description
          that exists on a long line.

   The process of moving from this folded multiple line representation
   to its single line representation is called "unfolding".  Unfolding
   is accomplished by removing the CRLF character and the linear white
   space character that immediately follows.

   When parsing a content line, folded lines MUST first be unfolded
   according to the unfolding procedure described above.  When
   generating a content line, lines longer than 75 octets SHOULD be
   folded according to the folding procedure described above.

   The content information associated with an iCalendar object is
   formatted using a syntax similar to that defined by [14].  That is,


Royer                     Expires July 2, 2005                 [Page 14]
Internet-Draft                 iCalendar                    January 2005

   the content information consists of CRLF-separated content lines.

   The following notation defines the lines of content in an iCalendar
   object:

        contentline        = name *(";" param ) ":" value CRLF
           ; This ABNF is just a general definition for an initial  
parsing
           ; of the content line into its property name, parameter list,
           ; and value string

        ; When parsing a content line, folded lines MUST first
           ; be unfolded according to the unfolding procedure
           ; described above. When generating a content line, lines
           ; longer than 75 octets SHOULD be folded according to
           ; the folding procedure described above.

        name               = x-name / iana-token

        iana-token = 1*(ALPHA / DIGIT / "-")
        ; iCalendar identifier registered with IANA

        x-name             = "X-" [vendorid "-"] 1*(ALPHA / DIGIT / "-")
        ; Reservered for experimental use. Not intended for use in
        ; released products.

        vendorid   = 3*(ALPHA / DIGIT)     ;Vendor identification

        param              = param-name "=" param-value
                             *("," param-value)
           ; Each property defines the specific ABNF for the parameters
           ; allowed on the property. Refer to specific properties for
           ; precise parameter ABNF.

        param-name = iana-token / x-token

        param-value        = paramtext / quoted-string

        paramtext  = *SAFE-CHAR

        value      = *VALUE-CHAR

        quoted-string      = DQUOTE *QSAFE-CHAR DQUOTE

        NON-US-ASCII       = %x80-F8
        ; Use restricted by charset parameter
        ; on outer MIME object (UTF-8 preferred)

        QSAFE-CHAR = WSP / %x21 / %x23-7E / NON-US-ASCII


Royer                     Expires July 2, 2005                 [Page 15]
Internet-Draft                 iCalendar                    January 2005

        ; Any character except CTLs and DQUOTE

        SAFE-CHAR  = WSP / %x21 / %x23-2B / %x2D-39 / %x3C-7E
                   / NON-US-ASCII
        ; Any character except CTLs, DQUOTE, ";", ":", ","

        VALUE-CHAR = WSP / %x21-7E / NON-US-ASCII
        ; Any textual character

        CR = %x0D
        ; carriage return

        LF = %x0A
        ; line feed

        CRLF       = CR LF
        ; Internet standard newline

        CTL        = %x00-08 / %x0A-1F / %x7F
           ; Controls

        ALPHA      = %x41-5A / %x61-7A   ; A-Z / a-z

        DIGIT      = %x30-39
           ; 0-9

        DQUOTE     = %x22
           ; Quotation Mark

        WSP        = SPACE / HTAB

        SPACE      = %x20

        HTAB       = %x09

   The property value component of a content line has a format that is
   property specific.  Refer to the section describing each property for
   a definition of this format.

   All names of properties, property parameters, enumerated property
   values and property parameter values are case-insensitive.  However,
   all other property values are case-sensitive, unless otherwise
   stated.

4.1.1  List and Field Separators

   Some properties and parameters allow a list of values.  Values in a
   list of values MUST be separated by a COMMA character (US-ASCII


Royer                     Expires July 2, 2005                 [Page 16]
Internet-Draft                 iCalendar                    January 2005

   decimal 44).  There is no significance to the order of values in a
   list.  For those parameter values (such as those that specify URI
   values) that are specified in quoted-strings, the individual quoted-
   strings are separated by a COMMA character (US-ASCII decimal 44).

   Some property values are defined in terms of multiple parts.  These
   structured property values MUST have their value parts separated by a
   SEMICOLON character (US-ASCII decimal 59).

   Some properties allow a list of parameters.  Each property parameter
   in a list of property parameters MUST be separated by a SEMICOLON
   character (US-ASCII decimal 59).

   Property parameters with values containing a COLON, a SEMICOLON or a
   COMMA character MUST be placed in quoted text.

   For example, in the following properties a SEMICOLON is used to
   separate property parameters from each other, and a COMMA is used to
   separate property values in a value list.

        ATTENDEE;RSVP=TRUE;ROLE=REQ-PARTICIPANT:MAILTO:
         jsmith@host.com

        RDATE;VALUE=DATE:19970304,19970504,19970704,19970904

4.1.2  Multiple Values

   Some properties defined in the iCalendar object can have multiple
   values.  The general rule for encoding multi-valued items is to
   simply create a new content line for each value, including the
   property name.  However, it should be noted that some properties
   support encoding multiple values in a single property by separating
   the values with a COMMA character (US-ASCII decimal 44).  Individual
   property definitions should be consulted for determining whether a
   specific property allows multiple values and in which of these two
   forms.

4.1.3  Binary Content

   Binary content information in an iCalendar object SHOULD be
   referenced using a URI within a property value.  That is the binary
   content information SHOULD be placed in an external MIME entity that
   can be referenced by a URI from within the iCalendar object.  In
   applications where this is not feasible, binary content information

   can be included within an iCalendar object, but only after first
   encoding it into text using the "BASE64" encoding method defined in


Royer                     Expires July 2, 2005                 [Page 17]
Internet-Draft                 iCalendar                    January 2005

   [8].  Inline binary contact SHOULD only be used in applications whose
   special circumstances demand that an iCalendar object be expressed as
   a single entity.  A property containing inline binary content
   information MUST specify the "ENCODING" property parameter.  Binary
   content information placed external to the iCalendar object MUST be
   referenced by a uniform resource identifier (URI).

   The following example specifies an "ATTACH" property that references
   an attachment external to the iCalendar object with a URI reference:

        ATTACH:http://xyz.com/public/quarterly-report.doc

   The following example specifies an "ATTACH" property with inline
   binary encoded content information:

        ATTACH;FMTTYPE=image/basic;ENCODING=BASE64;VALUE=BINARY:
         MIICajCCAdOgAwIBAgICBEUwDQYJKoZIhvcNAQEEBQAwdzELMAkGA1U
         EBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlIENvbW11bmljYXRpb25zIE
           <...remainder of "BASE64" encoded binary data...>

4.1.4  Character Set

   There is not a property parameter to declare the character set used
   in a property value.  The default character set for an iCalendar
   object is UTF-8 as defined in [13].

   The "charset" Content-Type parameter can be used in MIME transports
   to specify any other IANA registered character set.

4.2  Property Parameters

   A property can have attributes associated with it.  These "property
   parameters" contain meta-information about the property or the
   property value.  Property parameters are provided to specify such
   information as the location of an alternate text representation for a
   property value, the language of a text property value, the data type
   of the property value and other attributes.

   Property parameter values that contain the COLON (US-ASCII decimal
   58), SEMICOLON (US-ASCII decimal 59) or COMMA (US-ASCII decimal 44)
   character separators MUST be specified as quoted-string text values.
   Property parameter values MUST NOT contain the DOUBLE-QUOTE (US-ASCII
   decimal 22) character.  The DOUBLE-QUOTE (US-ASCII decimal 22)
   character is used as a delimiter for parameter values that contain
   restricted characters or URI text.  For example:

        DESCRIPTION;ALTREP="http://www.wiz.org":The Fall'98 Wild Wizards


Royer                     Expires July 2, 2005                 [Page 18]
Internet-Draft                 iCalendar                    January 2005

          Conference - - Las Vegas, NV, USA

   Property parameter values that are not in quoted strings are case
   insensitive.

   The general property parameters defined by this memo are defined by
   the following notation:

        parameter  = altrepparam           ; Alternate text  
representation
                   / cnparam               ; Common name
                   / cutypeparam           ; Calendar user type
                   / delfromparam          ; Delegator
                   / deltoparam            ; Delegatee
                   / dirparam              ; Directory entry
                   / encodingparam         ; Inline encoding
                   / fmttypeparam          ; Format type
                   / fbtypeparam           ; Free/busy time type
                   / languageparam         ; Language for text
                   / memberparam           ; Group or list membership
                   / partstatparam         ; Participation status
                   / rangeparam            ; Recurrence identifier range
                   / trigrelparam          ; Alarm trigger relationship
                   / reltypeparam          ; Relationship type
                   / roleparam             ; Participation role
                   / rsvpparam             ; RSVP expectation
                   / sentbyparam           ; Sent by
                   / valuetypeparam        ; Property value data type
                   / ianaparam
           ; Some other IANA registered iCalendar parameter.
                   / xparam
           ; A non-standard, experimental parameter.

        ianaparam  = iana-token "=" param-value *("," param-value)

        xparam     =x-name "=" param-value *("," param-value)

4.2.1  Alternate Text Representation

   Parameter Name: ALTREP

   Purpose: To specify an alternate text representation for the property
   value.

   Format Definition: The property parameter is defined by the following
   notation:
      altrepparam        = "ALTREP" "=" DQUOTE uri DQUOTE


Royer                     Expires July 2, 2005                 [Page 19]
Internet-Draft                 iCalendar                    January 2005

   Description: The parameter specifies a URI that points to an
   alternate representation for a textual property value.  A property
   specifying this parameter MUST also include a value that reflects the
   default representation of the text value.  The individual URI
   parameter values MUST each be specified in a quoted-string.

   Example:

         
DESCRIPTION;ALTREP="CID:<part3.msg.970415T083000@host.com>":Project
          XYZ Review Meeting will include the following agenda items:  
(a)
          Market Overview, (b) Finances, (c) Project Management

   The "ALTREP" property parameter value might point to a "text/html"
   content portion.

        Content-Type:text/html
        Content-Id:<part3.msg.970415T083000@host.com>

        <html><body>
        <p><b>Project XYZ Review Meeting</b> will include the following
        agenda items:<ol><li>Market
        Overview</li><li>Finances</li><li>Project  
Management</li></ol></p>
        </body></html>

4.2.2  Common Name

   Parameter Name: CN

   Purpose: To specify the common name to be associated with the
   calendar user specified by the property.

   Format Definition: The property parameter is defined by the following
   notation:

        cnparam    = "CN" "=" param-value

   Description: This parameter can be specified on properties with a
   CAL-ADDRESS value type.  The parameter specifies the common name to
   be associated with the calendar user specified by the property.  The
   parameter value is text.  The parameter value can be used for display
   text to be associated with the calendar address specified by the
   property.

   Example:

        ORGANIZER;CN="John Smith":MAILTO:jsmith@host.com


Royer                     Expires July 2, 2005                 [Page 20]
Internet-Draft                 iCalendar                    January 2005

4.2.3  Calendar User Type

   Parameter Name: CUTYPE

   Purpose: To specify the type of calendar user specified by the
   property.

   Format Definition: The property parameter is defined by the following
   notation:

        cutypeparam        = "CUTYPE" "="
                            ("INDIVIDUAL"          ; An individual
                           / "GROUP"               ; A group of  
individuals
                           / "RESOURCE"            ; A physical resource
                           / "ROOM"                ; A room resource
                           / "UNKNOWN"             ; Otherwise not known
                           / x-name                ; Experimental type
                           / iana-token)           ; Other IANA  
registered
                                                   ; type
        ; Default is INDIVIDUAL

   Description: This parameter can be specified on properties with a
   CAL-ADDRESS value type.  The parameter identifies the type of
   calendar user specified by the property.  If not specified on a
   property that allows this parameter, the default is INDIVIDUAL.

   Example:

        ATTENDEE;CUTYPE=GROUP:MAILTO:ietf-calsch@imc.org

4.2.4  Delegators

   Parameter Name: DELEGATED-FROM

   DELEGATED-FROM is not in iCal-Basic.

4.2.5  Delegatees

   Parameter Name: DELEGATED-TO

   DELEGATED-FROM is not in iCal-Basic.

4.2.6  Directory Entry Reference

   Parameter Name: DIR

   Purpose: To specify reference to a directory entry associated with


Royer                     Expires July 2, 2005                 [Page 21]
Internet-Draft                 iCalendar                    January 2005

   the calendar user specified by the property.

   Format Definition: The property parameter is defined by the following
   notation:

        dirparam   = "DIR" "=" DQUOTE uri DQUOTE

   Description: This parameter can be specified on properties with a
   CAL-ADDRESS value type.  The parameter specifies a reference to the
   directory entry associated with the calendar user specified by the
   property.  The parameter value is a URI.  The individual URI
   parameter values MUST each be specified in a quoted-string.

   Example:

         
ORGANIZER;DIR="ldap://host.com:6666/o=eDABC%20Industries,c=3DUS??
         (cn=3DBJim%20Dolittle)":MAILTO:jimdo@host1.com

4.2.7  Inline Encoding

   Parameter Name: ENCODING

   Purpose: To specify an alternate inline encoding for the property
   value.

   Format Definition: The property parameter is defined by the following
   notation:

        encodingparam      = "ENCODING" "="
                             ("8BIT"
           ; "8bit" text encoding is defined in [RFC.2045]
                           / "BASE64"
           ; "BASE64" binary encoding format is defined in [RFC.2045]
                           / iana-token
           ; Some other IANA registered iCalendar encoding type
                           / x-name)
           ; A non-standard, experimental encoding type

   Description: The property parameter identifies the inline encoding
   used in a property value.  The default encoding is "8BIT",
   corresponding to a property value consisting of text.  The "BASE64"
   encoding type corresponds to a property value encoded using the
   "BASE64" encoding defined in [8].

   If the value type parameter is ";VALUE=BINARY", then the inline
   encoding parameter MUST be specified with the value
   ";ENCODING=BASE64".


Royer                     Expires July 2, 2005                 [Page 22]
Internet-Draft                 iCalendar                    January 2005

   Example:

        ATTACH;FMTYPE=IMAGE/JPEG;ENCODING=BASE64;VALUE=BINARY:MIICajC
         CAdOgAwIBAgICBEUwDQYJKoZIhvcNAQEEBQAwdzELMAkGA1UEBhMCVVMxLDA
         qBgNVBAoTI05ldHNjYXBlIENvbW11bmljYXRpb25zIENvcnBvcmF0aW9uMRw
         <...remainder of "BASE64" encoded binary data...>

4.2.8  Format Type

   Parameter Name: FMTTYPE

   Purpose: To specify the content type of a referenced object.

   Format Definition: The property parameter is defined by the following
   notation:

        fmttypeparam       = "FMTTYPE" "=" iana-token
                                           ; A IANA registered content  
type
                                        / x-name
                                           ; A non-standard content type

   Description: This parameter can be specified on properties that are
   used to reference an object.  The parameter specifies the content
   type of the referenced object.  For example, on the "ATTACH"
   property, a FTP type URI value does not, by itself, necessarily
   convey the type of content associated with the resource.  The
   parameter value MUST be the TEXT for either an IANA registered
   content type or a non-standard content type.

   Example:

         ATTACH;FMTTYPE=application/binary:ftp://domain.com/pub/docs/
          agenda.doc

4.2.9  Free/Busy Time Type

   Parameter Name: FBTYPE

   Purpose: To specify the free or busy time type.

   Format Definition: The property parameter is defined by the following
   notation:




Royer                     Expires July 2, 2005                 [Page 23]
Internet-Draft                 iCalendar                    January 2005

        fbtypeparam        = "FBTYPE" "=" ("FREE" / "BUSY"
                           / "BUSY-UNAVAILABLE" / "BUSY-TENTATIVE"
                           / x-name
           ; Some experimental iCalendar data type.
                           / iana-token)

           ; Some other IANA registered iCalendar data type.

   Description: The parameter specifies the free or busy time type.  The
   value FREE indicates that the time interval is free for scheduling.
   The value BUSY indicates that the time interval is busy because one
   or more events have been scheduled for that interval.  The value
   BUSY-UNAVAILABLE indicates that the time interval is busy and that
   the interval can not be scheduled.  The value BUSY-TENTATIVE
   indicates that the time interval is busy because one or more events
   have been tentatively scheduled for that interval.  If not specified
   on a property that allows this parameter, the default is BUSY.

   Example: The following is an example of this parameter on a FREEBUSY
   property.

        FREEBUSY;FBTYPE=BUSY:19980415T133000Z/19980415T170000Z

4.2.10  Language

   Parameter Name: LANGUAGE

   Purpose: To specify the language for text values in a property or
   property parameter.

   Format Definition: The property parameter is defined by the following
   notation:

        languageparam =    "LANGUAGE" "=" language

        language = <Text identifying a language, as defined in  
[RFC.1766]

   Description: This parameter can be specified on properties with a
   text value type.  The parameter identifies the language of the text
   in the property or property parameter value.  The value of the
   "language" property parameter is that defined in [7].

   For transport in a MIME entity, the Content-Language header field can
   be used to set the default language for the entire body part.
   Otherwise, no default language is assumed.

   Example:


Royer                     Expires July 2, 2005                 [Page 24]
Internet-Draft                 iCalendar                    January 2005

        SUMMARY;LANGUAGE=us-EN:Company Holiday Party

        LOCATION;LANGUAGE=en:Germany
        LOCATION;LANGUAGE=no:Tyskland

   The following example makes use of the Quoted-Printable encoding in
   order to represent non-ASCII characters.

        LOCATION;LANGUAGE=da:K=F8benhavn
        LOCATION;LANGUAGE=en:Copenhagen

4.2.11  Group or List Membership

   Parameter Name: MEMBER

   Purpose: To specify the group or list membership of the calendar user
   specified by the property.

   Format Definition: The property parameter is defined by the following
   notation:

        memberparam        = "MEMBER" "=" DQUOTE cal-address DQUOTE
                             *("," DQUOTE cal-address DQUOTE)

   Description: This parameter can be specified on properties with a
   CAL-ADDRESS value type.  The parameter identifies the groups or list
   membership for the calendar user specified by the property.  The
   parameter value either a single calendar address in a quoted-string
   or a COMMA character (US-ASCII decimal 44) list of calendar
   addresses, each in a quoted-string.  The individual calendar address
   parameter values MUST each be specified in a quoted-string.

   Example:

         
ATTENDEE;MEMBER="MAILTO:ietf-calsch@imc.org":MAILTO:jsmith@host.com

         
ATTENDEE;MEMBER="MAILTO:projectA@host.com","MAILTO:projectB@host.
         com":MAILTO:janedoe@host.com

4.2.12  Participation Status

   Parameter Name: PARTSTAT

   Purpose: To specify the participation status for the calendar user
   specified by the property.


Royer                     Expires July 2, 2005                 [Page 25]
Internet-Draft                 iCalendar                    January 2005

   Format Definition: The property parameter is defined by the following
   notation:

        ; These are the participation statuses for a "VEVENT". Default  
is
        ; NEEDS-ACTION
        partstatparam      = "PARTSTAT" "="
                            ("NEEDS-ACTION"        ; Event needs action
                           / "ACCEPTED"            ; Event accepted
                           / "DECLINED"            ; Event declined

                           / "TENTATIVE"           ; Event tentatively
                                                   ; accepted
                           / "DELEGATED"           ; Event delegated
                           / x-name                ; Experimental status
                           / iana-token)           ; Other IANA  
registered
                                                   ; status

   Description: This parameter can be specified on properties with a
   CAL-ADDRESS value type.  The parameter identifies the participation
   status for the calendar user specified by the property value.  The
   parameter values differ depending on whether they are associated with
   a group scheduled "VEVENT".  The values MUST match one of the values
   allowed for the given calendar component.  If not specified on a
   property that allows this parameter, the default value is
   NEEDS-ACTION.

   Example:

        ATTENDEE;PARTSTAT=DECLINED:MAILTO:jsmith@host.com

4.2.13  Recurrence Identifier Range

   Not in iCal-Basic.

4.2.14  Relationship Type

   Parameter Name: RELTYPE

   Deprecated along with the RELATED-TO property.

4.2.15  Participation Role

   Parameter Name: ROLE

   Purpose: To specify the participation role for the calendar user
   specified by the property.


Royer                     Expires July 2, 2005                 [Page 26]
Internet-Draft                 iCalendar                    January 2005

   Format Definition: The property parameter is defined by the following
   notation:

        roleparam  = "ROLE" "="
                    ("CHAIR"               ; Indicates chair of the
                                           ; calendar entity
                   / "REQ-PARTICIPANT"     ; Indicates a participant  
whose
                                           ; participation is required
                   / "OPT-PARTICIPANT"     ; Indicates a participant  
whose
                                           ; participation is optional
                   / "NON-PARTICIPANT"     ; Indicates a participant who  
is
                                           ; copied for information
                                           ; purposes only
                   / x-name                ; Experimental role
                   / iana-token)           ; Other IANA role
        ; Default is REQ-PARTICIPANT

   Description: This parameter can be specified on properties with a
   CAL-ADDRESS value type.  The parameter specifies the participation
   role for the calendar user specified by the property in the group
   schedule calendar component.  If not specified on a property that
   allows this parameter, the default value is REQ-PARTICIPANT.

   Example:

        ATTENDEE;ROLE=CHAIR:MAILTO:mrbig@host.com

4.2.16  RSVP Expectation

   Parameter Name: RSVP

   RSVP is not in iCal-Basic.

4.2.17  Sent By

   Parameter Name: SENT-BY

   SENT-BY is not in iCal-Basic.

4.2.18  Value Data Types

   Parameter Name: VALUE

   Purpose: To explicitly specify the data type format for a property
   value.

   Format Definition: The "VALUE" property parameter is defined by the


Royer                     Expires July 2, 2005                 [Page 27]
Internet-Draft                 iCalendar                    January 2005

   following notation:

        valuetypeparam = "VALUE" "=" valuetype

        valuetype  = ("BINARY"
                   / "BOOLEAN"
                   / "CAL-ADDRESS"
                   / "DATE"
                   / "DATE-TIME"
                   / "DURATION"
                   / "INTEGER"
                   / "PERIOD"
                   / "TEXT"
                   / "TIME"
                   / "URI"
                   / "UTC-OFFSET"
                   / x-name
                   ; Some experimental iCalendar data type.
                   / iana-token)
                   ; Some other IANA registered iCalendar data type.

   Description: The parameter specifies the data type and format of the
   property value.  The property values MUST be of a single value type.
   For example, a "RDATE" property cannot have a combination of DATE-
   TIME and TIME value types.

   If the property's value is the default value type, then this
   parameter need not be specified.  However, if the property's default
   value type is overridden by some other allowable value type, then
   this parameter MUST be specified.

4.3  Property Value Data Types

   The properties in an iCalendar object are strongly typed.  The
   definition of each property restricts the value to be one of the
   value data types, or simply value types, defined in this section.
   The value type for a property will either be specified implicitly as
   the default value type or will be explicitly specified with the
   "VALUE" parameter.  If the value type of a property is one of the
   alternate valid types, then it MUST be explicitly specified with the
   "VALUE" parameter.

4.3.1  Binary

   Value Name: BINARY

   Purpose: This value type is used to identify properties that contain
   a character encoding of inline binary data.  For example, an inline


Royer                     Expires July 2, 2005                 [Page 28]
Internet-Draft                 iCalendar                    January 2005

   attachment of an object code might be included in an iCalendar
   object.

   Formal Definition: The value type is defined by the following
   notation:

        binary     = *(4b-char) [b-end]
        ; A "BASE64" encoded character string, as defined by [RFC.2045].

        b-end      = (2b-char "==") / (3b-char "=")

        b-char = ALPHA / DIGIT / "+" / "/"

   Description: Property values with this value type MUST also include
   the inline encoding parameter sequence of ";ENCODING=BASE64".  That
   is, all inline binary data MUST first be character encoded using the
   "BASE64" encoding method defined in [8].  No additional content value
   encoding (i.e., BACKSLASH character encoding) is defined for this
   value type.

   Example: The following is an abridged example of a "BASE64" encoded
   binary value data.

        ATTACH;VALUE=BINARY;ENCODING=BASE64:MIICajCCAdOgAwIBAgICBEUwDQY
         JKoZIhvcNAQEEBQAwdzELMAkGA1UEBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlI
         ENvbW11bmljYXRpb25zIENvcnBvcmF0aW9uMRwwGgYDVQQLExNJbmZv
           <...remainder of "BASE64" encoded binary data...>

4.3.2  Boolean

   Value Name: BOOLEAN

   Purpose: This value type is used to identify properties that contain
   either a "TRUE" or "FALSE" Boolean value.

   Formal Definition: The value type is defined by the following
   notation:

        boolean    = "TRUE" / "FALSE"

   Description: These values are case insensitive text.  No additional
   content value encoding (i.e., BACKSLASH character encoding) is
   defined for this value type.

   Example: The following is an example of a hypothetical property that
   has a BOOLEAN value type:


Royer                     Expires July 2, 2005                 [Page 29]
Internet-Draft                 iCalendar                    January 2005

      GIBBERISH:TRUE

4.3.3  Calendar User Address

   Value Name: CAL-ADDRESS

   Purpose: This value type is used to identify properties that contain
   a calendar user address.

   Formal Definition: The value type is as defined by the following
   notation:

        cal-address        = uri

   Description: The value is a URI as defined by [6] or any other IANA
   registered form for a URI.  When used to address an Internet email
   transport address for a calendar user, the value MUST be a MAILTO
   URI, as defined by [6].  No additional content value encoding (i.e.,
   BACKSLASH character encoding) is defined for this value type.

   Example:

        ATTENDEE:MAILTO:jane_doe@host.com

4.3.4  Date

   Value Name: DATE

   Purpose: This value type is used to identify values that contain a
   calendar date.

   Formal Definition: The value type is defined by the following
   notation:

        date               = date-value

        date-value         = date-fullyear date-month date-mday
        date-fullyear      = 4DIGIT

        date-month         = 2DIGIT        ;01-12
        date-mday          = 2DIGIT        ;01-28, 01-29, 01-30, 01-31
                                           ;based on month/year

   Description: If the property permits, multiple "date" values are
   specified as a COMMA character (US-ASCII decimal 44) separated list
   of values.  The format for the value type is expressed as the [ISO


Royer                     Expires July 2, 2005                 [Page 30]
Internet-Draft                 iCalendar                    January 2005

   8601] complete representation, basic format for a calendar date.  The
   textual format specifies a four-digit year, two-digit month, and
   two-digit day of the month.  There are no separator characters
   between the year, month and day component text.

   No additional content value encoding (i.e., BACKSLASH character
   encoding) is defined for this value type.

   Example: The following represents July 14, 1997:

        19970714

4.3.5  Date-Time

   Value Name: DATE-TIME

   Purpose: This value type is used to identify values that specify a
   precise calendar date and time of day.

   Formal Definition: The value type is defined by the following
   notation:

        date-time  = date "T" time ;As specified in the date and time
                                   ;value definitions

   Description: If the property permits, multiple "date-time" values are
   specified as a COMMA character (US-ASCII decimal 44) separated list
   of values.  No additional content value encoding (i.e., BACKSLASH
   character encoding) is defined for this value type.

   The "DATE-TIME" data type is used to identify values that contain a
   precise calendar date and time of day.  The format is based on the
   [3] complete representation, basic format for a calendar date and
   time of day.  The text format is a concatenation of the "date",
   followed by the LATIN CAPITAL LETTER T character (US-ASCII decimal
   84) time designator, followed by the "time" format.

   The "DATE-TIME" data type expresses time values in three forms:

   The form of date and time with UTC offset MUST NOT be used.  For
   example, the following is not valid for a date-time value:

        DTSTART:19980119T230000-0800       ;Invalid time format

      FORM #1: DATE WITH LOCAL TIME

   The date with local time form is simply a date-time value that does


Royer                     Expires July 2, 2005                 [Page 31]
Internet-Draft                 iCalendar                    January 2005

   not contain the UTC designator nor does it reference a time zone.
   For example, the following represents Janurary 18, 1998, at 11 PM:

        DTSTART:19980118T230000

   Date-time values of this type are said to be "floating" and are not
   bound to any time zone in particular.  They are used to represent the
   same hour, minute, and second value regardless of which time zone is
   currently being observed.  For example, an event can be defined that
   indicates that an individual will be busy from 11:00 AM to 1:00 PM
   every day, no matter which time zone the person is in.  In these
   cases, a local time can be specified.  The recipient of an iCalendar
   object with a property value consisting of a local time, without any
   relative time zone information, SHOULD interpret the value as being
   fixed to whatever time zone the ATTENDEE is in at any given moment.
   This means that two ATTENDEEs, in different time zones, receiving the
   same event definition as a floating time, may be participating in the
   event at different actual times.  Floating time SHOULD only be used
   where that is the reasonable behavior.

   In most cases, a fixed time is desired.  To properly communicate a
   fixed time in a property value, UTC time must be specified.  Time
   zones are not in iCal-Basic and may be added in a future extension.

   FORM #2: DATE WITH UTC TIME

   The date with UTC time, or absolute time, is identified by a LATIN
   CAPITAL LETTER Z suffix character (US-ASCII decimal 90), the UTC
   designator, appended to the time value.  For example, the following
   represents January 19, 1998, at 0700 UTC:

        DTSTART:19980119T070000Z

   FORM #3: DATE WITH LOCAL TIME AND TIME ZONE REFERENCE

   Are not supported or needed in iCal-Basic implementations.  Time zone
   information is needed only when including recurring instances and
   they may be added at a later time.

   Example: The following represents July 14, 1997, at 1:30 PM in New
   York City in each of the two time formats, using the "DTSTART"
   property.

        DTSTART:19970714T133000            ;Local time
        DTSTART:19970714T173000Z           ;UTC time

   A time value MUST ONLY specify 60 seconds when specifying the
   periodic "leap second" in the time value.  For example:


Royer                     Expires July 2, 2005                 [Page 32]
Internet-Draft                 iCalendar                    January 2005

        COMPLETED:19970630T235960Z

4.3.6  Duration

   Value Name: DURATION

   Purpose: This value type is used to identify properties that contain
   a duration of time.

   Formal Definition: The value type is defined by the following
   notation:

        dur-value  = (["+"] / "-") "P" (dur-date / dur-time / dur-week)

        dur-date   = dur-day [dur-time]
        dur-time   = "T" (dur-hour / dur-minute / dur-second)
        dur-week   = 1*DIGIT "W"
        dur-hour   = 1*DIGIT "H" [dur-minute]
        dur-minute = 1*DIGIT "M" [dur-second]
        dur-second = 1*DIGIT "S"
        dur-day    = 1*DIGIT "D"

   Description: If the property permits, multiple "duration" values are
   specified by a COMMA character (US-ASCII decimal 44) separated list
   of values.  The format is expressed as the [3] basic format for the
   duration of time.  The format can represent durations in terms of
   weeks, days, hours, minutes, and seconds.

   No additional content value encoding (i.e., BACKSLASH character
   encoding) are defined for this value type.

   Example: A duration of 15 days, 5 hours and 20 seconds would be:

        P15DT5H0M20S

   A duration of 7 weeks would be:

        P7W

4.3.7  Float

   Value Name: FLOAT

   Deprecated.  Was only used with GEO which is deprecated.



Royer                     Expires July 2, 2005                 [Page 33]
Internet-Draft                 iCalendar                    January 2005

4.3.8  Integer

   Value Name:INTEGER

   Purpose: This value type is used to identify properties that contain
   a signed integer value.

   Formal Definition: The value type is defined by the following
   notation:

        integer    = (["+"] / "-") 1*DIGIT

   Description: If the property permits, multiple "integer" values are
   specified by a COMMA character (US-ASCII decimal 44) separated list
   of values.  The valid range for "integer" is -2147483648 to
   2147483647.  If the sign is not specified, then the value is assumed
   to be positive.

   No additional content value encoding (i.e., BACKSLASH character
   encoding) is defined for this value type.

   Example:

        1234567890
        -1234567890
        +1234567890
        432109876

4.3.9  Period of Time

   Value Name: PERIOD

   Purpose: This value type is used to identify values that contain a
   precise period of time.

   Formal Definition: The data type is defined by the following
   notation:

        period     = period-explicit / period-start

        period-explicit = date-time "/" date-time
        ; [ISO.8601] complete representation basic format for a period  
of
        ; time consisting of a start and end. The start MUST be before  
the
        ; end.

        period-start = date-time "/" dur-value
        ; [ISO.8601] complete representation basic format for a period  
of


Royer                     Expires July 2, 2005                 [Page 34]
Internet-Draft                 iCalendar                    January 2005

        ; time consisting of a start and positive duration of time.

   Description: If the property permits, multiple "period" values are
   specified by a COMMA character (US-ASCII decimal 44) separated list
   of values.  There are two forms of a period of time.  First, a period
   of time is identified by its start and its end.  This format is
   expressed as the [3] complete representation, basic format for
   "DATE-TIME" start of the period, followed by a SOLIDUS character
   (US-ASCII decimal 47), followed by the "DATE-TIME" of the end of the
   period.  The start of the period MUST be before the end of the
   period.  Second, a period of time can also be defined by a start and
   a positive duration of time.  The format is expressed as the [3]
   complete representation, basic format for the "DATE-TIME" start of
   the period, followed by a SOLIDUS character (US-ASCII decimal 47),
   followed by the [3] basic format for "DURATION" of the period.

   Example: The period starting at 18:00:00 UTC, on January 1, 1997 and
   ending at 07:00:00 UTC on January 2, 1997 would be:

        19970101T180000Z/19970102T070000Z

   The period start at 18:00:00 on January 1, 1997 and lasting 5 hours
   and 30 minutes would be:

        19970101T180000Z/PT5H30M

   No additional content value encoding (i.e., BACKSLASH character
   encoding) is defined for this value type.

4.3.10  Recurrence Rule

   Value Name: RECUR

   Not in iCal-Basic.

4.3.11  Text

   Value Name: TEXT

   Purpose This value type is used to identify values that contain human
   readable text.

   Formal Definition: The character sets supported by this revision of
   iCalendar are UTF-8 and US ASCII thereof.  The applicability to other
   character sets is for future work.  The value type is defined by the
   following notation.



Royer                     Expires July 2, 2005                 [Page 35]
Internet-Draft                 iCalendar                    January 2005

        text       = *(TSAFE-CHAR / ":" / DQUOTE / ESCAPED-CHAR)
        ; Folded according to description above

        ESCAPED-CHAR = "\\" / "\;" / "\," / "\N" / "\n")
           ; \\ encodes \, \N or \n encodes newline
           ; \; encodes ;, \, encodes ,

        TSAFE-CHAR = %x20-21 / %x23-2B / %x2D-39 / %x3C-5B
                     %x5D-7E / NON-US-ASCII
           ; Any character except CTLs not needed by the current
           ; character set, DQUOTE, ";", ":", "\", ","

      Note: Certain other character sets may require modification of the
      above definitions, but this is beyond the scope of this document.

   Description: If the property permits, multiple "text" values are
   specified by a COMMA character (US-ASCII decimal 44) separated list
   of values.

   The language in which the text is represented can be controlled by
   the "LANGUAGE" property parameter.

   An intentional formatted text line break MUST only be included in a
   "TEXT" property value by representing the line break with the
   character sequence of BACKSLASH (US-ASCII decimal 92), followed by a
   LATIN SMALL LETTER N (US-ASCII decimal 110) or a LATIN CAPITAL LETTER
   N (US-ASCII decimal 78), that is "\n" or "\N".

   The "TEXT" property values may also contain special characters that
   are used to signify delimiters, such as a COMMA character for lists
   of values or a SEMICOLON character for structured values.  In order
   to support the inclusion of these special characters in "TEXT"
   property values, they MUST be escaped with a BACKSLASH character.  A
   BACKSLASH character (US-ASCII decimal 92) in a "TEXT" property value
   MUST be escaped with another BACKSLASH character.  A COMMA character
   in a "TEXT" property value MUST be escaped with a BACKSLASH character
   (US-ASCII decimal 92).  A SEMICOLON character in a "TEXT" property
   value MUST be escaped with a BACKSLASH character (US-ASCII decimal
   92).  However, a COLON character in a "TEXT" property value SHALL NOT
   be escaped with a BACKSLASH character.Example: A multiple line value
   of:

        Project XYZ Final Review
        Conference Room - 3B
        Come Prepared.

   would be represented as:


Royer                     Expires July 2, 2005                 [Page 36]
Internet-Draft                 iCalendar                    January 2005

        Project XYZ Final Review\nConference Room - 3B\nCome Prepared.

4.3.12  Time

   Value Name: TIME

   Purpose: This value type is used to identify values that contain a
   time of day.

   Formal Definition: The data type is defined by the following
   notation:

        time               = time-hour time-minute time-second  
[time-utc]

        time-hour          = 2DIGIT        ;00-23
        time-minute        = 2DIGIT        ;00-59
        time-second        = 2DIGIT        ;00-60
        ;The "60" value is used to account for "leap" seconds.

        time-utc   = "Z"

   Description: If the property permits, multiple "time" values are
   specified by a COMMA character (US-ASCII decimal 44) separated list
   of values.  No additional content value encoding (i.e., BACKSLASH
   character encoding) is defined for this value type.

   The "TIME" data type is used to identify values that contain a time
   of day.  The format is based on the [3] complete representation,
   basic format for a time of day.  The text format consists of a
   two-digit 24-hour of the day (i.e., values 0-23), two- digit minute
   in the hour (i.e., values 0-59), and two-digit seconds in the minute
   (i.e., values 0-60).  The seconds value of 60 MUST only to be used to
   account for "leap" seconds.  Fractions of a second are not supported
   by this format.

   In parallel to the "DATE-TIME" definition above, the "TIME" data type
   expresses time values in three forms:

   The form of time with UTC offset MUST NOT be used.  For example, the
   following is NOT VALID for a time value:

        230000-0800        ;Invalid time format

   FORM #1 LOCAL TIME

   The local time form is simply a time value that does not contain the
   UTC designator nor does it reference a time zone.  For example, 11:00


Royer                     Expires July 2, 2005                 [Page 37]
Internet-Draft                 iCalendar                    January 2005

   PM:

        230000

   Time values of this type are said to be "floating" and are not bound
   to any time zone in particular.  They are used to represent the same
   hour, minute, and second value regardless of which time zone is
   currently being observed.  For example, an event can be defined that
   indicates that an individual will be busy from 11:00 AM to 1:00 PM
   every day, no matter which time zone the person is in.  In these
   cases, a local time can be specified.  The recipient of an iCalendar
   object with a property value consisting of a local time, without any
   relative time zone information, SHOULD interpret the value as being
   fixed to whatever time zone the ATTENDEE is in at any given moment.
   This means that two ATTENDEEs may participate in the same event at
   different UTC times; floating time SHOULD only be used where that is
   reasonable behavior.

   In most cases, a fixed time is desired.  To properly communicate a
   fixed time in a property value, UTC time MUST be specified.  Time
   zones are not in iCal-Basic and may be added in a future extension.

   FORM #2: UTC TIME

   UTC time, or absolute time, is identified by a LATIN CAPITAL LETTER Z
   suffix character (US-ASCII decimal 90), the UTC designator, appended
   to the time value.  For example, the following represents 07:00 AM
   UTC:

        070000Z

   FORM #3: LOCAL TIME AND TIME ZONE REFERENCE

   Are not supported or needed in iCal-Basic implementations.  Time zone
   information is needed only when including recurring instances and
   they may be added at a later time.

   Example: The following represents 8:30 AM in New York in Winter, five
   hours behind UTC, in each of the two formats using the "X- TIMEOFDAY"
   non-standard property:

        X-TIMEOFDAY:083000

        X-TIMEOFDAY:133000Z




Royer                     Expires July 2, 2005                 [Page 38]
Internet-Draft                 iCalendar                    January 2005

4.3.13  URI

   Value Name: URI

   Purpose: This value type is used to identify values that contain a
   uniform resource identifier (URI) type of reference to the property
   value.

   Formal Definition: The data type is defined by the following
   notation:

        uri        = <As defined by any IETF RFC>

   Description: This data type might be used to reference binary
   information, for values that are large, or otherwise undesirable to
   include directly in the iCalendar object.

   The URI value formats in RFC 1738, RFC 2111 and any other IETF
   registered value format can be specified.

   Any IANA registered URI format can be used.  These include, but are
   not limited to, those defined in RFC 1738 and RFC 2111.

   When a property parameter value is a URI value type, the URI MUST be
   specified as a quoted-string value.

   No additional content value encoding (i.e., BACKSLASH character
   encoding) is defined for this value type.

   Example: The following is a URI for a network file:

        http://host1.com/my-report.txt

4.3.14  UTC Offset

   Value Name: UTC-OFFSET

   Not needed unil recurrence rules are added.

4.4  iCalendar Object

   The Calendaring and Scheduling Core Object is a collection of
   calendaring and scheduling information.  Typically, this information
   will consist of a single iCalendar object.  However, multiple
   iCalendar objects can be sequentially grouped together.  The first
   line and last line of the iCalendar object MUST contain a pair of
   iCalendar object delimiter strings.  The syntax for an iCalendar


Royer                     Expires July 2, 2005                 [Page 39]
Internet-Draft                 iCalendar                    January 2005

   object is as follows:

        icalobject = 1*("BEGIN" ":" "VCALENDAR" CRLF
                     icalbody
                     "END" ":" "VCALENDAR" CRLF)

   The following is a simple example of an iCalendar object:

        BEGIN:VCALENDAR
        VERSION:2.0
        PRODID:-//hacksw/handcal//NONSGML v1.0//EN
        BEGIN:VEVENT
        DTSTART:19970714T170000Z
        DTEND:19970715T035959Z
        SUMMARY:Bastille Day Party
        END:VEVENT
        END:VCALENDAR

4.5  Property

   A property is the definition of an individual attribute describing a
   calendar or a calendar component.  A property takes the form defined
   by the "contentline" notation defined in section 4.1.1.

   The following is an example of a property:

        DTSTART:19960415T133000Z

   This memo imposes no ordering of properties within an iCalendar
   object.

   Property names, parameter names and enumerated parameter values are
   case insensitive.  For example, the property name "DUE" is the same
   as "due" and "Due", DTSTART:19980714T120000 is the same as
   DtStart:19980714T120000.

4.6  Calendar Components

   The body of the iCalendar object consists of a sequence of calendar
   properties and one or more calendar components.  The calendar
   properties are attributes that apply to the calendar as a whole.  The
   calendar components are collections of properties that express a
   particular calendar semantic.  For example, the calendar component
   can specify an event entry, free/busy time information, or an alarm.

   The body of the iCalendar object is defined by the following
   notation:


Royer                     Expires July 2, 2005                 [Page 40]
Internet-Draft                 iCalendar                    January 2005

        icalbody   = calprops component

        calprops   = 2*(

                   ; 'prodid' and 'version' are both REQUIRED,
                   ; but MUST NOT occur more than once

                   prodid /version /

                   ; 'calscale' and 'method' are optional,
                   ; but MUST NOT occur more than once

                   calscale        /
                   method          /

                   x-prop

                   )

        component  = 1*(eventc / freebusyc /
                   / timezonec / iana-comp / x-comp)

        iana-comp  = "BEGIN" ":" iana-token CRLF

                     1*contentline

                     "END" ":" iana-token CRLF

        x-comp     = "BEGIN" ":" x-name CRLF

                     1*contentline

                     "END" ":" x-name CRLF

   An iCalendar object MUST include the "PRODID" and "VERSION" calendar
   properties.  In addition, it MUST include at least one calendar
   component.  Special forms of iCalendar objects are possible to
   publish just busy time (i.e., only a "VFREEBUSY" calendar component)
   information.  In addition, a complex iCalendar object is possible
   that is used to capture a complete snapshot of the contents of a
   calendar (e.g., composite of many different calendar components).
   More commonly, an iCalendar object will consist of just a single
   "VEVENT" calendar component.

4.6.1  Event Component

   Component Name: "VEVENT"


Royer                     Expires July 2, 2005                 [Page 41]
Internet-Draft                 iCalendar                    January 2005

   Purpose: Provide a grouping of component properties that describe an
   event.

   Format Definition: A "VEVENT" calendar component is defined by the
   following notation:

        eventc     = "BEGIN" ":" "VEVENT" CRLF
                     eventprop *alarmc
                     "END" ":" "VEVENT" CRLF

        eventprop  = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   class / created / description / dtstart /

                   last-mod / location / organizer / priority /
                   dtstamp / seq / status / summary / transp /
                   uid / url /

                   ; either 'dtend' or 'duration' may appear in
                   ; a 'eventprop', but 'dtend' and 'duration'
                   ; MUST NOT occur in the same 'eventprop'

                   dtend / duration /

                   ; the following are optional,
                   ; and MAY occur more than once

                   attach / attendee / categories / comment /
                   contact / rstatus / related /
                   resources / x-prop

                   )

   Description: A "VEVENT" calendar component is a grouping of component
   properties, and possibly including "VALARM" calendar components, that
   represents a scheduled amount of time on a calendar.  For example, it
   can be an activity; such as a one-hour long, department meeting from
   8:00 AM to 9:00 AM, tomorrow.  Generally, an event will take up time
   on an individual calendar.  Hence, the event will appear as an opaque
   interval in a search for busy time.  Alternately, the event can have
   its Time Transparency set to "TRANSPARENT" in order to prevent
   blocking of the event in searches for busy time.

   The "VEVENT" is also the calendar component used to specify an
   anniversary or daily reminder within a calendar.  These events have a


Royer                     Expires July 2, 2005                 [Page 42]
Internet-Draft                 iCalendar                    January 2005

   DATE value type for the "DTSTART" property instead of the default
   data type of DATE-TIME.  If such a "VEVENT" has a "DTEND" property,
   it MUST be specified as a DATE value also.  The anniversary type of
   "VEVENT" can span more than one date (i.e, "DTEND" property value is
   set to a calendar date after the "DTSTART" property value).

   The "DTSTART" property for a "VEVENT" specifies the inclusive start
   of the event.  The "DTEND" property for a "VEVENT" calendar component
   specifies the non-inclusive end of the event.  For cases where a
   "VEVENT" calendar component specifies a "DTSTART" property with a
   DATE data type but no "DTEND" property, the events non-inclusive end
   is the end of the calendar date specified by the "DTSTART" property.
   For cases where a "VEVENT" calendar component specifies a "DTSTART"
   property with a DATE-TIME data type but no "DTEND" property, the
   event ends on the same calendar date and time of day specified by the
   "DTSTART" property.

   The "VEVENT" calendar component cannot be nested within another
   calendar component.  However, "VEVENT" calendar components can be
   related to each otherwith the "RELATED-TO" property.

   Example: The following is an example of the "VEVENT" calendar
   component used to represent a meeting that will also be opaque to
   searches for busy time:

        BEGIN:VEVENT
        UID:19970901T130000Z-123401@host.com
        DTSTAMP:19970901T1300Z
        DTSTART:19970903T163000Z
        DTEND:19970903T190000Z
        SUMMARY:Annual Employee Review
        CLASS:PRIVATE
        CATEGORIES:BUSINESS,HUMAN RESOURCES
        END:VEVENT

   The following is an example of the "VEVENT" calendar component used
   to represent a reminder that will not be opaque, but rather
   transparent, to searches for busy time:

        BEGIN:VEVENT
        UID:19970901T130000Z-123402@host.com
        DTSTAMP:19970901T1300Z
        DTSTART:19970401T163000Z
        DTEND:19970402T010000Z
        SUMMARY:Laurel is in sensitivity awareness class.
        CLASS:PUBLIC
        CATEGORIES:BUSINESS,HUMAN RESOURCES
        TRANSP:TRANSPARENT


Royer                     Expires July 2, 2005                 [Page 43]
Internet-Draft                 iCalendar                    January 2005

        END:VEVENT

   The following is an example of the "VEVENT" calendar component used
   to represent an anniversary that will occur once.  Since it takes up
   no time, it will not appear as opaque in a search for busy time; no
   matter what the value of the "TRANSP" property indicates:

        BEGIN:VEVENT
        UID:19970901T130000Z-123403@host.com
        DTSTAMP:19970901T1300Z
        DTSTART:19971102
        SUMMARY:Our Blissful Anniversary
        CLASS:CONFIDENTIAL
        CATEGORIES:ANNIVERSARY,PERSONAL,SPECIAL OCCASION
        END:VEVENT

4.6.2  To-do Component

   Component Name: VTODO

   VTODO is not in iCal-Basic.

4.6.3  Journal Component

   Component Name: VJOURNAL

   VJOURNAL is not in iCal-Basic.

4.6.4  Free/Busy Component

   Component Name: VFREEBUSY

   Purpose: Provide a grouping of component properties that describe
   either a request for free/busy time, describe a response to a request
   for free/busy time or describe a published set of busy time.

   Formal Definition: A "VFREEBUSY" calendar component is defined by the
   following notation:






Royer                     Expires July 2, 2005                 [Page 44]
Internet-Draft                 iCalendar                    January 2005

        freebusyc  = "BEGIN" ":" "VFREEBUSY" CRLF
                     fbprop
                     "END" ":" "VFREEBUSY" CRLF

        fbprop     = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   contact / dtstart / dtend / duration / dtstamp /
                   organizer / uid / url /

                   ; the following are optional,
                   ; and MAY occur more than once

                   attendee / comment / freebusy / rstatus / x-prop

                   )

   Description: A "VFREEBUSY" calendar component is a grouping of
   component properties that represents either a request for, a reply to
   a request for free or busy time information or a published set of
   busy time information.

   When used to request free/busy time information, the "ATTENDEE"
   property specifies the calendar users whose free/busy time is being
   requested; the "ORGANIZER" property specifies the calendar user who
   is requesting the free/busy time; the "DTSTART" and "DTEND"
   properties specify the window of time for which the free/busy time is
   being requested; the "UID" and "DTSTAMP" properties are specified to
   assist in proper sequencing of multiple free/busy time requests.

   When used to reply to a request for free/busy time, the "ATTENDEE"
   property specifies the calendar user responding to the free/busy time
   request; the "ORGANIZER" property specifies the calendar user that
   originally requested the free/busy time; the "FREEBUSY" property
   specifies the free/busy time information (if it exists); and the

   "UID" and "DTSTAMP" properties are specified to assist in proper
   sequencing of multiple free/busy time replies.

   When used to publish busy time, the "ORGANIZER" property specifies
   the calendar user associated with the published busy time; the
   "DTSTART" and "DTEND" properties specify an inclusive time window
   that surrounds the busy time information; the "FREEBUSY" property
   specifies the published busy time information; and the "DTSTAMP"
   property specifies the date/time that iCalendar object was created.


Royer                     Expires July 2, 2005                 [Page 45]
Internet-Draft                 iCalendar                    January 2005

   The "VFREEBUSY" calendar component cannot be nested within another
   calendar component.  Multiple "VFREEBUSY" calendar components can be
   specified within an iCalendar object.  This permits the grouping of
   Free/Busy information into logical collections, such as monthly
   groups of busy time information.

   The "VFREEBUSY" calendar component is intended for use in iCalendar
   object methods involving requests for free time, requests for busy
   time, requests for both free and busy, and the associated replies.

   Free/Busy information is represented with the "FREEBUSY" property.
   This property provides a terse representation of time periods.  One
   or more "FREEBUSY" properties can be specified in the "VFREEBUSY"
   calendar component.

   When present in a "VFREEBUSY" calendar component, the "DTSTART" and
   "DTEND" properties SHOULD be specified prior to any "FREEBUSY"
   properties.  In a free time request, these properties can be used in
   combination with the "DURATION" property to represent a request for a
   duration of free time within a specified window of time.

   Example: The following is an example of a "VFREEBUSY" calendar
   component used to request free or busy time information:

        BEGIN:VFREEBUSY
        ORGANIZER:MAILTO:jane_doe@host1.com
        ATTENDEE:MAILTO:john_public@host2.com
        DTSTART:19971015T050000Z
        DTEND:19971016T050000Z
        DTSTAMP:19970901T083000Z
        END:VFREEBUSY

   The following is an example of a "VFREEBUSY" calendar component used
   to reply to the request with busy time information:

        BEGIN:VFREEBUSY
        ORGANIZER:MAILTO:jane_doe@host1.com
        ATTENDEE:MAILTO:john_public@host2.com
        DTSTAMP:19970901T100000Z
        FREEBUSY;VALUE=PERIOD:19971015T050000Z/PT8H30M,
         19971015T160000Z/PT5H30M,19971015T223000Z/PT6H30M
        URL:http://host2.com/pub/busy/jpublic-01.ifb
        COMMENT:This iCalendar file contains busy time information for
          the next three months.
        END:VFREEBUSY

   The following is an example of a "VFREEBUSY" calendar component used
   to publish busy time information.


Royer                     Expires July 2, 2005                 [Page 46]
Internet-Draft                 iCalendar                    January 2005

        BEGIN:VFREEBUSY
        ORGANIZER:jsmith@host.com
        DTSTART:19980313T141711Z
        DTEND:19980410T141711Z
        FREEBUSY:19980314T233000Z/19980315T003000Z
        FREEBUSY:19980316T153000Z/19980316T163000Z
        FREEBUSY:19980318T030000Z/19980318T040000Z
        URL:http://www.host.com/calendar/busytime/jsmith.ifb
        END:VFREEBUSY

4.6.5  Time Zone Component

   Component Name: VTIMEZONE

   VTIMEZONE is not in iCal-Basic as it is not needed until recurrence
   rules are added.  Single instances can be specified in GMT.

4.6.6  Alarm Component

   Component Name: VALARM

   Purpose: Provide a grouping of component properties that define an
   alarm.

   Formal Definition: A "VALARM" calendar component is defined by the
   following notation:

             alarmc     = "BEGIN" ":" "VALARM" CRLF
                          (audioprop / dispprop / emailprop / procprop)
                          "END" ":" "VALARM" CRLF

        audioprop  = 2*(

                   ; 'action' and 'trigger' are both REQUIRED,
                   ; but MUST NOT occur more than once

                   action / trigger /

                   ; the following is optional,
                   ; but MUST NOT occur more than once

                   attach /

                   ; the following is optional,
                   ; and MAY occur more than once

                   x-prop


Royer                     Expires July 2, 2005                 [Page 47]
Internet-Draft                 iCalendar                    January 2005

                   )

        dispprop   = 3*(

                   ; the following are all REQUIRED,
                   ; but MUST NOT occur more than once

                   action / description / trigger /

                   ; the following is optional,

                   ; and MAY occur more than once

                   *x-prop

                   )

        emailprop  = 5*(

                   ; the following are all REQUIRED,
                   ; but MUST NOT occur more than once

                   action / description / trigger / summary

                   ; the following is REQUIRED,
                   ; and MAY occur more than once

                   attendee /

                   ; the following are optional,
                   ; and MAY occur more than once

                   attach / x-prop

                   )

        procprop   = 3*(

                   ; the following are all REQUIRED,
                   ; but MUST NOT occur more than once

                   action / attach / trigger /

                   ; 'description' is optional,
                   ; and MUST NOT occur more than once

                   description /


Royer                     Expires July 2, 2005                 [Page 48]
Internet-Draft                 iCalendar                    January 2005

                   ; the following is optional,
                   ; and MAY occur more than once

                   x-prop

                   )

   Description: A "VALARM" calendar component is a grouping of component
   properties that is a reminder or alarm for an event.  For example, it
   may be used to define a reminder for a pending event.

   The "VALARM" calendar component MUST include the "ACTION" and
   "TRIGGER" properties.  The "ACTION" property further constrains the
   "VALARM" calendar component in the following ways:

   When the action is "AUDIO", the alarm can also include one and only
   one "ATTACH" property, which MUST point to a sound resource, which is
   rendered when the alarm is triggered.

   When the action is "DISPLAY", the alarm MUST also include a
   "DESCRIPTION" property, which contains the text to be displayed when
   the alarm is triggered.

   When the action is "EMAIL", the alarm MUST include a "DESCRIPTION"
   property, which contains the text to be used as the message body, a
   "SUMMARY" property, which contains the text to be used as the message
   subject, and one or more "ATTENDEE" properties, which contain the
   email address of attendees to receive the message.  It can also
   include one or more "ATTACH" properties, which are intended to be
   sent as message attachments.  When the alarm is triggered, the email
   message is sent.

   When the action is "PROCEDURE", the alarm MUST include one and only
   one "ATTACH" property, which MUST point to a procedure resource,
   which is invoked when the alarm is triggered.

   The "VALARM" calendar component MUST only appear within either a
   "VEVENT" calendar component.  "VALARM" calendar components cannot be
   nested.  Multiple mutually independent "VALARM" calendar components
   can be specified for a single "VEVENT" calendar component.

   The "TRIGGER" property specifies when the alarm will be triggered.
   The "TRIGGER" property specifies a duration prior to the start of an
   event.  The "TRIGGER" edge may be explicitly set to be relative to
   the "START" or "END" of the event with the "RELATED" parameter of the
   "TRIGGER" property.  The "TRIGGER" property value type can
   alternatively be set to an absolute calendar date and time of day
   value.


Royer                     Expires July 2, 2005                 [Page 49]
Internet-Draft                 iCalendar                    January 2005

   In an alarm set to trigger on the "START" of an event, the "DTSTART"
   property MUST be present in the associated event.  In an alarm in a
   "VEVENT" calendar component set to trigger on the "END" of the event,
   either the "DTEND" property MUST be present, or the "DTSTART" and
   "DURATION" properties MUST both be present.

   The "ACTION" property is used within the "VALARM" calendar component
   to specify the type of action invoked when the alarm is triggered.
   The "VALARM" properties provide enough information for a specific
   action to be invoked.  It is typically the responsibility of a
   "Calendar User Agent" (CUA) to deliver the alarm in the specified
   fashion.  An "ACTION" property value of AUDIO specifies an alarm that
   causes a sound to be played to alert the user; DISPLAY specifies an
   alarm that causes a text message to be displayed to the user; EMAIL
   specifies an alarm that causes an electronic email message to be
   delivered to one or more email addresses; and PROCEDURE specifies an
   alarm that causes a procedure to be executed.  The "ACTION" property
   MUST specify one and only one of these values.

   In an AUDIO alarm, if the optional "ATTACH" property is included, it
   MUST specify an audio sound resource.  The intention is that the
   sound will be played as the alarm effect.  If an "ATTACH" property is
   specified that does not refer to a sound resource, or if the
   specified sound resource cannot be rendered (because its format is
   unsupported, or because it cannot be retrieved), then the CUA or
   other entity responsible for playing the sound may choose a fallback
   action, such as playing a built-in default sound, or playing no sound
   at all.

   In a DISPLAY alarm, the intended alarm effect is for the text value
   of the "DESCRIPTION" property to be displayed to the user.

   In an EMAIL alarm, the intended alarm effect is for an email message
   to be composed and delivered to all the addresses specified by the
   "ATTENDEE" properties in the "VALARM" calendar component.  The
   "DESCRIPTION" property of the "VALARM" calendar component MUST be
   used as the body text of the message, and the "SUMMARY" property MUST
   be used as the subject text.  Any "ATTACH" properties in the "VALARM"
   calendar component SHOULD be sent as attachments to the message.

   In a PROCEDURE alarm, the "ATTACH" property in the "VALARM" calendar
   component MUST specify a procedure or program that is intended to be
   invoked as the alarm effect.  If the procedure or program is in a
   format that cannot be rendered, then no procedure alarm will be
   invoked.  If the "DESCRIPTION" property is present, its value
   specifies the argument string to be passed to the procedure or
   program.  "Calendar User Agents" that receive an iCalendar object
   with this category of alarm, can disable or allow the "Calendar User"


Royer                     Expires July 2, 2005                 [Page 50]
Internet-Draft                 iCalendar                    January 2005

   to disable, or otherwise ignore this type of alarm.  While a very
   useful alarm capability, the PROCEDURE type of alarm SHOULD be
   treated by the "Calendar User Agent" as a potential security risk.

   Example: The following example is for a "VALARM" calendar component
   that specifies an audio alarm that will sound at a precise time.

        BEGIN:VALARM
        TRIGGER;VALUE=DATE-TIME:19970317T133000Z
        ACTION:AUDIO
        ATTACH;FMTTYPE=audio/basic:ftp://host.com/pub/sounds/bell-01.aud
        END:VALARM

   The following example is for a "VALARM" calendar component that
   specifies a display alarm that will trigger 30 minutes before the
   scheduled start of the event of its associated component.

        BEGIN:VALARM
        TRIGGER:-PT30M
        ACTION:DISPLAY

        DESCRIPTION:Breakfast meeting with executive\n
         team at 8:30 AM EST.
        END:VALARM

   The following example is for a "VALARM" calendar component that
   specifies an email alarm that will trigger 2 days before the
   scheduled due date/time of its associated component.  The email has a
   subject, body and attachment link.

        BEGIN:VALARM
        TRIGGER:-P2D
        ACTION:EMAIL
        ATTENDEE:MAILTO:john_doe@host.com
        SUMMARY:*** REMINDER: SEND AGENDA FOR WEEKLY STAFF MEETING ***
        DESCRIPTION:A draft agenda needs to be sent out to the attendees
          to the weekly managers meeting (MGR-LIST). Attached is a
          pointer the document template for the agenda file.
        ATTACH;FMTTYPE=application/binary:http://host.com/templates/agen
         da.doc
        END:VALARM

   The following example is for a "VALARM" calendar component that
   specifies a procedural alarm that will trigger at a precise date/time
   The alarm will invoke a procedure file.



Royer                     Expires July 2, 2005                 [Page 51]
Internet-Draft                 iCalendar                    January 2005

        BEGIN:VALARM
        TRIGGER;VALUE=DATE-TIME:19980101T050000Z
        ACTION:PROCEDURE
        ATTACH;FMTTYPE=application/binary:ftp://host.com/novo-
         procs/felizano.exe
        END:VALARM

4.7  Calendar Properties

   The Calendar Properties are attributes that apply to the iCalendar
   object, as a whole.  These properties do not appear within a calendar
   component.  They SHOULD be specified after the "BEGIN:VCALENDAR"
   property and prior to any calendar component.

4.7.1  Calendar Scale

   Property Name: CALSCALE

   Purpose: This property defines the calendar scale used for the
   calendar information specified in the iCalendar object.

   Value Type: TEXT

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: Property can be specified in an iCalendar object.  The
   default value is "GREGORIAN".

   Description: This memo is based on the Gregorian calendar scale.  The
   Gregorian calendar scale is assumed if this property is not specified
   in the iCalendar object.  It is expected that other calendar scales
   will be defined in other specifications or by future versions of this
   memo.

   Format Definition: The property is defined by the following notation:

        calscale   = "CALSCALE" calparam ":" calvalue CRLF

        calparam   = *(";" xparam)

        calvalue   = "GREGORIAN" / iana-token

   Example: The following is an example of this property:

        CALSCALE:GREGORIAN


Royer                     Expires July 2, 2005                 [Page 52]
Internet-Draft                 iCalendar                    January 2005

4.7.2  Method

   Property Name: METHOD

   Purpose: This property defines the iCalendar object method associated
   with the calendar object.

   Value Type: TEXT

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: The property can be specified in an iCalendar object.

   Description: When used in a MIME message entity, the value of this
   property MUST be the same as the Content-Type "method" parameter
   value.  This property can only appear once within the iCalendar
   object.  If either the "METHOD" property or the Content-Type "method"
   parameter is specified, then the other MUST also be specified.

   No methods are defined by this specification.  This is the subject of
   other specifications, such as the iCalendar Transport-independent

   Interoperability Protocol (iTIP) defined by [2].

   If this property is not present in the iCalendar object, then a
   scheduling transaction MUST NOT be assumed.  In such cases, the
   iCalendar object is merely being used to transport a snapshot of some
   calendar information; without the intention of conveying a scheduling
   semantic.

   Format Definition: The property is defined by the following notation:

        method     = "METHOD" metparam ":" metvalue CRLF

        metparam   = *(";" xparam)

        metvalue   = iana-token

   Example: The following is a hypothetical example of this property to
   convey that the iCalendar object is a request for a meeting:

        METHOD:REQUEST

4.7.3  Product Identifier

   Property Name: PRODID


Royer                     Expires July 2, 2005                 [Page 53]
Internet-Draft                 iCalendar                    January 2005

   Purpose: This property specifies the identifier for the product that
   created the iCalendar object.

   Value Type: TEXT

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: The property MUST be specified once in an iCalendar
   object.

   Description: The vendor of the implementation SHOULD assure that this
   is a globally unique identifier; using some technique such as an FPI
   value, as defined in [4].

   This property SHOULD not be used to alter the interpretation of an
   iCalendar object beyond the semantics specified in this memo.  For
   example, it is not to be used to further the understanding of non-
   standard properties.

   Format Definition: The property is defined by the following notation:

        prodid     = "PRODID" pidparam ":" pidvalue CRLF

        pidparam   = *(";" xparam)

        pidvalue   = text
        ;Any text that describes the product and version
        ;and that is generally assured of being unique.

   Example: The following is an example of this property.  It does not
   imply that English is the default language.

        PRODID:-//ABC Corporation//NONSGML My Product//EN

4.7.4  Version

   Property Name: VERSION

   Purpose: This property specifies the identifier corresponding to the
   highest version number or the minimum and maximum range of the
   iCalendar specification that is required in order to interpret the
   iCalendar object.

   Value Type: TEXT

   Property Parameters: Non-standard property parameters can be


Royer                     Expires July 2, 2005                 [Page 54]
Internet-Draft                 iCalendar                    January 2005

   specified on this property.

   Conformance: This property MUST be specified by an iCalendar object,
   but MUST only be specified once.

   Description: A value of "2.0" corresponds to this memo.

   Format Definition: The property is defined by the following notation:

        version    = "VERSION" verparam ":" vervalue CRLF

        verparam   = *(";" xparam)

        vervalue   = "2.0"         ;This memo
                   / maxver
                   / (minver ";" maxver)

        minver     = <A IANA registered iCalendar version identifier>
        ;Minimum iCalendar version needed to parse the iCalendar object

        maxver     = <A IANA registered iCalendar version identifier>
        ;Maximum iCalendar version needed to parse the iCalendar object

   Example: The following is an example of this property:

        VERSION:2.0

4.8  Component Properties

   The following properties can appear within calendar components, as
   specified by each component property definition.

4.8.1  New Properties

4.8.1.1  IANA Extensions

   The following properties specify descriptive information about
   calendar components.

   Property Name: EXTENSIONS

   Purpose: The existance of this property notifies the recipient that
   the sender is conforming to this specification.

   Value Type: The default value type for this property is multi valued
   TEXT.


Royer                     Expires July 2, 2005                 [Page 55]
Internet-Draft                 iCalendar                    January 2005

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: The property MUST BE specified in "VCALENDAR" calendar
   components that wish to conform to this specification.  The property
   must exist and may be empty.

   Description: The property MUST BE specified within "VCALENDAR"
   calendar components and may be empty.  An empty value indicates that
   the sender conforms to this specification and no other extensions.
   The value is comma separated list of extensions that are supported by
   the Organizer.

   The format for specifying RFC's is to specify the letters 'RFC' in
   upper case followed by the RFC number without a dash.  As in
   'RFC1234' and not 'RFC-1234'.  Non standard extensions MUST start
   with "X-" or "x-" as in "x-vendor1-extension1".  Support for IETF
   drafts is discouraged as they expire and are removed making their
   names reusable and with a possible different meaning at a later time.

   Format Definition: The property is defined by the following notation:

        extensions  = "EXTENIONS" extparam ":" text  *("," text) CRLF

        extparam    = *(";" xparam)

   Example: The following are examples of this property:

        EXTENSION:

        EXTENSION:RFC1234,RFC5678

4.8.2  Descriptive Component Properties

   The following properties specify descriptive information about
   calendar components.

4.8.2.1  Attachment

   Property Name: ATTACH

   Purpose: The property provides the capability to associate a document
   object with a calendar component.

   Value Type: The default value type for this property is URI.  The
   value type can also be set to BINARY to indicate inline binary


Royer                     Expires July 2, 2005                 [Page 56]
Internet-Draft                 iCalendar                    January 2005

   encoded content information.

   Property Parameters: Non-standard, inline encoding, format type and
   value data type property parameters can be specified on this
   property.

   Conformance: The property can be specified in a "VEVENT" or "VALARM"
   calendar components.

   Description: The property can be specified within "VEVENT" or
   "VALARM" calendar components.  This property can be specified
   multiple times within an iCalendar object.

   Format Definition: The property is defined by the following notation:

        attach     = "ATTACH" attparam ":" uri  CRLF

        attach     =/ "ATTACH" attparam ";" "ENCODING" "=" "BASE64"
                      ";" "VALUE" "=" "BINARY" ":" binary

        attparam   = *(

                   ; the following is optional,
                   ; but MUST NOT occur more than once

                   (";" fmttypeparam) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

   Example: The following are examples of this property:

        ATTACH:CID:jsmith.part3.960817T083000.xyzMail@host1.com

        ATTACH;FMTTYPE=application/postscript:ftp://xyzCorp.com/pub/
         reports/r-960812.ps

4.8.2.2  Categories

   Property Name: CATEGORIES

   Purpose: This property defines the categories for a calendar
   component.


Royer                     Expires July 2, 2005                 [Page 57]
Internet-Draft                 iCalendar                    January 2005

   Value Type: TEXT

   Property Parameters: Non-standard and language property parameters
   can be specified on this property.

   Conformance: The property can be specified within "VEVENT" calendar
   components.

   Description: This property is used to specify categories or subtypes
   of the calendar component.  The categories are useful in searching
   for a calendar component of a particular type and category.  Within
   the "VEVENT" calendar components, more than one category can be
   specified as a list of categories separated by the COMMA character
   (US-ASCII decimal 44).

   Format Definition: The property is defined by the following notation:

        categories = "CATEGORIES" catparam ":" text *("," text)
                     CRLF

        catparam   = *(

                   ; the following is optional,
                   ; but MUST NOT occur more than once

                   (";" languageparam ) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

   Example: The following are examples of this property:

        CATEGORIES:APPOINTMENT,EDUCATION

        CATEGORIES:MEETING

4.8.2.3  Classification

   Property Name: CLASS

   Purpose: This property defines the access classification for a
   calendar component.


Royer                     Expires July 2, 2005                 [Page 58]
Internet-Draft                 iCalendar                    January 2005

   Value Type: TEXT

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: The property can be specified once in a "VEVENT"
   calendar components.

   Description: An access classification is only one component of the
   general security system within a calendar application.  It provides a
   method of capturing the scope of the access the calendar owner
   intends for information within an individual calendar entry.  The
   access classification of an individual iCalendar component is useful
   when measured along with the other security components of a calendar
   system (e.g., calendar user authentication, authorization, access
   rights, access role, etc.).  Hence, the semantics of the individual
   access classifications cannot be completely defined by this memo
   alone.  Additionally, due to the "blind" nature of most exchange
   processes using this memo, these access classifications cannot serve
   as an enforcement statement for a system receiving an iCalendar
   object.  Rather, they provide a method for capturing the intention of
   the calendar owner for the access to the calendar component.

   Format Definition: The property is defined by the following notation:

        class      = "CLASS" classparam ":" classvalue CRLF

        classparam = *(";" xparam)

        classvalue = "PUBLIC" / "PRIVATE" / "CONFIDENTIAL" / iana-token
                   / x-name
        ;Default is PUBLIC

   Example: The following is an example of this property:

        CLASS:PUBLIC

4.8.2.4  Comment

   Property Name: COMMENT

   Purpose: This property specifies non-processing information intended
   to provide a comment to the calendar user.

   Value Type: TEXT

   Property Parameters: Non-standard, alternate text representation and


Royer                     Expires July 2, 2005                 [Page 59]
Internet-Draft                 iCalendar                    January 2005

   language property parameters can be specified on this property.

   Conformance: This property can be specified in "VEVENT" or
   "VFREEBUSY" calendar components.

   Description: The property can be specified multiple times.

   Format Definition: The property is defined by the following notation:

        comment    = "COMMENT" commparam ":" text CRLF

        commparam  = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   (";" altrepparam) / (";" languageparam) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

   Example: The following is an example of this property:

        COMMENT:The meeting really needs to include both ourselves
          and the customer. We can't hold this  meeting without them.
          As a matter of fact\, the venue for the meeting ought to be at
          their site. - - John

      The data type for this property is TEXT.

4.8.2.5  Description

   Property Name: DESCRIPTION

   Purpose: This property provides a more complete description of the
   calendar component, than that provided by the "SUMMARY" property.

   Value Type: TEXT

   Property Parameters: Non-standard, alternate text representation and
   language property parameters can be specified on this property.

   Conformance: The property can be specified in the "VEVENT" or


Royer                     Expires July 2, 2005                 [Page 60]
Internet-Draft                 iCalendar                    January 2005

   "VALARM" calendar components.

   Description: This property is used in the "VEVENT" to capture lengthy
   textual decriptions associated with the activity.

   This property is used in the "VALARM" calendar component to capture
   the display text for a DISPLAY category of alarm, to capture the body
   text for an EMAIL category of alarm and to capture the argument
   string for a PROCEDURE category of alarm.

   Format Definition: The property is defined by the following notation:

        description        = "DESCRIPTION" descparam ":" text CRLF

        descparam  = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   (";" altrepparam) / (";" languageparam) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

   Example: The following is an example of the property with formatted
   line breaks in the property value:

        DESCRIPTION:Meeting to provide technical review for "Phoenix"
          design.\n Happy Face Conference Room. Phoenix design team
          MUST attend this meeting.\n RSVP to team leader.

   The following is an example of the property with folding of long
   lines:

        DESCRIPTION:Last draft of the new novel is to be completed
          for the editor's proof today.

4.8.2.6  Geographic Position

   Property Name: GEO

   Deprecated.


Royer                     Expires July 2, 2005                 [Page 61]
Internet-Draft                 iCalendar                    January 2005

4.8.2.7  Location

   Property Name: LOCATION

   Purpose: The property defines the intended venue for the activity
   defined by a calendar component.

   Value Type: TEXT

   Property Parameters: Non-standard, alternate text representation and
   language property parameters can be specified on this property.

   Conformance: This property can be specified in "VEVENT" calendar
   component.

   Description: Specific venues such as conference or meeting rooms may
   be explicitly specified using this property.  An alternate
   representation may be specified that is a URI that points to
   directory information with more structured specification of the
   location.  For example, the alternate representation may specify
   either an LDAP URI pointing to an LDAP server entry or a CID URI
   pointing to a MIME body part containing a vCard [15] for the
   location.

   Format Definition: The property is defined by the following notation:

        location   = "LOCATION locparam ":" text CRLF

        locparam   = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   (";" altrepparam) / (";" languageparam) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

   Example: The following are some examples of this property:

        LOCATION:Conference Room - F123, Bldg. 002

        LOCATION;ALTREP="http://xyzcorp.com/conf-rooms/f123.vcf":
         Conference Room - F123, Bldg. 002


Royer                     Expires July 2, 2005                 [Page 62]
Internet-Draft                 iCalendar                    January 2005

4.8.2.8  Percent Complete

   Property Name: PERCENT-COMPLETE

   PERCENT-COMPLETE is not in iCal-Basic.

4.8.2.9  Priority

   Property Name: PRIORITY

   Purpose: The property defines the relative priority for a calendar
   component.

   Value Type: INTEGER

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: The property can be specified in a "VEVENT" calendar
   component.

   Description: The priority is specified as an integer in the range
   zero to nine.  A value of zero (US-ASCII decimal 48) specifies an
   undefined priority.  A value of one (US-ASCII decimal 49) is the
   highest priority.  A value of two (US-ASCII decimal 50) is the second
   highest priority.  Subsequent numbers specify a decreasing ordinal
   priority.  A value of nine (US-ASCII decimal 58) is the lowest
   priority.

   A CUA with a three-level priority scheme of "HIGH", "MEDIUM" and
   "LOW" is mapped into this property such that a property value in the
   range of one (US-ASCII decimal 49) to four (US-ASCII decimal 52)
   specifies "HIGH" priority.  A value of five (US-ASCII decimal 53) is
   the normal or "MEDIUM" priority.  A value in the range of six (US-
   ASCII decimal 54) to nine (US-ASCII decimal 58) is "LOW" priority.

   A CUA with a priority schema of "A1", "A2", "A3", "B1", "B2", ...,
   "C3" is mapped into this property such that a property value of one
   (US-ASCII decimal 49) specifies "A1", a property value of two (US-
   ASCII decimal 50) specifies "A2", a property value of three (US-ASCII
   decimal 51) specifies "A3", and so forth up to a property value of 9
   (US-ASCII decimal 58) specifies "C3".

   Other integer values are reserved for future use.

   Within a "VEVENT" calendar component, this property specifies a
   priority for the event.  This property may be useful when more than
   one event is scheduled for a given time period.


Royer                     Expires July 2, 2005                 [Page 63]
Internet-Draft                 iCalendar                    January 2005

   Format Definition: The property is specified by the following
   notation:

        priority   = "PRIORITY" prioparam ":" privalue CRLF
        ;Default is zero

        prioparam  = *(";" xparam)

        privalue   = integer       ;Must be in the range [0..9]
           ; All other values are reserved for future use

   The following is an example of a property with the highest priority:

        PRIORITY:1

   The following is an example of a property with a next highest
   priority:

        PRIORITY:2

   Example: The following is an example of a property with no priority.
   This is equivalent to not specifying the "PRIORITY" property:

        PRIORITY:0

4.8.2.10  Resources

   Property Name: RESOURCES

   Purpose: This property defines the equipment or resources anticipated
   for an activity specified by a calendar entity..

   Value Type: TEXT

   Property Parameters: Non-standard, alternate text representation and
   language property parameters can be specified on this property.

   Conformance: This property can be specified in "VEVENT" calendar
   component.

   Description: The property value is an arbitrary text.  More than one
   resource can be specified as a list of resources separated by the
   COMMA character (US-ASCII decimal 44).

   Format Definition: The property is defined by the following notation:



Royer                     Expires July 2, 2005                 [Page 64]
Internet-Draft                 iCalendar                    January 2005

        resources  = "RESOURCES" resrcparam ":" text *("," text) CRLF

        resrcparam = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   (";" altrepparam) / (";" languageparam) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

   Example: The following is an example of this property:

        RESOURCES:EASEL,PROJECTOR,VCR

        RESOURCES;LANGUAGE=fr:1 raton-laveur

4.8.2.11  Status

   Property Name: STATUS

   Purpose: This property defines the overall status or confirmation for
   the calendar component.

   Value Type: TEXT

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: This property can be specified in "VEVENT" calendar
   components.

   Description: In a group scheduled calendar component, the property is
   used by the "Organizer" to provide a confirmation of the event to the
   "Attendees".  For example in a "VEVENT" calendar component, the
   "Organizer" can indicate that a meeting is tentative, confirmed or
   cancelled.

   Format Definition: The property is defined by the following notation:



Royer                     Expires July 2, 2005                 [Page 65]
Internet-Draft                 iCalendar                    January 2005

           ;Status values for a "VEVENT"
        status     = "STATUS" statparam] ":" statvalue CRLF

        statparam  = *(";" xparam)

        statvalue  = "TENTATIVE"           ;Indicates event is
                                           ;tentative.
                   / "CONFIRMED"           ;Indicates event is
                                           ;definite.
                   / "CANCELLED"           ;Indicates event was
                                           ;cancelled.


   Example: The following is an example of this property for a "VEVENT"
   calendar component:

        STATUS:TENTATIVE

4.8.2.12  Summary

   Property Name: SUMMARY

   Purpose: This property defines a short summary or subject for the
   calendar component.

   Value Type: TEXT

   Property Parameters: Non-standard, alternate text representation and
   language property parameters can be specified on this property.

   Conformance: The property can be specified in "VEVENT" or "VALARM"
   calendar components.

   Description: This property is used in the "VEVENT" calendar
   components to capture a short, one line summary about the activity
   entry.

   This property is used in the "VALARM" calendar component to capture
   the subject of an EMAIL category of alarm.

   Format Definition: The property is defined by the following notation:




Royer                     Expires July 2, 2005                 [Page 66]
Internet-Draft                 iCalendar                    January 2005

        summary    = "SUMMARY" summparam ":" text CRLF

        summparam  = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   (";" altrepparam) / (";" languageparam) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

   Example: The following is an example of this property:

        SUMMARY:Department Party

4.8.3  Date and Time Component Properties

   The following properties specify date and time related information in
   calendar components.

4.8.3.1  Date/Time Completed

   Property Name: COMPLETED

   COMPLETED is not in iCal-Basic.

4.8.3.2  Date/Time End

   Property Name: DTEND

   Purpose: This property specifies the date and time that a calendar
   component ends.

   Value Type: The default value type is DATE-TIME.  The value type can
   be set to a DATE value type.

   Property Parameters: Non-standard and VALUE property parameters can
   be specified on this property.

   Conformance: This property can be specified in "VEVENT" or
   "VFREEBUSY" calendar components.


Royer                     Expires July 2, 2005                 [Page 67]
Internet-Draft                 iCalendar                    January 2005

   Description: Within the "VEVENT" calendar component, this property
   defines the date and time by which the event ends.  The value MUST be
   later in time than the value of the "DTSTART" property.

   Within the "VFREEBUSY" calendar component, this property defines the
   end date and time for the free or busy time information.  The time
   MUST be specified in the UTC time format.  The value MUST be later in
   time than the value of the "DTSTART" property.

   Format Definition: The property is defined by the following notation:

        dtend      = "DTEND" dtendparam":" dtendval CRLF

        dtendparam = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   (";" "VALUE" "=" ("DATE-TIME" / "DATE")) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

        dtendval   = date-time / date
        ;Value MUST match value type

   Example: The following is an example of this property:

        DTEND:19960401T235959Z

        DTEND;VALUE=DATE:19980704

4.8.3.3  Date/Time Due

   Property Name: DUE

   DUE is not in iCal-Basic.

4.8.3.4  Date/Time Start

   Property Name: DTSTART

   Purpose: This property specifies when the calendar component begins.


Royer                     Expires July 2, 2005                 [Page 68]
Internet-Draft                 iCalendar                    January 2005

   Value Type: The default value type is DATE-TIME.  The time value MUST
   be one of the forms defined for the DATE-TIME value type.  The value
   type can be set to a DATE value type.

   Property Parameters: Non-standard and VALUE data type property
   parameters can be specified on this property.

   Conformance: This property can be specified in the "VEVENT",
   "VFREEBUSY" calendar components.

   Description: Within the "VEVENT" calendar component, this property
   defines the start date and time for the event.  The property is
   REQUIRED in "VEVENT" calendar components.  Events can have a start
   date/time but no end date/time.  In that case, the event does not
   take up any time.

   Within the "VFREEBUSY" calendar component, this property defines the
   start date and time for the free or busy time information.  The time
   MUST be specified in UTC time.

   Format Definition: The property is defined by the following notation:

        dtstart    = "DTSTART" dtstparam ":" dtstval CRLF

        dtstparam  = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   (";" "VALUE" "=" ("DATE-TIME" / "DATE")) /

                   ; the following is optional,
                   ; and MAY occur more than once

                     *(";" xparam)

                   )

        dtstval    = date-time / date
        ;Value MUST match value type

   Example: The following is an example of this property:

        DTSTART:19980118T073000Z




Royer                     Expires July 2, 2005                 [Page 69]
Internet-Draft                 iCalendar                    January 2005

4.8.3.5  Duration

   Property Name: DURATION

   Purpose: The property specifies a positive duration of time.

   Value Type: DURATION

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: The property can be specified in "VEVENT", "VFREEBUSY"
   or "VALARM" calendar components.

   Description: In a "VEVENT" calendar component the property may be
   used to specify a duration of the event, instead of an explicit end
   date/time.  In a "VFREEBUSY" calendar component the property may be
   used to specify the interval of free time being requested.

   Format Definition: The property is defined by the following notation:

        duration   = "DURATION" durparam ":" dur-value CRLF
                     ;consisting of a positive duration of time.

        durparam   = *(";" xparam)

   Example: The following is an example of this property that specifies
   an interval of time of 1 hour and zero minutes and zero seconds:

        DURATION:PT1H0M0S

   The following is an example of this property that specifies an
   interval of time of 15 minutes.

        DURATION:PT15M

4.8.3.6  Free/Busy Time

   Property Name: FREEBUSY

   Purpose: The property defines one or more free or busy time
   intervals.

   Value Type: PERIOD.  The date and time values MUST be in an UTC time
   format.

   Property Parameters: Non-standard or free/busy time type property


Royer                     Expires July 2, 2005                 [Page 70]
Internet-Draft                 iCalendar                    January 2005

   parameters can be specified on this property.

   Conformance: The property can be specified in a "VFREEBUSY" calendar
   component.

   Property Parameter: "FBTYPE" and non-standard parameters can be
   specified on this property.

   Description: These time periods can be specified as either a start
   and end date-time or a start date-time and duration.  The date and
   time MUST be a UTC time format.

   "FREEBUSY" properties within the "VFREEBUSY" calendar component
   SHOULD be sorted in ascending order, based on start time and then end
   time, with the earliest periods first.

   The "FREEBUSY" property can specify more than one value, separated by
   the COMMA character (US-ASCII decimal 44).  In such cases, the
   "FREEBUSY" property values SHOULD all be of the same "FBTYPE"
   property parameter type (e.g., all values of a particular "FBTYPE"
   listed together in a single property).

   Format Definition: The property is defined by the following notation:

        freebusy   = "FREEBUSY" fbparam ":" fbvalue
                     CRLF

        fbparam    = *(
                   ; the following is optional,
                   ; but MUST NOT occur more than once

                   (";" fbtypeparam) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

        fbvalue    = period *["," period]
        ;Time value MUST be in the UTC time format.

   Example: The following are some examples of this property:




Royer                     Expires July 2, 2005                 [Page 71]
Internet-Draft                 iCalendar                    January 2005

        FREEBUSY;FBTYPE=BUSY-UNAVAILABLE:19970308T160000Z/PT8H30M

        FREEBUSY;FBTYPE=FREE:19970308T160000Z/PT3H,19970308T200000Z/PT1H

         
FREEBUSY;FBTYPE=FREE:19970308T160000Z/PT3H,19970308T200000Z/PT1H,
         19970308T230000Z/19970309T000000Z

4.8.3.7  Time Transparency

   Property Name: TRANSP

   Purpose: This property defines whether an event is transparent or not
   to busy time searches.

   Value Type: TEXT

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: This property can be specified once in a "VEVENT"
   calendar component.

   Description: Time Transparency is the characteristic of an event that
   determines whether it appears to consume time on a calendar.  Events
   that consume actual time for the individual or resource associated

   with the calendar SHOULD be recorded as OPAQUE, allowing them to be
   detected by free-busy time searches.  Other events, which do not take
   up the individual's (or resource's) time SHOULD be recorded as
   TRANSPARENT, making them invisible to free-busy time searches.

   Format Definition: The property is specified by the following
   notation:

        transp     = "TRANSP" tranparam ":" transvalue CRLF

        tranparam  = *(";" xparam)

        transvalue = "OPAQUE"      ;Blocks or opaque on busy time  
searches.
                   / "TRANSPARENT" ;Transparent on busy time searches.
           ;Default value is OPAQUE

   Example: The following is an example of this property for an event
   that is transparent or does not block on free/busy time searches:

        TRANSP:TRANSPARENT


Royer                     Expires July 2, 2005                 [Page 72]
Internet-Draft                 iCalendar                    January 2005

   The following is an example of this property for an event that is
   opaque or blocks on free/busy time searches:

        TRANSP:OPAQUE

4.8.4  Time Zone Component Properties

   Property Name: TZID

   TZID is not in iCal-Basic.

4.8.5  Time Zone Name

   Property Name: TZNAME

   TNAME is not in iCal-Basic.

4.8.6  Time Zone Offset From

   Property Name: TZOFFSETFROM

4.8.7  Time Zone Offset To

   Property Name: TZOFFSETTO

   TZOFFSETTO is not in iCal-Basic.

4.8.8  Time Zone URL

   Property Name: TZURL

   TZOFFSETTO is not in iCal-Basic.

4.9  Relationship Component Properties

   The following properties specify relationship information in calendar
   components.

4.9.1  Attendee

   Property Name: ATTENDEE

   Purpose: The property defines an "Attendee" within a calendar
   component.

   Value Type: CAL-ADDRESS


Royer                     Expires July 2, 2005                 [Page 73]
Internet-Draft                 iCalendar                    January 2005

   Property Parameters: Non-standard, language, calendar user type,
   group or list membership, participation role, participation status,
   RSVP expectation, delegatee, delegator, sent by, common name or
   directory entry reference property parameters can be specified on
   this property.

   Conformance: This property MUST be specified in an iCalendar object
   that specifies a group scheduled calendar entity.  This property MUST
   NOT be specified in an iCalendar object when publishing the calendar
   information (e.g., NOT in an iCalendar object that specifies the
   publication of a calendar user's busy time, event).  This property is
   not specified in an iCalendar object that defines calendar entities
   that are not group scheduled entities, but are entities only on a
   single user's calendar.

   Description: The property MUST only be specified within calendar
   components to specify participants, non-participants and the chair of
   a group scheduled calendar entity.  The property is specified within
   an "EMAIL" category of the "VALARM" calendar component to specify an
   email address that is to receive the email type of iCalendar alarm.

   The property parameter CN is for the common or displayable name
   associated with the calendar address; ROLE, for the intended role
   that the attendee will have in the calendar component; PARTSTAT, for
   the status of the attendee's participation; RSVP, for indicating
   whether the favor of a reply is requested; CUTYPE, to indicate the
   type of calendar user; MEMBER, to indicate the groups that the
   attendee belongs to; DELEGATED-TO, to indicate the calendar users
   that the original request was delegated to; and DELEGATED-FROM, to
   indicate whom the request was delegated from; SENT-BY, to indicate
   whom is acting on behalf of the ATTENDEE; and DIR, to indicate the
   URI that points to the directory information corresponding to the
   attendee.  These property parameters can be specified on an
   "ATTENDEE" property a "VEVENT" calendar component.  They MUST not be
   specified in an "ATTENDEE" property in a "VFREEBUSY" or "VALARM"
   calendar component.  If the LANGUAGE property parameter is specified,
   the identified language applies to the CN parameter.

   A recipient delegated a request MUST inherit the RSVP and ROLE values
   from the attendee that delegated the request to them.

   Multiple attendees can be specified by including multiple "ATTENDEE"
   properties within the calendar component.

   Format Definition: The property is defined by the following notation:



Royer                     Expires July 2, 2005                 [Page 74]
Internet-Draft                 iCalendar                    January 2005

        attendee   = "ATTENDEE" attparam ":" cal-address CRLF

        attparam   = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   (";" cutypeparam) / (";"memberparam) /
                   (";" roleparam) / (";" partstatparam) /
                   (";" rsvpparam) / (";" deltoparam) /
                   (";" delfromparam) / (";" sentbyparam) /
                   (";"cnparam) / (";" dirparam) /
                   (";" languageparam) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

   The following is an example of this property used for specifying
   multiple attendees to an event:

        ORGANIZER:MAILTO:jsmith@host1.com
        ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=TENTATIVE;CN=Henry Cabot
         :MAILTO:hcabot@host2.com
         
ATTENDEE;ROLE=REQ-PARTICIPANT;DELEGATED-FROM="MAILTO:bob@host.com"
         ;PARTSTAT=ACCEPTED;CN=Jane Doe:MAILTO:jdoe@host1.com

   The following is an example of this property with a URI to the
   directory information associated with the attendee:

        ATTENDEE;CN=John Smith;DIR="ldap://host.com:6666/o=eDABC%
         20Industries,c=3DUS??(cn=3DBJim%20Dolittle)":MAILTO:jimdo@
         host1.com

   The following is an example of this property with "delegatee" and
   "delegator" information for an event:

        ORGANIZER;CN=John Smith:MAILTO:jsmith@host.com
        ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=TENTATIVE;DELEGATED-FROM=
         "MAILTO:iamboss@host2.com";CN=Henry Cabot:MAILTO:hcabot@
         host2.com
        ATTENDEE;ROLE=NON-PARTICIPANT;PARTSTAT=DELEGATED;DELEGATED-TO=
         "MAILTO:hcabot@host2.com";CN=The Big Cheese:MAILTO:iamboss
         @host2.com
        ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=ACCEPTED;CN=Jane Doe


Royer                     Expires July 2, 2005                 [Page 75]
Internet-Draft                 iCalendar                    January 2005

         :MAILTO:jdoe@host1.com

   Example: The following is an example of this property's use when
   another calendar user is acting on behalf of the "Attendee":

        ATTENDEE;SENT-BY=MAILTO:jan_doe@host1.com;CN=John Smith:MAILTO:
         jsmith@host1.com

4.9.2  Contact

   Property Name: CONTACT

   Purpose: The property is used to represent contact information or
   alternately a reference to contact information associated with the
   calendar component.

   Value Type: TEXT

   Property Parameters: Non-standard, alternate text representation and
   language property parameters can be specified on this property.

   Conformance: The property can be specified in a "VEVENT" or
   "VFREEBUSY" calendar component.

   Description: The property value consists of textual contact
   information.  An alternative representation for the property value
   can also be specified that refers to a URI pointing to an alternate
   form, such as a vCard [15], for the contact information.

   Format Definition: The property is defined by the following notation:

        contact    = "CONTACT" contparam ":" text CRLF

        contparam  = *(
                   ; the following are optional,
                   ; but MUST NOT occur more than once

                   (";" altrepparam) / (";" languageparam) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

   Example: The following is an example of this property referencing


Royer                     Expires July 2, 2005                 [Page 76]
Internet-Draft                 iCalendar                    January 2005

   textual contact information:

        CONTACT:Jim Dolittle\, ABC Industries\, +1-919-555-1234

   The following is an example of this property with an alternate
   representation of a LDAP URI to a directory entry containing the
   contact information:

        CONTACT;ALTREP="ldap://host.com:6666/o=3DABC%20Industries\,
         c=3DUS??(cn=3DBJim%20Dolittle)":Jim Dolittle\, ABC Industries\,
         +1-919-555-1234

   The following is an example of this property with an alternate
   representation of a MIME body part containing the contact
   information, such as a vCard [15] embedded in a [MIME-DIR]
   content-type:

        CONTACT;ALTREP="CID=<part3.msg970930T083000SILVER@host.com>":Jim
          Dolittle\, ABC Industries\, +1-919-555-1234

   The following is an example of this property referencing a network
   resource, such as a vCard [15] object containing the contact
   information:

        CONTACT;ALTREP="http://host.com/pdi/jdoe.vcf":Jim
          Dolittle\, ABC Industries\, +1-919-555-1234

4.9.3  Organizer

   Property Name: ORGANIZER

   Purpose: The property defines the organizer for a calendar component.

   Value Type: CAL-ADDRESS

   Property Parameters: Non-standard, language, common name, directory
   entry reference, sent by property parameters can be specified on this
   property.

   Conformance: This property MUST be specified in an iCalendar object
   that specifies a group scheduled calendar entity.  This property MUST
   be specified in an iCalendar object that specifies the publication of
   a calendar user's busy time.  This property MUST NOT be specified in
   an iCalendar object that defines calendar entities that are not group
   scheduled entities, but are entities only on a single user's
   calendar.


Royer                     Expires July 2, 2005                 [Page 77]
Internet-Draft                 iCalendar                    January 2005

   Description: The property is specified within the "VEVENT" calendar
   components to specify the organizer of a group scheduled calendar
   entity.  The property is specified within the "VFREEBUSY" calendar
   component to specify the calendar user requesting the free or busy
   time.  When publishing a "VFREEBUSY" calendar component, the property
   is used to specify the calendar that the published busy time came
   from.

   The property has the property parameters CN, for specifying the
   common or display name associated with the "Organizer", DIR, for
   specifying a pointer to the directory information associated with the
   "Organizer", SENT-BY, for specifying another calendar user that is
   acting on behalf of the "Organizer".  The non-standard parameters may
   also be specified on this property.  If the LANGUAGE property
   parameter is specified, the identified language applies to the CN
   parameter value.

   Format Definition: The property is defined by the following notation:

        organizer  = "ORGANIZER" orgparam ":"
                     cal-address CRLF

        orgparam   = *(

                   ; the following are optional,

                   ; but MUST NOT occur more than once

                   (";" cnparam) / (";" dirparam) / (";" sentbyparam) /
                   (";" languageparam) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

   Example: The following is an example of this property:

        ORGANIZER;CN=John Smith:MAILTO:jsmith@host1.com

   The following is an example of this property with a pointer to the
   directory information associated with the organizer:

        ORGANIZER;CN=JohnSmith;DIR="ldap://host.com:6666/o=3DDC%20Associ
         ates,c=3DUS??(cn=3DJohn%20Smith)":MAILTO:jsmith@host1.com


Royer                     Expires July 2, 2005                 [Page 78]
Internet-Draft                 iCalendar                    January 2005

   The following is an example of this property used by another calendar
   user who is acting on behalf of the organizer, with responses
   intended to be sent back to the organizer, not the other calendar
   user:

        ORGANIZER;SENT-BY="MAILTO:jane_doe@host.com":
         MAILTO:jsmith@host1.com

4.9.4  Recurrence ID

   Property Name: RECURRENCE-ID

4.9.5  Related To

   Property Name: RELATED-TO

   Deprecated.

4.9.6  Uniform Resource Locator

   Property Name: URL

   Purpose: This property defines a Uniform Resource Locator (URL)
   associated with the iCalendar object.

   Value Type: URI

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: This property can be specified once in the "VEVENT" or
   "VFREEBUSY" calendar components.

   Description: This property may be used in a calendar component to
   convey a location where a more dynamic rendition of the calendar
   information associated with the calendar component can be found.
   This memo does not attempt to standardize the form of the URI, nor
   the format of the resource pointed to by the property value.  If the
   URL property and Content-Location MIME header are both specified,
   they MUST point to the same resource.

   Format Definition: The property is defined by the following notation:

        url        = "URL" urlparam ":" uri CRLF

        urlparam   = *(";" xparam)


Royer                     Expires July 2, 2005                 [Page 79]
Internet-Draft                 iCalendar                    January 2005

   Example: The following is an example of this property:

        URL:http://abc.com/pub/calendars/jsmith/mytime.ics

4.9.7  Unique Identifier

   Property Name: UID

   Purpose: This property defines the persistent, globally unique
   identifier for the calendar component.

   Value Type: TEXT

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: The property MUST be specified in the "VEVENT" or
   "VFREEBUSY" calendar components.

   Description: The UID itself MUST be a globally unique identifier.
   The generator of the identifier MUST guarantee that the identifier is
   unique.  There are several algorithms that can be used to accomplish
   this.  The identifier is RECOMMENDED to be the identical syntax to
   the [5] addr-spec.  A good method to assure uniqueness is to put the
   domain name or a domain literal IP address of the host on which the
   identifier was created on the right hand side of the "@", and on the
   left hand side, put a combination of the current calendar date and
   time of day (i.e., formatted in as a DATE-TIME value) along with some
   other currently unique (perhaps sequential) identifier available on
   the system (for example, a process id number).  Using a date/time
   value on the left hand side and a domain name or domain literal on

   the right hand side makes it possible to guarantee uniqueness since
   no two hosts should be using the same domain name or IP address at
   the same time.  Though other algorithms will work, it is RECOMMENDED
   that the right hand side contain some domain identifier (either of
   the host itself or otherwise) such that the generator of the message
   identifier can guarantee the uniqueness of the left hand side within
   the scope of that domain.

   This is the method for correlating scheduling messages with the
   referenced "VEVENT" calendar component.

   This property is an important method for group scheduling
   applications to match requests with later replies, modifications or
   deletion requests.  Calendaring and scheduling applications MUST
   generate this property in "VEVENT" calendar components to assure


Royer                     Expires July 2, 2005                 [Page 80]
Internet-Draft                 iCalendar                    January 2005

   interoperability with other group scheduling applications.  This
   identifier is created by the calendar system that generates an
   iCalendar object.

   Implementations MUST be able to receive and persist values of at
   least 255 characters for this property.

   Format Definition: The property is defined by the following notation:

        uid        = "UID" uidparam ":" text CRLF

        uidparam   = *(";" xparam)

   Example: The following is an example of this property:

        UID:19960401T080045Z-4000F192713-0052@host1.com

4.10  Recurrence Component Properties

   In iCal-Basic there are no recurrence rules.  If two or more
   components contain exactly the same "UID" value, exactly the same
   "SEQUENCE" value, and exactly the same "DTSTAMP" value, then then are
   all instances of the same series of components.  This allows
   implementations that do not understand any recurrence rules that may
   be added later to be able to understand a series of components are
   all in one collection without having to understand any recurrence
   rule properties.  iCal-Basic only implementations must ignore the
   RFC-2445 recurrence properties and parameters.

4.10.1  Exception Date/Times

   Property Name: EXDATE

   EXDATE is not in iCal-Basic

4.10.2  Exception Rule

   Property Name: EXRULE

   EXRULE is not in iCal-Basic

4.10.3  Recurrence Date/Times

   Property Name: RDATE

   RDATE is not in iCal-Basic


Royer                     Expires July 2, 2005                 [Page 81]
Internet-Draft                 iCalendar                    January 2005

4.10.4  Recurrence Rule

   Property Name: RRULE

   RRULE is not in iCal-Basic

4.11  Alarm Component Properties

   The following properties specify alarm information in calendar
   components.

4.11.1  Action

   Property Name: ACTION

   Purpose: This property defines the action to be invoked when an alarm
   is triggered.

   Value Type: TEXT

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: This property MUST be specified once in a "VALARM"
   calendar component.

   Description: Each "VALARM" calendar component has a particular type
   of action associated with it.  This property specifies the type of
   action

   Format Definition: The property is defined by the following notation:

        action     = "ACTION" actionparam ":" actionvalue CRLF

        actionparam        = *(";" xparam)

        actionvalue        = "AUDIO" / "DISPLAY" / "EMAIL" / "PROCEDURE"
                           / iana-token / x-name

   Example: The following are examples of this property in a "VALARM"
   calendar component:

        ACTION:AUDIO

        ACTION:DISPLAY

        ACTION:PROCEDURE


Royer                     Expires July 2, 2005                 [Page 82]
Internet-Draft                 iCalendar                    January 2005

4.11.2  Repeat Count

   Property Name: REPEAT

   REPEAT is deprecated.

4.11.3  Trigger

   Property Name: TRIGGER

   Purpose: This property specifies when an alarm will trigger.

   Value Type: The default value type is DURATION.  The value type can
   be set to a DATE-TIME value type, in which case the value MUST
   specify a UTC formatted DATE-TIME value.

   Property Parameters: Non-standard, value data type, or trigger
   relationship property parameters can be specified on this property.
   The trigger relationship property parameter MUST only be specified
   when the value type is DURATION.

   Conformance: This property MUST be specified in the "VALARM" calendar
   component.

   Description: Within the "VALARM" calendar component, this property
   defines when the alarm will trigger.  The default value type is
   DURATION, specifying a relative time for the trigger of the alarm.
   The default duration is relative to the start of an event that the
   alarm is associated with.  The duration can be explicitly set

   to trigger from either the end or the start of the associated event
   with the "RELATED" parameter.  A value of START will set the alarm to
   trigger off the start of the associated event.  A value of END will
   set the alarm to trigger off the end of the associated event.

   Either a positive or negative duration may be specified for the
   "TRIGGER" property.  An alarm with a positive duration is triggered
   after the associated start or end of the event.  An alarm with a
   negative duration is triggered before the associated start or end of
   the event.

   The "RELATED" property parameter is not valid if the value type of
   the property is set to DATE-TIME (i.e., for an absolute date and time
   alarm trigger).  If a value type of DATE-TIME is specified, then the
   property value MUST be specified in the UTC time format.

   If the trigger is set relative to START, then the "DTSTART" property
   MUST be present in the associated "VEVENT" calendar component.  If an


Royer                     Expires July 2, 2005                 [Page 83]
Internet-Draft                 iCalendar                    January 2005

   alarm is specified for an event with the trigger set relative to the
   END, then the "DTEND" property or the "DSTART" and "DURATION'
   properties MUST be present in the associated "VEVENT" calendar
   component.

   Alarms specified in an event which is defined in terms of a DATE
   value type will be triggered relative to 00:00:00 UTC on the
   specified date.  For example, if "DTSTART:19980205, then the duration
   trigger will be relative to19980205T000000Z.

   Format Definition: The property is defined by the following notation:

        trigger    = "TRIGGER" (trigrel / trigabs)

        trigrel    = *(

                   ; the following are optional,
                   ; but MUST NOT occur more than once

                     (";" "VALUE" "=" "DURATION") /
                     (";" trigrelparam) /

                   ; the following is optional,

                   ; and MAY occur more than once

                     (";" xparam)
                     ) ":"  dur-value

        trigabs    = 1*(

                   ; the following is REQUIRED,
                   ; but MUST NOT occur more than once

                     (";" "VALUE" "=" "DATE-TIME") /

                   ; the following is optional,
                   ; and MAY occur more than once

                     (";" xparam)

                     ) ":" date-time

   Example: A trigger set 15 minutes prior to the start of the event.

        TRIGGER:-P15M

   A trigger set 5 minutes after the end of the event.


Royer                     Expires July 2, 2005                 [Page 84]
Internet-Draft                 iCalendar                    January 2005

        TRIGGER;RELATED=END:P5M

   A trigger set to an absolute date/time.

        TRIGGER;VALUE=DATE-TIME:19980101T050000Z

4.12  Change Management Component Properties

   The following properties specify change management information in
   calendar components.

4.12.1  Date/Time Created

   Property Name: CREATED

   Purpose: This property specifies the date and time that the calendar
   information was created by the calendar user agent in the calendar
   store.

   Note: This is analogous to the creation date and time for a file in
   the file system.

   Value Type: DATE-TIME

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: The property can be specified once in "VEVENT" calendar
   components.

   Description: The date and time is a UTC value.

   Format Definition: The property is defined by the following notation:

        created    = "CREATED" creaparam ":" date-time CRLF

        creaparam  = *(";" xparam)

   Example: The following is an example of this property:

        CREATED:19960329T133000Z

4.12.2  Date/Time Stamp

   Property Name: DTSTAMP


Royer                     Expires July 2, 2005                 [Page 85]
Internet-Draft                 iCalendar                    January 2005

   Purpose: The property indicates the date/time that the instance of
   the iCalendar object was created.

   Value Type: DATE-TIME

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: This property MUST be included in the "VEVENT" or
   "VFREEBUSY" calendar components.

   Description: The value MUST be specified in the UTC time format.

   This property is also useful to protocols such as [1] that have
   inherent latency issues with the delivery of content.  This property
   will assist in the proper sequencing of messages containing iCalendar
   objects.

   This property is different than the "CREATED" and "LAST-MODIFIED"
   properties.  These two properties are used to specify when the
   particular calendar data in the calendar store was created and last
   modified.  This is different than when the iCalendar object
   representation of the calendar service information was created or
   last modified.

   Format Definition: The property is defined by the following notation:

        dtstamp    = "DTSTAMP" stmparam ":" date-time CRLF

        stmparam   = *(";" xparam)

   Example:

        DTSTAMP:19971210T080000Z

4.12.3  Last Modified

   Property Name: LAST-MODIFIED

   Purpose: The property specifies the date and time that the
   information associated with the calendar component was last revised
   in the calendar store.
      Note: This is analogous to the modification date and time for a
      file in the file system.

   Value Type: DATE-TIME


Royer                     Expires July 2, 2005                 [Page 86]
Internet-Draft                 iCalendar                    January 2005

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: This property can be specified in the "VEVENT" calendar
   components.

   Description: The property value MUST be specified in the UTC time
   format.

   Format Definition: The property is defined by the following notation:

        last-mod   = "LAST-MODIFIED" lstparam ":" date-time CRLF

        lstparam   = *(";" xparam)

   Example: The following is are examples of this property:

        LAST-MODIFIED:19960817T133000Z

4.12.4  Sequence Number

   Property Name: SEQUENCE

   Purpose: This property defines the revision sequence number of the
   calendar component within a sequence of revisions.

   Value Type: integer

   Property Parameters: Non-standard property parameters can be
   specified on this property.

   Conformance: The property can be specified in "VEVENT" calendar
   component.

   Description: When a calendar component is created, its sequence
   number is zero (US-ASCII decimal 48).  It is monotonically
   incremented by the "Organizer's" CUA each time the "Organizer" makes
   a significant revision to the calendar component.  When the
   "Organizer" makes changes to one of the following properties, the
   sequence number MUST be incremented:
      .  "DTSTART"
      .  "DTEND"
      .  "DUE"
      .  "STATUS"

   In addition, changes made by the "Organizer" to other properties can
   also force the sequence number to be incremented.  The "Organizer"


Royer                     Expires July 2, 2005                 [Page 87]
Internet-Draft                 iCalendar                    January 2005

   CUA MUST increment the sequence number when ever it makes changes to
   properties in the calendar component that the "Organizer" deems will
   jeopardize the validity of the participation status of the
   "Attendees".  For example, changing the location of a meeting from
   one locale to another distant locale could effectively impact the
   participation status of the "Attendees".

   The "Organizer" includes this property in an iCalendar object that it
   sends to an "Attendee" to specify the current version of the calendar
   component.

   The "Attendee" includes this property in an iCalendar object that it
   sends to the "Organizer" to specify the version of the calendar
   component that the "Attendee" is referring to.

   A change to the sequence number is not the mechanism that an
   "Organizer" uses to request a response from the "Attendees".  The
   "RSVP" parameter on the "ATTENDEE" property is used by the
   "Organizer" to indicate that a response from the "Attendees" is
   requested.

   Format Definition: This property is defined by the following
   notation:

        seq = "SEQUENCE" seqparam ":" integer CRLF
        ; Default is "0"

        seqparam   = *(";" xparam)

   Example: The following is an example of this property for a calendar
   component that was just created by the "Organizer".

        SEQUENCE:0

   The following is an example of this property for a calendar component
   that has been revised two different times by the "Organizer".

        SEQUENCE:2

4.13  Miscellaneous Component Properties

   The following properties specify information about a number of
   miscellaneous features of calendar components.

4.13.1  Non-standard Properties

   Property Name: Any property name with a "X-" prefix


Royer                     Expires July 2, 2005                 [Page 88]
Internet-Draft                 iCalendar                    January 2005

   Purpose: This class of property provides a framework for defining
   non-standard properties.

   Value Type: TEXT

   Property Parameters: Non-standard and language property parameters
   can be specified on this property.

   Conformance: This property can be specified in any calendar
   component.

   Description: The MIME Calendaring and Scheduling Content Type
   provides a "standard mechanism for doing non-standard things".  This
   extension support is provided for implementers to "push the envelope"
   on the existing version of the memo.  Extension properties are
   specified by property and/or property parameter names that have the
   prefix text of "X-" (the two character sequence: LATIN CAPITAL LETTER
   X character followed by the HYPEN-MINUS character).  It is
   recommended that vendors concatenate onto this sentinel another short
   prefix text to identify the vendor.  This will facilitate readability
   of the extensions and minimize possible collision of names between
   different vendors.  User agents that support this content type are
   expected to be able to parse the extension properties and property
   parameters but can ignore them.

   At present, there is no registration authority for names of extension
   properties and property parameters.  The data type for this property
   is TEXT.  Optionally, the data type can be any of the other valid
   data types.

   Format Definition: The property is defined by the following notation:

        x-prop     = x-name *(";" xparam) [";" languageparam] ":" text  
CRLF
           ; Lines longer than 75 octets should be folded

   Example: The following might be the ABC vendor's extension for an
   audio-clip form of subject property:

         
X-ABC-MMSUBJ;X-ABC-MMSUBJTYPE=wave:http://load.noise.org/mysubj.wav

4.13.2  Request Status

   Property Name: REQUEST-STATUS

   Purpose: This property defines the status code returned for a
   scheduling request.


Royer                     Expires July 2, 2005                 [Page 89]
Internet-Draft                 iCalendar                    January 2005

   Value Type: TEXT

   Property Parameters: Non-standard and language property parameters
   can be specified on this property.

   Conformance: The property can be specified in "VEVENT" or "VFREEBUSY"
   calendar component.

   Description: This property is used to return status code information
   related to the processing of an associated iCalendar object.  The
   data type for this property is TEXT.

   The value consists of a short return status component, a longer
   return status description component, and optionally a status-specific
   data component.  The components of the value are separated by the
   SEMICOLON character (US-ASCII decimal 59).

   The short return status is a PERIOD character (US-ASCII decimal 46)
   separated 3-tuple of integers.  For example, "3.1.1".  The successive
   levels of integers provide for a successive level of status code
   granularity.

   The following are initial classes for the return status code.
   Individual iCalendar object methods will define specific return
   status codes for these classes.  In addition, other classes for the
   return status code may be defined using the registration process
   defined later in this memo.












Royer                     Expires July 2, 2005                 [Page 90]
Internet-Draft                 iCalendar                    January 2005

        |==============+===============================================|
        | Short Return | Longer Return Status Description              |
        | Status Code  |                                               |
        |==============+===============================================|
        |    1.xx      | Preliminary success. This class of status     |
        |              | of status code indicates that the request has |
        |              | request has been initially processed but that |
        |              | completion is pending.                        |
        |==============+===============================================|
        |    2.xx      | Successful. This class of status code         |
        |              | indicates that the request was completed      |
        |              | successfuly. However, the exact status code   |
        |              | can indicate that a fallback has been taken.  |
        |==============+===============================================|
        |    3.xx      | Client Error. This class of status code       |
        |              | indicates that the request was not successful.|
        |              | The error is the result of either a syntax or |
        |              | a semantic error in the client formatted      |
        |              | request. Request should not be retried until  |
        |              | the condition in the request is corrected.    |
        |==============+===============================================|
        |    4.xx      | Scheduling Error. This class of status code   |
        |              | indicates that the request was not successful.|
        |              | Some sort of error occurred within the        |
        |              | calendaring and scheduling service, not       |
        |              | directly related to the request itself.       |
        |==============+===============================================|

   Format Definition: The property is defined by the following notation:











Royer                     Expires July 2, 2005                 [Page 91]
Internet-Draft                 iCalendar                    January 2005

        rstatus    = "REQUEST-STATUS" rstatparam ":"
                     statcode ";" statdesc [";" extdata]

        rstatparam = *(

                   ; the following is optional,
                   ; but MUST NOT occur more than once

                   (";" languageparm) /

                   ; the following is optional,
                   ; and MAY occur more than once

                   (";" xparam)

                   )

        statcode   = 1*DIGIT *("." 1*DIGIT)
        ;Hierarchical, numeric return status code

        statdesc   = text
        ;Textual status description

        extdata    = text
        ;Textual exception data. For example, the offending property
        ;name and value or complete property line.

   Example: The following are some possible examples of this property.
   The COMMA and SEMICOLON separator characters in the property value
   are BACKSLASH character escaped because they appear in a  text value.
   The 2.8 status would be returned by iCal-Basic only implementations
   as recurring ruules do not exist.

        REQUEST-STATUS:2.0;Success

        REQUEST-STATUS:3.1;Invalid property value;DTSTART:96-Apr-01

        REQUEST-STATUS:2.8; Success\, repeating event ignored. Scheduled
         as a single event.;RRULE:FREQ=WEEKLY\;INTERVAL=2

        REQUEST-STATUS:4.1;Event conflict. Date/time is busy.

        REQUEST-STATUS:3.7;Invalid calendar user;ATTENDEE:
         MAILTO:jsmith@host.com




Royer                     Expires July 2, 2005                 [Page 92]
Internet-Draft                 iCalendar                    January 2005

5.  iCalendar Object Examples

   The following examples are provided as an informational source of
   illustrative iCalendar objects consistent with this content type.

   The following example specifies a three-day conference that begins at
   8:00 AM EDT, September 18, 1996 and end at 6:00 PM EDT, September 20,
   1996.

        BEGIN:VCALENDAR PRODID:-//xyz Corp//NONSGML PDA Calendar Verson
        1.0//EN VERSION:2.0 BEGIN:VEVENT DTSTAMP:19960704T120000Z
        UID:uid1@host.com ORGANIZER:MAILTO:jsmith@host.com
        DTSTART:19960918T143000Z DTEND:19960920T220000Z STATUS:CONFIRMED

        CATEGORIES:CONFERENCE SUMMARY:Networld+Interop Conference
        DESCRIPTION:Networld+Interop Conference
          and Exhibit\nAtlanta World Congress Center\n
         Atlanta, Georgia END:VEVENT END:VCALENDAR

   The following example specifies a group scheduled meeting that begin
   at 8:30 AM UTC on March 12, 1998 and end at 9:30 AM UTC on March 12,
   1998.  The "Organizer" has scheduled the meeting with one or more
   calendar users in a group.

        BEGIN:VCALENDAR
        PRODID:-//RDU Software//NONSGML HandCal//EN
        VERSION:2.0
        BEGIN:VEVENT
        DTSTAMP:19980309T231000Z
        UID:guid-1.host1.com
        ORGANIZER;ROLE=CHAIR:MAILTO:mrbig@host.com
        ATTENDEE;RSVP=TRUE;ROLE=REQ-PARTICIPANT;CUTYPE=GROUP:
         MAILTO:employee-A@host.com
        DESCRIPTION:Project XYZ Review Meeting
        CATEGORIES:MEETING
        CLASS:PUBLIC
        CREATED:19980309T130000Z
        SUMMARY:XYZ Project Review
        DTSTART:19980312T083000Z
        DTEND:19980312T093000Z
        LOCATION:1CP Conference Room 4350
        END:VEVENT
        END:VCALENDAR

   The following is an example of an iCalendar object passed in a MIME
   message with a single body part consisting of a "text/calendar"
   Content Type.


Royer                     Expires July 2, 2005                 [Page 93]
Internet-Draft                 iCalendar                    January 2005

        TO:jsmith@host1.com
        FROM:jdoe@host1.com
        MIME-VERSION:1.0
        MESSAGE-ID:<id3@host1.com>
        CONTENT-TYPE:text/calendar

        BEGIN:VCALENDAR
        METHOD:xyz
        VERSION:2.0
        PRODID:-//ABC Corporation//NONSGML My Product//EN
        BEGIN:VEVENT
        DTSTAMP:19970324T1200Z
        SEQUENCE:0
        UID:uid3@host1.com
        ORGANIZER:MAILTO:jdoe@host1.com
        ATTENDEE;RSVP=TRUE:MAILTO:jsmith@host1.com
        DTSTART:19970324T123000Z
        DTEND:19970324T210000Z
        CATEGORIES:MEETING,PROJECT
        CLASS:PUBLIC
        SUMMARY:Calendaring Interoperability Planning Meeting
        DESCRIPTION:Discuss how we can test c&s interoperability\n
         using iCalendar and other IETF standards.
        LOCATION:LDB Lobby
        ATTACH;FMTTYPE=application/postscript:ftp://xyzCorp.com/pub/
         conf/bkgrnd.ps
        END:VEVENT
        END:VCALENDAR

   The following is an example of published busy time information.  The
   iCalendar object might be placed in the network resource
   www.host.com/calendar/busytime/jsmith.ifb.

        BEGIN:VCALENDAR
        VERSION:2.0
        PRODID:-//RDU Software//NONSGML HandCal//EN
        BEGIN:VFREEBUSY

        ORGANIZER:MAILTO:jsmith@host.com
        DTSTART:19980313T141711Z
        DTEND:19980410T141711Z
        FREEBUSY:19980314T233000Z/19980315T003000Z
        FREEBUSY:19980316T153000Z/19980316T163000Z
        FREEBUSY:19980318T030000Z/19980318T040000Z
        URL:http://www.host.com/calendar/busytime/jsmith.ifb
        END:VFREEBUSY
        END:VCALENDAR


Royer                     Expires July 2, 2005                 [Page 94]
Internet-Draft                 iCalendar                    January 2005

6.  Recommended Practices

   These recommended practices should be followed in order to assure
   consistent handling of the following cases for an iCalendar object.
      1.  Content lines longer than 75 octets SHOULD be folded.
      2.  A calendar entry with a "DTSTART" property but no "DTEND"
      property does not take up any time.  It is intended to represent
      an event that is associated with a given calendar date and time of
      day, such as an anniversary.  Since the event does not take up any
      time, it MUST NOT be used to record busy time no matter what the
      value for the "TRANSP" property.
      3.  When the "DTSTART" and "DTEND", for "VEVENT" and "VFREEBUSY"
      calendar components, have the same value data type (e.g.,
      DATE-TIME), they SHOULD specify values in the same time format
      (e.g., UTC time format).
      4.  When the multiple iCalendar object have multiple instances
      each having the same start date/time, they should be collapsed to,
      and considered as, a single instance when every other property and
      parameter value are also the same.
      5.  When a calendar user receives multiple requests for the same
      calendar component (e.g., REQUEST for a "VEVENT" calendar
      component) as a result of being on multiple mailing lists
      specified by "ATTENDEE" properties in the request, they SHOULD
      respond to only one of the requests.  The calendar user SHOULD
      also specify (using the "MEMBER" parameter of the "ATTENDEE"
      property) which mailing list they are a member of.
      6.  An implementation can truncate a "SUMMARY" property value to
      255 characters.
      7.  If seconds of the minute are not supported by an
      implementation, then a value of "00" SHOULD be specified for the
      seconds component in a time value.
      8.  If the value type parameter (VALUE=) contains an unknown value
      type, it SHOULD be treated as TEXT.
      9.  Some possible English values for CATEGORIES property include
      "ANNIVERSARY", "APPOINTMENT", "BUSINESS", "EDUCATION", "HOLIDAY",
      "MEETING", "MISCELLANEOUS", "NON-WORKING HOURS", "NOT IN OFFICE",
      "PERSONAL", "PHONE CALL", "SICK DAY", "SPECIAL OCCASION",
      "TRAVEL", "VACATION".  Categories can be specified in any
      registered language.
      10.  Some possible English values for RESOURCES property include
      "CATERING", "CHAIRS", "COMPUTER PROJECTOR", "EASEL", "OVERHEAD
      PROJECTOR", "SPEAKER PHONE", "TABLE", "TV", "VCR", "VIDEO PHONE",
      "VEHICLE".  Resources can be specified in any registered language.




Royer                     Expires July 2, 2005                 [Page 95]
Internet-Draft                 iCalendar                    January 2005

7.  Registration of Content Type Elements

   This section provides the process for registration of MIME
   Calendaring and Scheduling Content Type iCalendar object methods and
   new or modified properties.

7.1  Registration of New and Modified iCalendar Object Methods

   New MIME Calendaring and Scheduling Content Type iCalendar object
   methods are registered by the publication of an IETF Request for
   Comments (RFC).  Changes to an iCalendar object method are registered
   by the publication of a revision of the RFC defining the method.

7.2  Registration of New Properties

   This section defines procedures by which new properties or enumerated
   property values for the MIME Calendaring and Scheduling Content Type
   can be registered with the IANA.  Non-IANA properties can be used by
   bilateral agreement, provided the associated properties names follow
   the "X-" convention.

   The procedures defined here are designed to allow public comment and
   review of new properties, while posing only a small impediment to the
   definition of new properties.

   Registration of a new property is accomplished by the following
   steps.

7.2.1  Define the property

   A property is defined by completing the following template.
      To: ietf-calendar@imc.org
      Subject: Registration of text/calendar MIME property XXX
      Property name:
      Property purpose:
      Property value type(s):
      Property parameter (s):
      Conformance:
      Description:
      Format definition:
      Examples:

   The meaning of each field in the template is as follows.

   Property name: The name of the property, as it will appear in the
   body of an text/calendar MIME Content-Type "property: value" line to
   the left of the colon ":".


Royer                     Expires July 2, 2005                 [Page 96]
Internet-Draft                 iCalendar                    January 2005

   Property purpose: The purpose of the property (e.g., to indicate a
   delegate for the event, etc.).  Give a short but clear description.

   Property value type (s): Any of the valid value types for the
   property value needs to be specified.  The default value type also
   needs to be specified.  If a new value type is specified, it needs to
   be declared in this section.

   Property parameter (s): Any of the valid property parameters for the
   property needs to be specified.

   Conformance: The calendar components that the property can appear in
   needs to be specified.

   Description: Any special notes about the property, how it is to be
   used, etc.

   Format definition: The ABNF for the property definition needs to be
   specified.

   Examples: One or more examples of instances of the property needs to
   be specified.

7.2.2  Post the Property definition

   The property description MUST be posted to the new property
   discussion list, ietf-calendar@imc.org.

7.2.3  Allow a comment period

   Discussion on the new property MUST be allowed to take place on the
   list for a minimum of two weeks.  Consensus MUST be reached on the
   property before proceeding to the next step.

7.2.4  Submit the property for approval

   Once the two-week comment period has elapsed, and the proposer is
   convinced consensus has been reached on the property, the
   registration application should be submitted to the Method Reviewer
   for approval.  The Method Reviewer is appointed to the Application
   Area Directors and can either accept or reject the property
   registration.  An accepted registration should be passed on by the
   Method Reviewer to the IANA for inclusion in the official IANA method
   registry.  The registration can be rejected for any of the following
   reasons.  1) Insufficient comment period; 2) Consensus not reached;
   3) Technical deficiencies raised on the list or elsewhere have not
   been addressed.  The Method Reviewer's decision to reject a property
   can be appealed by the proposer to the IESG, or the objections raised


Royer                     Expires July 2, 2005                 [Page 97]
Internet-Draft                 iCalendar                    January 2005

   can be addressed by the proposer and the property resubmitted.

7.3  Property Change Control

   Existing properties can be changed using the same process by which
   they were registered.
      1.  Define the change
      2.  Post the change
      3.  Allow a comment period
      4.  Submit the property for approval

   Note that the original author or any other interested party can
   propose a change to an existing property, but that such changes
   should only be proposed when there are serious omissions or errors in
   the published memo.  The Method Reviewer can object to a change if it
   is not backward compatible, but is not required to do so.

   Property definitions can never be deleted from the IANA registry, but
   properties which are no longer believed to be useful can be declared
   OBSOLETE by a change to their "intended use" field.
















Royer                     Expires July 2, 2005                 [Page 98]
Internet-Draft                 iCalendar                    January 2005

8.  References (BOILERPLATE)

   This RFC contained boilerplate in this section which has been moved
   to the RFC2223-compliant unnumbered section "References."
























Royer                     Expires July 2, 2005                 [Page 99]
Internet-Draft                 iCalendar                    January 2005

9.  Acknowledgments

   A hearty thanks to the IETF Calendaring and Scheduling Working Group
   and also the following individuals who have participated in the
   drafting, review and discussion of this memo:

   TODO






















Royer                     Expires July 2, 2005                [Page 100]
Internet-Draft                 iCalendar                    January 2005

10.  Authors' and Chairs' Addresses (BOILERPLATE)

   This RFC contained boilerplate in this section which has been moved
   to the RFC2223-compliant unnumbered section "Author's Address."
























Royer                     Expires July 2, 2005                [Page 101]
Internet-Draft                 iCalendar                    January 2005

11.  Full Copyright Statement (BOILERPLATE)

   This RFC contained boilerplate in this section which has been moved
   to the RFC2223-compliant unnumbered section "Full Copyright
   Statement."

12  References

   [1]   Dawson, F., Mansour, S. and S. Silverberg, "iCalendar
         Message-based Interoperability Protocol (IMIP)", RFC 2447,
         November 1998.

   [2]   Silverberg, S., Mansour, S., Dawson, F. and R. Hopson,
         "iCalendar Transport-Independent Interoperability Protocol
         (iTIP) : Scheduling Events, Busy Time, To-dos and Journal
         Entries", RFC 2446, November 1998.

   [3]   "ISO 8601, Data elements and interchange formats-Information
         interchange--Representation of dates and times International
         Organization for Standardization", June 1988.

   [4]   "ISO/IEC 9070, Information Technology_SGML Support
         Facilities--Registration Procedures for Public Text Owner
         Identifiers Second Edition, International Organization for
         Standardization", April 1991.

   [5]   Crocker, D., "Standard for the Format of ARPA Internet Text
         Messages", STD 11, RFC 822, August 1982.

   [6]   Berners-Lee, T., Masinter, L. and M. McCahill, "Uniform
         Resource Locators (URL", RFC 1738, December 1994.

   [7]   Alvestrand, H., "Tags for the Identification of Languages", RFC
         1766, March 1995.

   [8]   Freed, N. and N. Borenstein, "Multipurpose Internet Mail
         Extensions (MIME) - Part One: Format of Internet Message
         Bodies", RFC 2045, November 1996.

   [9]   Freed, N. and N. Borenstein, "Multipurpose Internet Mail
         Extensions (MIME) - Part Two: Media Types", RFC 2046, November
         1996.

   [10]  Freed, N., Klensin, J. and J. Postel, "Multipurpose Internet
         Mail Extensions (MIME) - Part Four: Registration Procedures",
         RFC 2048, January 1997.

   [11]  Bradner, S., "Key words for use in RFCs to Indicate Requirement


Royer                     Expires July 2, 2005                [Page 102]
Internet-Draft                 iCalendar                    January 2005

         Levels", BCP 14, RFC 2119, March 1997.

   [12]  Crocker, D. and P. Overell, "Augmented BNF for Syntax
         Specifications: ABNF", RFC 2234, November 1997.

   [13]  Yergeau, F., "UTF-8, a transformation format of ISO 10646", RFC
         2279, January 1998.

   [14]  Howes, T., Smith, M. and F. Dawson, "A MIME Content-Type for
         Directory Information", RFC 2425, September 1998.

   [15]  Dawson, F. and T. Howes, "vCard MIME Directory Profile", RFC
         2426, September 1998.

   [16]  Olson, A., "Time zone code and data,
         ftp://elsie.nci.nih.gov/pub/, updated periodically",
         <ftp://elsie.nci.nih.gov/pub/>.

   [17]  "Internet Mail Consortium, vCalendar - The Electronic
         Calendaring and Scheduling Exchange Format
         http://www.imc.org/pdi/vcal-10.txt", September 1996,
         <http://www.imc.org/pdi/vcal-10.txt>.

Author's Address

   Doug Royer
   IntelliCal LLC
   267 Kentlands Blvd., #3041
   Gaithersburg, MD  20878
   USA

   Phone: +1-208-612-4638
   EMail: Doug@IntelliCal.net
   URI:   http://Royer.com








Royer                     Expires July 2, 2005                [Page 103]
Internet-Draft                 iCalendar                    January 2005

Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.

Disclaimer of Validity

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Copyright Statement

   Copyright (C) The Internet Society (2005).  This document is subject
   to the rights, licenses and restrictions contained in BCP 78, and
   except as set forth therein, the authors retain all their rights.

Acknowledgment

   Funding for the RFC Editor function is currently provided by the
   Internet Society.


Royer                     Expires July 2, 2005                [Page 104]
