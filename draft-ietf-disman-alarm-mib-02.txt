
Disman Working Group                                    S. Chisholm
Internet Draft                                          Nortel Networks
Document: draft-ietf-disman-alarm-mib-02.txt            D. Romascanu
Category: Standards Track                               Avaya Inc.
Expiration Date: Oct 2001                               April 30 2001


                               Alarm MIB


Status of this Memo

  This document is an Internet-Draft and is in full conformance
  with all provisions of Section 10 of RFC2026.

  Internet-Drafts are working documents of the Internet Engineering
  Task Force (IETF), its areas, and its working groups.  Note that
  other groups may also distribute working documents as
  Internet-Drafts.

  Internet-Drafts are draft documents valid for a maximum of six
  months and may be updated, replaced, or obsoleted by other
  documents at any time.  It is inappropriate to use Internet-
  Drafts as reference material or to cite them other than as
  "work in progress."


  The list of current Internet-Drafts can be accessed at

  http://www.ietf.org/ietf/1id-abstracts.txt

  The list of Internet-Draft Shadow Directories can be accessed at
  http://www.ietf.org/shadow.html.


Abstract

  This memo defines a portion of the Management Information Base (MIB)
  for use with network management protocols in the Internet community.
  In particular, it describes management objects used for modelling
  and storing alarms.

Table of Contents

 1. The SNMP Management Framework
 2. Introduction
 3. Alarm Management Framework
   3.1. Terminology
   3.2. Goals of this Architecture
   3.3. Architectural Goals Achieved in other Documents
   3.4. Alarm Management Architecture
   3.5. Relation to Notification Log MIB
 4. Generic Alarm MIB
   4.1. Overview
   4.2. Definitions


Chisholm & Romascanu        Standards Track                     [Page 1]
                               Alarm MIB                      April 2001


 5. ITU Alarm MIB
   5.1. Overview
   5.2. Definitions
 6. Examples
   6.1. Alarms based on 3-state linkUp/linkDown
   6.2. Alarms based on notifications (M:N)
   6.3. Alarms without notifications, but that still want to send out a
        notification
   6.4. Alarms without notifications that don't want to send out
        notifications
   6.5. Printer MIB Alarm Example
   6.6. Rmon Alarm Example
   6.7. Relation to Notification Log MIB
 7. Security Considerations
 8. Authors' Address
 9. Acknowledgements
10. References
11. Full Copyright Statement




































Chisholm & Romascanu        Standards Track                     [Page 2]
                               Alarm MIB                      April 2001



1.  The SNMP Management Framework

  The SNMP Management Framework presently consists of five major
  components:

   o   An overall architecture, described in RFC 2571 [RFC2571].

   o   Mechanisms for describing and naming objects and events for the
       purpose of management.  The first version of this Structure of
       Management Information (SMI) is called SMIv1 and described in
       STD 16, RFC 1155 [RFC1155], STD 16, RFC 1212 [RFC1212] and RFC
       1215 [RFC1215].  The second version, called SMIv2, is described
       in STD 58, RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and
       STD 58, RFC 2580 [RFC2580].

   o   Message protocols for transferring management information.  The
       first version of the SNMP message protocol is called SNMPv1 and
       described in STD 15, RFC 1157 [RFC1157].  A second version of
       the SNMP message protocol, which is not an Internet standards
       track protocol, is called SNMPv2c and described in RFC 1901
       [RFC1901] and RFC 1906 [RFC1906].  The third version of the
       message protocol is called SNMPv3 and described in RFC 1906
       [RFC1906], RFC 2572 [RFC2572] and RFC 2574 [RFC2574].

   o   Protocol operations for accessing management information.  The
       first set of protocol operations and associated PDU formats is
       described in STD 15, RFC 1157 [RFC1157].  A second set of
       protocol operations and associated PDU formats is described in
       RFC 1905 [RFC1905].

   o   A set of fundamental applications described in RFC 2573
       [RFC2573] and the view-based access control mechanism described
       in RFC 2575 [RFC2575].

  A more detailed introduction to the current SNMP Management Framework
  can be found in RFC 2570 [RFC2570].

  Managed objects are accessed via a virtual information store, termed
  the Management Information Base or MIB.  Objects in the MIB are
  defined using the mechanisms defined in the SMI.

  This memo specifies a MIB module that is compliant to the SMIv2.  A
  MIB conforming to the SMIv1 can be produced through the appropriate
  translations.  The resulting translated MIB must be semantically
  equivalent, except where objects or events are omitted because no
  translation is possible (use of Counter64).  Some machine readable
  information in SMIv2 will be converted into textual descriptions in
  SMIv1 during the translation process.  However, this loss of machine
  readable information is not considered to change the semantics of the
  MIB.



Chisholm & Romascanu        Standards Track                     [Page 3]
                               Alarm MIB                      April 2001



2. Introduction

   It is important for an operator to be able to determine current
   active alarms on a system, so that the problems they are signalling
   can be fixed.

   This memo provides a generic method to model and store alarms. The
   alarm MIB does not assume a specific alarm model, so it works with
   any or no specific model. A distributed manager managing a network
   with multiple alarm models, can therefore access SNMP alarm
   information in a consistent manner across systems.

   Alarms and other terms related to alarms management are defined in
   the following sections. A modular architecture is defined, in which
   the generic alarm MIB can be augmented by other alarm information,
   defined according to more specific models that determine their
   behaviour and characteristics.

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119.

3. Alarm Management Framework

3.1 Terminology

  Error
     A deviation of a system from normal operation.

  Fault
     Lasting error or warning condition.

  Event
     Something that happens which may be of interest to a management
     station. A fault, a change in status, crossing a threshold, or an
     external input to the system, for example.

  Notification
     Unsolicited transmissions of management information.

  Alarm
     Persistent indication of a fault.

  Alarm State
     A condition or stage in the existence of an alarm. As a minimum,
     alarms states are raise and clear. They could also
     include severity information such as defined by perceived severity
     in the ITU model - cleared, indeterminate, critical, major, minor,
     warning.

  Alarm Raise


Chisholm & Romascanu        Standards Track                     [Page 4]
                               Alarm MIB                      April 2001


     The initial detection of the fault indicated by an alarm or any
     number of alarm states later entered, except clear. A Notification
     SHOULD be sent on alarm raise.

  Alarm Clear
     The detection that the fault indicated by an alarm no longer
     exists.  A Notification SHOULD be sent on alarm clear.

  Condition
     Please refer to Condition MIB [COND-MIB].


3.2 Goals of this Architecture

3.2.1 Modular Alarm Architecture

   The architecture is designed to be modular to allow the evolution of
   SNMP alarm management over time.


   3.2.1.1 Extensible

   Specific alarm models can be supported as required.  Additional
   alarm management features can be supported as required.

   This alarm modelling and storage mechanism is defined independently
   of any model used to describe the content and behaviour of alarms
   within a system.

   The alarm MIB can be used on its own, or with separately defined MIB
   modules that are specific to particular alarm models. One example of
   such a model is the ITU alarm MIB.

   The relationship between the Alarm MIB and the other alarm model MIB
   modules is expressed by the following:

   The alarmModelTable has a corresponding table in the specific MIBs
   For each row in the specific MIB details alarm table there is one
   row in the alarmModelTable.

   The alarmActiveTable has a corresponding table in the specific MIBs.
   For each row in the specific MIB active alarm table there is one row
   in the alarmActiveTable.

   The alarmModelSpecificPointer object in the alarmModelTable points
   to the specific model corresponding to an alarm type.  The
   alarmActiveSpecificPointer object in the alarmActiveTable points to
   the model specific active alarm table.

   3.2.1.2 Scalable

   Cost of implementation is proportional to the features supported.


Chisholm & Romascanu        Standards Track                     [Page 5]
                               Alarm MIB                      April 2001


   Support of specific alarm models is not mandatory.


3.2.2. Alarm Modelling

   3.2.2.1 Alarm ID

   There is a requirement for a unique identifier for an alarm.  This
   is achieved via alarmModelIndex.

   3.2.2.2 Unambiguously indicates Fault

   There is a requirement to be able to tell both what notifications
   are just informational events, as well as being able to tell exactly
   what error or warning condition this alarm is indicating.

   This is achieved through the OID of the notificationId of the state
   transition, and optionally through alarmModelConditionPointer and,
   optionally, the ITU parameters. alarmModelDescription provides a
   description of the alarm state suitable for displaying to an
   operator.

   3.2.2.3 Clearly defined state and transition mechanism

   All possible states of an alarm, especially the clear state, should
   be well defined ahead of time.

   A state transition mechanism is the way that signals that the alarm
   has transitioned from one state to another. This is primarily
   through the detection of a fault, or through the detection that the
   fault is no longer occurring.  It can also be the detection that a
   fault has become more or less severe.

   Alarms are modelled by defining all possible states in the
   alarmModelTable, as well as defining alarmModelNotificationId,
   alarmModelVarbindIndex, and alarmModelVarbindValue for each of the
   possible alarm states.  Optionally, ituAlarmPerceivedSeverity models
   the states in terms of ITU perceived severity.

   3.2.2.4 Means of optionally alerting management station of state
             transition

   Many implementations will want interested managers to detect a
   change of alarm state in a timely manner.  Some will not.  There
   should be a means of sending a notification to interested managers
   when an alarm transitions state.

   This is achieved by either the sending of existing notifications or
   by using the generic notifications and alarmRaise and alarmClear. If
   the implementation chooses not to alert the management station, then
   a value of 0.0 can be used for alarmModelNotificationId.
   Alternatively, a notification can be defined in


Chisholm & Romascanu        Standards Track                     [Page 6]
                               Alarm MIB                      April 2001


   alarmModeNotifiationId and no hosts specific in the SNMP-TARGET-MIB
   [RFC2573].

   3.2.2.5 Unambiguously indicates where the problem is

   Since one of the main goals of alarm management is to ensure that
   any detected problems get fixed, it is necessary to know exactly
   where this problem is occurring. This goes beyond simply the box
   that is experiencing the problem and includes physical things like
   slots and ports and logical things like interfaces.

   This is achieved through the variable bindings on the alarm state
   change notifications.  This is also achieved via alarmActiveEntity,
   which points to entPhysicalIndex, which identifies the entity under
   alarm for systems which support the entity MIB [RFC2037].


   3.2.2.7 Means of obtaining ITU alarm information

   Alarm Information, as defined in ITU alarm models [M.3100], should
   be optionally available to implementations.

   This is achieved by the optional support of the ITU-ALARM-MIB.

   3.2.2.8 Mapping of relationship between alarm and notifications

   It is important to understand the relationship between alarms and
   notifications.  At the very least, this is an issue of transitioning
   and coexistence.

   This relationship is modeled using the alarmModelTable to define the
   alarmModelNotificationId for each alarm state.

   Not all notifications signal an alarm state transition. Some
   notifications are simply informational in nature, such as those that
   indicate that a configuration operation has been performed on an
   entity.  These sorts of notifications would not be represented in
   the alarm MIB.

   The Alarm MIB allows the use of the notification space as defined in
   [RFC2578] in order to identify the notifications that are related
   with the specific alarm state transitions. However there is no
   assumption that the respective notifications MUST be sent for all or
   any of the alarm state transitions. This architecture allows for
   both the efficient exploitation of the body of defined notification
   and for the use of non-notification based systems.

   3.2.2.9 Configuration of Alarm Models

   Alarm models can be added, updated or removed during runtime,
   assuming no entry in the alarmActiveTable is using it.



Chisholm & Romascanu        Standards Track                     [Page 7]
                               Alarm MIB                      April 2001


   The objects in alarmModelTable and ituAlarmTable have a MAX-ACCESS
   of read-write.

3.2.3. Real-time Alarm Management

   There is a requirement for a list of currently active alarms on a
   system and supporting statistics.

   This allows the network management station to find out about any
   problems that may have occurred before it started managing a
   particular network element, or while it was out of contact with it.

   This is achieved via alarmActiveTable and, optionally a model
   specific alarmTable, e.g. the itiAlarmActiveTable.

3.2.4. Distributed Alarm Management

   There is a requirement that all aspects of the alarm MIB can be
   supported both on the device experiencing the alarms and on any
   middle managers that might be monitoring such devices.

   This is achieved by the ability to be able to store different named
   alarm lists.  A middle manager could therefore, create an
   alarmListName for each of the devices it managed and therefore store
   separate lists for each device.

   This is also accomplished by the storing of the source of the alarms
   in the alarmActiveTable.

3.3 Architectural Goals Achieved in other Documents

3.3.1. Historical Alarm Management

   Some systems may have a requirement that information on alarms that
   are no longer active is available. This is achieved through the
   support of the notification log MIB [RFC3014] to store alarm state
   transitions.

3.3.2 Alarm Suppression

   Some systems may have a requirement for a mechanism to not add a
   particular alarm to the active alarm table or to send out the
   associated SNMP notification related to a given alarm state
   transition under controlled conditions.  This is achieved through
   the support of the ARC MIB [ARC-MIB].

3.3.3 Condition Definitions

   Some systems may have a requirement to be able to define both alarm
   and non-alarm abnormal activity profiles. Conditions may or may not
   be persistent for the duration of the abnormal activity they are
   indicating.  They, therefore, may or may not clear. Whether or not a


Chisholm & Romascanu        Standards Track                     [Page 8]
                               Alarm MIB                      April 2001


   condition is an alarm condition, may change over the lifetime of a
   condition.

   This is achieved in the condition MIB [COND-MIB]. Also,
   ItuAlarmConditionPointer relates an alarm state transition to a
   condition, if applicable.


3.4 Alarm Management Architecture



  +------------------------------------------------+
  |                                                |
  |  +------------------------------------+        |
  |  | Condition Management               |        |
  |  +------------------+-----------------+        |
  |                     |                          |
  |                     |                          |
  |  +------------------V--------------------+     |
  |  | Condition/Alarm  Deferral/Suppression |     |
  |  ++--------------------------------------+     |
  |   |                                            |
  +---+--------------------------------------------+
      |
      V
      |  +------------------------------------------------+
      |  |                                                |
      |  |  +------------------------------------+        |
      |  |  | Notification Management            |        |
      |  |  +--------------+---------------------+        |
      |  |                          |                     |
      |  +------------------+-----------------------------+
      |                             |
      V                             V
      -------------------------------
                     |
                     V
















Chisholm & Romascanu        Standards Track                     [Page 9]
                               Alarm MIB                      April 2001


                     |
  +------------------V-------------+   +----------------------------+
  |                  |             |   |  +------------------+      |
  |                  +----------------->--> Alarm Modelling  |      |
  |                  |             |   |  | (descriptions)   |      |
  |                  |             |   |  +--------+---------+      |
  |                  |             |   |           |                |
  |                  |             |   |  +--------V------------+   |
  |                  |             |   |  | Generic: Model-     |   |
  |                  |             |   |  | Active : Specific   |   |
  |                  |             |   |  | Alarms : Extensions |   |
  |                  |             |   |  +---------------------+   |
  |                  |             |   |           |                |
  |                  |<----------------------------+                |
  |                  |             |   +----------------------------+
  |  +---------------V----------+  |
  |  |         RFC 2573         |  |
  |  |     SNMP-TARGET-MIB      |  |
  |  +--------+---------------+-+  |
  |           |               |    |
  |  +--------V-------------+ |    |
  |  |       RFC 3014       | |    |
  |  | NOTIFICATION-LOG-MIB | |    |
  |  +----------------------+ |    |
  |                           |    |
  |  +------------------------V-+  |
  |  |         RFC 2573         |  |
  |  | SNMP-NOTIFICATION-MIB    |  |
  |  +----------+---------------+  |
  |             |                  |
  +-------------|------------------
                |
                V
        Informs & Traps






3.5 Relation to Notification Log MIB

   The alarm MIB is intended to complement the Notification Log
   MIB[RFC3014], but can be used independently.  The alarmActiveTable
   is defined in manner similar to that of the nlmLogTable.  This
   format allows for the storage of any NOTIFICATION that can be
   defined using SMI.  Using the same format as the notification log
   MIB also simplifies operations for systems choosing to implement
   both MIBs.

   The object alarmActiveLogIndex points, for each entry in the
   alarmActiveLogTable, to the log index in the notification log MIB,


Chisholm & Romascanu        Standards Track                    [Page 10]
                               Alarm MIB                      April 2001


   if used.

   If the notification log MIB is supported, it can be monitored by a
   management system as a hedge against lost alarms. The notification
   log can also be used to support historical alarm management.


4. Generic Alarm MIB

4.1 Overview

   The ALARM-MIB provides a generic method to model and store alarms.

   An alarm model consists of defining the possible states an alarm can
   assume as well as the OID of the notification that SHOULD be sent
   out when an alarm changes state.

   The alarmModelTable contains information that is applicable to all
   instances of an alarm.  It can be populated at start-up with all
   alarms that could happen on a system or later configured by a
   management application.  It contains all the alarms for a given
   system.  If a notification is not represented in the
   alarmModelTable, it is not an alarm state transition. The
   alarmModelTable provides a means of defining the raise/clear and
   other state transition relationship between alarms. The object
   alarmModelState defines the states of an alarm.

   The alarmActiveTable contains a list of alarms that are currently
   occurring on a system. It is intended that this table be queried
   upon device discovery and rediscovery to determine which alarms are
   currently active on the device.

   The alarmActiveVariableTable contains the notification variable
   bindings associated with the alarms in the alarmActiveTable.

   The alarmActiveStatsTable contains current and total raised alarm
   counts as well as the time of the last alarm raise and alarm clears
   per named alarm list.

   The MIB also defines generic alarm notifications that can be used in
   the event that there is not an existing applicable notification to
   signal the alarm state transition - alarmRaise and alarmClear.

4.2 Definitions

   ALARM-MIB DEFINITIONS ::= BEGIN

   IMPORTS
      MODULE-IDENTITY, OBJECT-TYPE,
      Integer32, Unsigned32,
      TimeTicks, Counter32, Counter64,
      IpAddress, Opaque, mib-2            FROM SNMPv2-SMI


Chisholm & Romascanu        Standards Track                    [Page 11]
                               Alarm MIB                      April 2001


      TimeStamp, DateAndTime,
      RowStatus, RowPointer               FROM SNMPv2-TC
      SnmpAdminString, SnmpEngineID       FROM SNMP-FRAMEWORK-MIB
      TimeFilter                          FROM RMON2-MIB
      MODULE-COMPLIANCE, OBJECT-GROUP     FROM SNMPv2-CONF;

     alarmMIB MODULE-IDENTITY
         LAST-UPDATED "200104300000Z"
         ORGANIZATION "IETF Distributed Management Working Group"
         CONTACT-INFO
                 "   Sharon Chisholm
                     Nortel Networks
                     PO Box 3511 Station C
                     Ottawa, Ont.  K1Y 4H7
                     Canada
                     schishol@nortelnetworks.com

                     Dan Romascanu
                     Avaya Inc.
                     Atidim Technology Park, Bldg. #3
                     Tel Aviv, 61131
                     Israel
                     Tel: +972-3-645-8414
                     Email: dromasca@avaya.com"
         DESCRIPTION
                 "The MIB module describes a generic solution
                 to model alarms and to store the current list
                 of active alarms."
         REVISION    "200104300000Z"
         DESCRIPTION
             "Initial version, published as RFC XXXX."

         ::= { mib-2 xx }

   alarmObjects OBJECT IDENTIFIER ::= { alarmMIB 1 }

   alarmNotifications OBJECT IDENTIFIER ::= { alarmMIB 2}

   alarmModel OBJECT IDENTIFIER ::= { alarmObjects 1 }

   alarmActive  OBJECT IDENTIFIER ::= { alarmObjects 2 }

   alarmModelLastChanged  OBJECT-TYPE
         SYNTAX      TimeTicks
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
                 "The value of sysUpTime at the time of the last
                 creation, deletion or modification of an entry in
                 the alarmModelTable.

                 If the number and content of entries has been unchanged


Chisholm & Romascanu        Standards Track                    [Page 12]
                               Alarm MIB                      April 2001


                 since the last re-initialization of the local network
                 management subsystem, then this object MUST contain
                 a zero value."
         ::= { alarmModel 1 }

   alarmModelTable OBJECT-TYPE
      SYNTAX      SEQUENCE OF AlarmModelEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "A table of information about possible alarms on the system,
           and how they have been modelled."
      ::= { alarmModel 2 }

   alarmModelEntry OBJECT-TYPE
      SYNTAX      AlarmModelEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "Entries appear in this table for each possible alarm state."
      INDEX       { alarmListName, alarmModelIndex, alarmModelState }
      ::= { alarmModelTable 1 }

   AlarmModelEntry ::= SEQUENCE {
      alarmModelIndex                 Unsigned32,
      alarmModelState                 Integer32,
      alarmModelNotificationId        OBJECT IDENTIFIER,
      alarmModelVarbindIndex          Integer32,
      alarmModelVarbindValue          Integer32,
      alarmModelDescription           SnmpAdminString,
      alarmModelSpecificPointer       RowPointer,
      alarmModelRowStatus             RowStatus
      }


   alarmModelIndex OBJECT-TYPE
      SYNTAX     Unsigned32 (1..4294967295)
      MAX-ACCESS read-only
      STATUS     current
      DESCRIPTION
          "A integer that acts as an alarm Id
          within the named alarm list. "
      ::= { alarmModelEntry 1 }

   alarmModelState OBJECT-TYPE
      SYNTAX  Integer32 ( 1..4294967295 )
      MAX-ACCESS	read-write
      STATUS       current
      DESCRIPTION
           "A value of 1 MUST indicate a clear alarm state.
           The value of this object MUST be less than the
           alarmModelState of more severe alarm states for


Chisholm & Romascanu        Standards Track                    [Page 13]
                               Alarm MIB                      April 2001


           this alarm.  The value of this object MUST be more
           than the alarmModelState of less severe alarm states
           for this alarm."
       ::= { alarmModelEntry 2 }

   alarmModelNotificationId OBJECT-TYPE
      SYNTAX      OBJECT IDENTIFIER
      MAX-ACCESS  read-write
      STATUS      current
      DESCRIPTION
          "The NOTIFICATION-TYPE object identifier of this alarm
          state transition."
      ::= { alarmModelEntry 3 }

   alarmModelVarbindIndex  OBJECT-TYPE
      SYNTAX  Integer32
      MAX-ACCESS   read-write
      STATUS       current
      DESCRIPTION
           "The index into the varbind listing of the notification
           indicated by alarmModelNotificationId which helps
           signal that the given alarm has changed state.
           If there is no applicable varbind, this object MUST have
           a value of 0."
       ::= { alarmModelEntry 4 }

   alarmModelVarbindValue  OBJECT-TYPE
      SYNTAX  Integer32
      MAX-ACCESS   read-write
      STATUS       current
      DESCRIPTION
        "The value that the varbind indicated by
        alarmModelVarbindIndex takes to indicate
        that the alarm has entered this state."
       ::= { alarmModelEntry 5 }

   alarmModelDescription OBJECT-TYPE
       SYNTAX SnmpAdminString
       MAX-ACCESS read-write
       STATUS current
       DESCRIPTION
      "A brief description of this alarm and state suitable to 	display
   to operators."
      ::= { alarmModelEntry 6 }

   alarmModelSpecificPointer OBJECT-TYPE
      SYNTAX     RowPointer
      MAX-ACCESS read-write
      STATUS     current
      DESCRIPTION
      "If no additional, model-specific alarm MIB is supported by the
      system this object is  `0.0'. When a model-specific alarm MIB is


Chisholm & Romascanu        Standards Track                    [Page 14]
                               Alarm MIB                      April 2001


      supported, this object is the instance pointer to the specific
      model-specific alarm definition."
      ::= { alarmModelEntry 7 }

   alarmModelRowStatus OBJECT-TYPE
      SYNTAX     RowStatus
      MAX-ACCESS read-create
      STATUS     current
      DESCRIPTION
       "Control for creating and deleting entries.  Entries may be
       modified while active.

       This row can not be deleted while it is being referenced by a
       value of alarmActiveModelIndex."
      ::= { alarmModelEntry 8 }

   -- Active Alarm Table --

   alarmActiveLastChanged  OBJECT-TYPE
      SYNTAX      TimeTicks
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "The value of sysUpTime at the time of the last
          creation or deletion of an entry in the alarmActiveTable.
          If the number of entries has been unchanged since the
          last re-initialization of the local network management
          subsystem, then this object contains a zero value."
      ::= { alarmActive 1 }

   alarmActiveTable OBJECT-TYPE
      SYNTAX      SEQUENCE OF AlarmActiveEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "A table of Active Alarms entries."
      ::= { alarmActive 2 }

   alarmActiveEntry OBJECT-TYPE
      SYNTAX      AlarmActiveEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "Entries appear in this table when alarms are raised.  They
          are removed when the alarm is cleared."
      INDEX       { alarmListName, alarmActiveTimeFilter,
   alarmActiveIndex }
      ::= { alarmActiveTable 1 }

   AlarmActiveEntry ::= SEQUENCE {
      alarmListName                    SnmpAdminString,
      alarmActiveTimeFilter            TimeFilter,    			


Chisholm & Romascanu        Standards Track                    [Page 15]
                               Alarm MIB                      April 2001


      alarmActiveIndex                 Unsigned32,
      alarmActiveTime                  TimeStamp,
      alarmActiveDateAndTime           DateAndTime,
      alarmActiveEngineID              SnmpEngineID,
      alarmActiveEngineAddress         IpAddress,
      alarmActiveContextEngineID       SnmpEngineID,
      alarmActiveContextName           SnmpAdminString,
      alarmActiveVariables             Unsigned32,
      alarmActiveNotificationID        OBJECT IDENTIFIER,
      alarmActiveEntity                Integer32,
      alarmActiveLogIndex              Unsigned32,
      alarmActiveModelPointer          RowPointer,
      alarmActiveSpecificPointer       RowPointer }

   alarmListName OBJECT-TYPE
      SYNTAX     SnmpAdminString (SIZE(0..32))
      MAX-ACCESS not-accessible
      STATUS     current
      DESCRIPTION
       "The name of the list of alarms.  This SHOULD be the same as
       nlmLogName if the Notification Log MIB [RFC3014] is supported.

       An implementation may allow multiple named alarm lists, up to
       some implementation-specific limit (which may be none).  A
       zero-length list name is reserved for creation and deletion
       by the managed system, and MUST be used as the default log
       name by systems that do not support named alarm lists."
      ::= { alarmActiveEntry 1 }

   alarmActiveTimeFilter OBJECT-TYPE
      SYNTAX  TimeFilter
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
        "A TimeFilter for this entry.  Allows GetNext and GetBulk
         to find flow table rows that have changed since a specified
         value of sysUptime.

         See the description of TimeFilter TC in [RFC2021] for more
         information."
      ::= { alarmActiveEntry 2 }

   alarmActiveIndex OBJECT-TYPE
      SYNTAX     Unsigned32 (1..4294967295)
      MAX-ACCESS read-only
      STATUS     current
      DESCRIPTION
          "A monotonically increasing integer which acts as the
          index of entries within the named alarm list.  It wraps
          back to 1 after it reaches its maximum value."
      ::= { alarmActiveEntry 3 }



Chisholm & Romascanu        Standards Track                    [Page 16]
                               Alarm MIB                      April 2001


   alarmActiveTime OBJECT-TYPE
      SYNTAX      TimeStamp
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The value of sysUpTime when the alarm occurred. Alarms tend
          to be cleared and re-raised if still applicable at reboot, so
          this value tends to be a valid sysUptime. In the case where
          the alarms are not cleared at reboot, and the alarm occurred
          before the most recent management system initialization, this
          object value MUST be set to zero."
      ::= { alarmActiveEntry 4 }

   alarmActiveDateAndTime OBJECT-TYPE
      SYNTAX      DateAndTime
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The local date and time when the alarm occurred, instantiated
          only by systems that have date and time capability."
      ::= { alarmActiveEntry 5 }

   alarmActiveEngineID OBJECT-TYPE
      SYNTAX      SnmpEngineID
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The identification of the SNMP engine at which the alarm
          originated.
          If the alarm list can contain Notifications from only one
          engine or the trap is from an SNMPv1 system, this object is
          a zero length string."
      ::= { alarmActiveEntry 6 }

   alarmActiveEngineAddress OBJECT-TYPE
      SYNTAX      IpAddress
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
       "The IP Address of the SNMP engine on which the alarm is
       occurring. This is used to identify the source of an SNMPv1
       trap, since an alarmActiveEngineId cannot be extracted from the
       SNMPv1 trap PDU.

       This object MUST always be instantiated, even if the list
       can contain alarms from only one engine."
      ::= { alarmActiveEntry 7 }

   alarmActiveContextEngineID OBJECT-TYPE
      SYNTAX      SnmpEngineID
      MAX-ACCESS  read-only
      STATUS      current


Chisholm & Romascanu        Standards Track                    [Page 17]
                               Alarm MIB                      April 2001


      DESCRIPTION
       "If the alarm is occurring on a device using a protocol which
       has a contextEngineID element like SNMPv3, this object has that
       value. Otherwise its value is a zero-length string."
      ::= { alarmActiveEntry 8 }


   alarmActiveContextName OBJECT-TYPE
      SYNTAX      SnmpAdminString
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The name of the SNMP MIB context from which the alarm came.
          For SNMPv1 traps this is the community string from the Trap.
          If the alarm's source SNMP engine is known not to support
          multiple contexts, this object is a zero length string."
      ::= { alarmActiveEntry 9 }

   alarmActiveVariables OBJECT-TYPE
      SYNTAX      Unsigned32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The number of variables in alarmActiveVariableTable for this
          alarm. Also, the number of varbinds for the notification
          associated with this alarm state."
      ::= { alarmActiveEntry 10 }


   alarmActiveNotificationID OBJECT-TYPE
      SYNTAX      OBJECT IDENTIFIER
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The NOTIFICATION-TYPE object identifier of the alarm
          state transition that is occurring."
      ::= { alarmActiveEntry 11 }

   alarmActiveEntity    OBJECT-TYPE
      SYNTAX      Integer32
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
         "This object identifies the entity under alarm.
         This object MUST be the same as entPhysicalIndex.
         If there is no corresponding entPhysicalIndex, then
         this object MUST have a value of 0."
      ::= { alarmActiveEntry 12 }

   alarmActiveLogIndex OBJECT-TYPE
      SYNTAX     Unsigned32 (0..4294967295)
      MAX-ACCESS read-only


Chisholm & Romascanu        Standards Track                    [Page 18]
                               Alarm MIB                      April 2001


      STATUS     current
      DESCRIPTION
          "This number MUST be the same as the log index of the
          applicable row in the notification log MIB, if it exists.
          If no log index applies to the trap, then this object
          MUST have the value of 0."
      ::= { alarmActiveEntry 13 }

   alarmActiveModelPointer OBJECT-TYPE
      SYNTAX     RowPointer
      MAX-ACCESS read-only
      STATUS     current
      DESCRIPTION
          "A pointer to the corresponding row in the
          alarmModelTable for this active alarm."
      ::= { alarmActiveEntry 14 }

   alarmActiveSpecificPointer OBJECT-TYPE
      SYNTAX     RowPointer
      MAX-ACCESS read-write
      STATUS     current
      DESCRIPTION
      "If no additional, model-specific, alarm MIB is supported by the
      system this object is `0.0'. When a model-specific alarm MIB is
      supported, this object is the instance pointer to the specific
      model-specific active alarm list."
      ::= { alarmActiveEntry 15 }


   -- Active Alarm Variable Table --

   alarmActiveVariableTable OBJECT-TYPE
      SYNTAX      SEQUENCE OF AlarmActiveVariableEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "A table of variables to go with active alarm entries."
      ::= { alarmActive 3 }

   alarmActiveVariableEntry OBJECT-TYPE
      SYNTAX      AlarmActiveVariableEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "Entries appear in this table when there are variables in
          the varbind list of a corresponding alarm in
          alarmActiveTable."
      INDEX   {  alarmListName, alarmActiveIndex,
                 alarmActiveVariableIndex }
      ::= { alarmActiveVariableTable 1 }

   AlarmActiveVariableEntry ::= SEQUENCE {


Chisholm & Romascanu        Standards Track                    [Page 19]
                               Alarm MIB                      April 2001


      alarmActiveVariableIndex                 Unsigned32,
      alarmActiveVariableID                    OBJECT IDENTIFIER,
      alarmActiveVariableValueType             INTEGER,
      alarmActiveVariableCounter32Val          Counter32,
      alarmActiveVariableUnsigned32Val         Unsigned32,
      alarmActiveVariableTimeTicksVal          TimeTicks,
      alarmActiveVariableInteger32Val          Integer32,
      alarmActiveVariableOctetStringVal        OCTET STRING,
      alarmActiveVariableIpAddressVal          IpAddress,
      alarmActiveVariableOidVal                OBJECT IDENTIFIER,
      alarmActiveVariableCounter64Val          Counter64,
      alarmActiveVariableOpaqueVal             Opaque }

   alarmActiveVariableIndex OBJECT-TYPE
      SYNTAX     Unsigned32 (1..4294967295)
      MAX-ACCESS not-accessible
      STATUS     current
      DESCRIPTION
          "A monotonically increasing integer, starting at 1 for a given
          alarmActiveIndex, for indexing variables within the active
          alarm list."
      ::= { alarmActiveVariableEntry 1 }

   alarmActiveVariableID OBJECT-TYPE
      SYNTAX     OBJECT IDENTIFIER
      MAX-ACCESS read-only
      STATUS     current
      DESCRIPTION
          "The alarm variable's object identifier."
      ::= { alarmActiveVariableEntry 2 }

   alarmActiveVariableValueType OBJECT-TYPE
      SYNTAX      INTEGER { counter32(1), unsigned32(2), timeTicks(3),
                            integer32(4), ipAddress(5), octetString(6),
                            objectId(7), counter64(8), opaque(9) }
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The type of the value.  One and only one of the value
          objects that follow is used, based on this type."
      ::= { alarmActiveVariableEntry 3 }

   alarmActiveVariableCounter32Val OBJECT-TYPE
      SYNTAX      Counter32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The value when alarmActiveVariableType is 'counter32'."
      ::= { alarmActiveVariableEntry 4 }

   alarmActiveVariableUnsigned32Val OBJECT-TYPE
      SYNTAX      Unsigned32


Chisholm & Romascanu        Standards Track                    [Page 20]
                               Alarm MIB                      April 2001


      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The value when alarmActiveVariableType is 'unsigned32'."
      ::= { alarmActiveVariableEntry 5 }

   alarmActiveVariableTimeTicksVal OBJECT-TYPE
      SYNTAX      TimeTicks
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The value when alarmActiveVariableType is 'timeTicks'."
      ::= { alarmActiveVariableEntry 6 }

   alarmActiveVariableInteger32Val OBJECT-TYPE
      SYNTAX      Integer32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The value when alarmActiveVariableType is 'integer32'."
      ::= { alarmActiveVariableEntry 7 }

   alarmActiveVariableOctetStringVal OBJECT-TYPE
      SYNTAX      OCTET STRING
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The value when alarmActiveVariableType is 'octetString'."
      ::= { alarmActiveVariableEntry 8 }

   alarmActiveVariableIpAddressVal OBJECT-TYPE
      SYNTAX      IpAddress
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The value when alarmActiveVariableType is 'ipAddress'."
      ::= { alarmActiveVariableEntry 9 }

   alarmActiveVariableOidVal OBJECT-TYPE
      SYNTAX      OBJECT IDENTIFIER
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The value when alarmActiveVariableType is 'objectId'."
      ::= { alarmActiveVariableEntry 10 }

   alarmActiveVariableCounter64Val OBJECT-TYPE
      SYNTAX      Counter64
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The value when alarmActiveVariableType is 'counter64'."


Chisholm & Romascanu        Standards Track                    [Page 21]
                               Alarm MIB                      April 2001


      ::= { alarmActiveVariableEntry 11 }

   alarmActiveVariableOpaqueVal OBJECT-TYPE
      SYNTAX      Opaque
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "The value when alarmActiveVariableType is 'opaque'."
      ::= { alarmActiveVariableEntry 12 }

   -- Statistics --

   alarmActiveStatsTable  OBJECT-TYPE
         SYNTAX  SEQUENCE OF AlarmActiveStatsEntry
         MAX-ACCESS  not-accessible
         STATUS  current
         DESCRIPTION
            "This table represents the alarm statistics
            information."
     ::= { alarmActive 4 }


   alarmActiveStatsEntry OBJECT-TYPE
         SYNTAX  AlarmActiveStatsEntry
         MAX-ACCESS  not-accessible
         STATUS  current
         DESCRIPTION
            "Statistics on the current active alarms."
         INDEX   { alarmListName }

     ::= {  alarmActiveStatsTable 1 }



   AlarmActiveStatsEntry ::=
         SEQUENCE {
              alarmActiveStatsCurrentActive  Unsigned32,
              alarmActiveStatsTotalActive    Unsigned32,
              alarmActiveStatsLastRaise      TimeTicks,
              alarmActiveStatsLastClear      TimeTicks
                   }


   alarmActiveStatsCurrentActive OBJECT-TYPE
         SYNTAX Unsigned32
         MAX-ACCESS read-only
         STATUS  current
         DESCRIPTION
            "The total number of currently active alarms on the system."

          ::= { alarmActiveStatsEntry 1 }



Chisholm & Romascanu        Standards Track                    [Page 22]
                               Alarm MIB                      April 2001


   alarmActiveStatsTotalActive OBJECT-TYPE
         SYNTAX Unsigned32
         MAX-ACCESS read-only
         STATUS  current
         DESCRIPTION
            "The total number of active alarms since system restarted."

          ::= { alarmActiveStatsEntry 2 }

   alarmActiveStatsLastRaise  OBJECT-TYPE
      SYNTAX      TimeTicks
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "The value of sysUpTime at the time of the last
         alarm raise for this alarm list.
          If no alarm raises have occurred since the
          last re-initialization of the local network management
          subsystem, then this object contains a zero value."
    ::= { alarmActiveStatsEntry 3 }

   alarmActiveStatsLastClear  OBJECT-TYPE
      SYNTAX      TimeTicks
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
         "The value of sysUpTime at the time of the last
          alarm clear for this alarm list.
          If no alarm clears have occurred since the
          last re-initialization of the local network management
          subsystem, then this object contains a zero value."
    ::= { alarmActiveStatsEntry 4 }

   -- Notifications

   alarmRaise NOTIFICATION-TYPE
    OBJECTS     { alarmModelIndex,
                  alarmModelState,
                  alarmActiveEntity }
    STATUS      current
    DESCRIPTION
       "An instance of the alarm indicated by alarmModelIndex
       has been raised against the entity indicated by
       alarmActiveEntity."
    ::= { alarmNotifications 0 1 }

   alarmClear NOTIFICATION-TYPE
      OBJECTS     { alarmModelIndex,
                    alarmActiveEntity }
      STATUS      current
      DESCRIPTION
        "An instance of the alarm indicated by alarmModelIndex


Chisholm & Romascanu        Standards Track                    [Page 23]
                               Alarm MIB                      April 2001


        has been cleared against the entity indicated by
        alarmActiveEntity."
      ::= { alarmNotifications 0 2 }

   -- Conformance

   alarmConformance OBJECT IDENTIFIER ::= { alarmMIB 3 }

   alarmCompliances OBJECT IDENTIFIER ::= { alarmConformance 1 }

   alarmCompliance MODULE-COMPLIANCE
         STATUS  current
         DESCRIPTION
             "The compliance statement for systems supporting
             the Alarm MIB."
         MODULE -- this module
             MANDATORY-GROUPS {
              alarmActiveGroup,
              alarmModelGroup
             }
      ::= { alarmCompliances 1 }

   alarmGroups OBJECT IDENTIFIER ::= { alarmConformance 2 }	

   alarmModelGroup OBJECT-GROUP
      OBJECTS {
          alarmModelLastChanged,
          alarmModelIndex,
          alarmModelState,
          alarmModelNotificationId,
          alarmModelVarbindIndex,
          alarmModelVarbindValue,
          alarmModelDescription,
          alarmModelSpecificPointer,
          alarmModelRowStatus
         }
       STATUS   current
       DESCRIPTION
                  "Alarm details list group."
       ::= { alarmGroups 1}


   alarmActiveGroup OBJECT-GROUP
           OBJECTS {
              alarmActiveLastChanged,
              alarmListName,
              alarmActiveTimeFilter,
              alarmActiveIndex,
              alarmActiveTime,
              alarmActiveDateAndTime,
              alarmActiveEngineID,
              alarmActiveEngineAddress,


Chisholm & Romascanu        Standards Track                    [Page 24]
                               Alarm MIB                      April 2001


              alarmActiveContextEngineID,
              alarmActiveContextName,
              alarmActiveVariables,
              alarmActiveNotificationID,
              alarmActiveEntity,
              alarmActiveLogIndex,
              alarmActiveModelPointer,
              alarmActiveSpecificPointer,
              alarmActiveVariableIndex,
              alarmActiveVariableID,
              alarmActiveVariableValueType,
              alarmActiveVariableCounter32Val,
              alarmActiveVariableUnsigned32Val,
              alarmActiveVariableTimeTicksVal,
              alarmActiveVariableInteger32Val,
              alarmActiveVariableOctetStringVal,
              alarmActiveVariableIpAddressVal,
              alarmActiveVariableOidVal,
              alarmActiveVariableCounter64Val,
              alarmActiveVariableOpaqueVal
} 	 	   STATUS  
   current
             DESCRIPTION
                  "Active Alarm list group."
             ::= { alarmGroups 2}

       alarmActiveStatsGroup  OBJECT-GROUP
             OBJECTS  {
                      alarmActiveStatsTotalActive,
                      alarmActiveStatsCurrentActive,
                      alarmActiveStatsLastRaise,
                      alarmActiveStatsLastClear
                       }
             STATUS   current
             DESCRIPTION
                  " Active alarm summary group."
             ::= { alarmGroups 3}



   	 END

5.  ITU Alarm MIB

5.1 Overview

   This MIB module defines alarm information specific to the alarm
   model defined in ITU M.3100 [M.3100], X.733[X.733] and X.736[X.736].
   This MIB module follows the modular architecture defined by the
   alarm MIB, in which the generic alarm MIB can be augmented by other
   alarm information defined according to more specific models that
   determine their behaviour and characteristics.



Chisholm & Romascanu        Standards Track                    [Page 25]
                               Alarm MIB                      April 2001


   The ituAlarmTable contains information from the ITU Alarm Model
   about possible alarms in the system.

   The ituAlarmActiveTable contains information from the ITU Alarm
   Model about alarms that are currently occurring on the system.

   The ituAlarmActiveStatsTable provides statistics on current and
   total alarms.

5.2 Definitions

   ITU-ALARM-MIB DEFINITIONS ::= BEGIN

   IMPORTS
      MODULE-IDENTITY, OBJECT-TYPE,
      Counter32, Gauge32, mib-2           FROM SNMPv2-SMI
      DisplayString, AutonomousType,
      RowPointer                          FROM SNMPv2-TC
      alarmListName, alarmModelIndex,
      alarmActiveTimeFilter, alarmActiveIndex
                                          FROM ALARM-MIB
      IANAItuProbableCause,
      IANAItuEventType                    FROM ITU-ALARM-TC
      MODULE-COMPLIANCE, OBJECT-GROUP     FROM SNMPv2-CONF;

     ituAlarm MODULE-IDENTITY
         LAST-UPDATED "200104300000Z"
         ORGANIZATION "IETF Distributed Management Working Group"
         CONTACT-INFO
                 "   Sharon Chisholm
                     Nortel Networks
                     PO Box 3511 Station C
                     Ottawa, Ont.  K1Y 4H7
                     Canada
                     schishol@nortelnetworks.com

                     Dan Romascanu
                     Avaya Inc.
                     Atidim Technology Park, Bldg. #3
                     Tel Aviv, 61131
                     Israel
                     Tel: +972-3-645-8414
                     Email: dromasca@avaya.com"
         DESCRIPTION
                 "The MIB module describes ITU Alarm information
                 as defined in ITU Recommendation M.3100 [M.3100],
                 X.733 [X.733] and X.736 [X.736]."

         REVISION    "200104300000Z"
         DESCRIPTION
             "Initial version, published as RFC XXXX."
         ::= { mib-2 xx }


Chisholm & Romascanu        Standards Track                    [Page 26]
                               Alarm MIB                      April 2001



   -- Textual Conventions


   ItuPerceivedSeverity ::= TEXTUAL-CONVENTION
       STATUS current
       DESCRIPTION
               "ITU perceived severity values as per M.3100
               and X.733"
       SYNTAX         INTEGER 			{
              cleared (1),
              indeterminate (2),
              critical (3),
              major (4),
              minor (5),
              warning (6)
              } 	


   ituAlarmObjects OBJECT IDENTIFIER ::= { ituAlarm 1 }

   ituAlarmModel OBJECT IDENTIFIER ::= { ituAlarmObjects 1 }

   ituAlarmActive  OBJECT IDENTIFIER ::= { ituAlarmObjects 2 }

   ituAlarmTable OBJECT-TYPE
      SYNTAX      SEQUENCE OF ItuAlarmEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "A table of ITU Alarm information for possible alarms
          on the system."
      ::= { ituAlarmModel 1 }

   ituAlarmEntry OBJECT-TYPE
      SYNTAX      ItuAlarmEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "Entries appear in this table for each possible alarm
           severity."
      INDEX       { alarmListName, alarmModelIndex,
      ituAlarmPerceivedSeverity }
      ::= { ituAlarmTable 1 }

   ItuAlarmEntry ::= SEQUENCE {
      ituAlarmPerceivedSeverity     ItuPerceivedSeverity,
      ituAlarmEventType             IANAItuEventType,
      ituAlarmProbableCause         IANAItuProbableCause,
      ituAlarmAdditionalText        DisplayString,
      ituAlarmConditionPointer      RowPointer }



Chisholm & Romascanu        Standards Track                    [Page 27]
                               Alarm MIB                      April 2001


   ituAlarmPerceivedSeverity OBJECT-TYPE
      SYNTAX  ItuPerceivedSeverity
      MAX-ACCESS	read-write
      STATUS       current
      DESCRIPTION
               " ITU perceived severity values as per [M.3100] and
               [X.733]."
       ::= { ituAlarmEntry 1 }

   ituAlarmEventType OBJECT-TYPE
      SYNTAX		IANAItuEventType
      MAX-ACCESS   read-write
      STATUS       current
      DESCRIPTION
               " Represents the event type values for the alarms as per
                 [M.3100], [X.733] and [X.736]"
       ::= { ituAlarmEntry 2 }

   ituAlarmProbableCause OBJECT-TYPE
      SYNTAX      IANAItuProbableCause
      MAX-ACCESS	read-write
      STATUS       current

       DESCRIPTION
               " ITU probable cause values as per [M.3100],
               [X.733] and [X.736]."
       ::= { ituAlarmEntry 3 }


   ituAlarmAdditionalText OBJECT-TYPE
   	SYNTAX DisplayString
   	MAX-ACCESS read-write
   	STATUS	   current	
   	DESCRIPTION
               " Represents the additional text field for the alarm
               as per [M.3100] and [X.733]."
   	 ::= { ituAlarmEntry 4}

   ituAlarmConditionPointer OBJECT-TYPE
      SYNTAX     RowPointer
      MAX-ACCESS read-write
      STATUS     current
      DESCRIPTION
      "If there is no corresponding condition defined in the condition
      MIB for this alarm state, then system this object MUST BE `0.0'.
      When there is a corresponding condition defined in the condition
      MIB for this alarm state, this object points to the corresponding
      row in the condition profile table."
      ::= { ituAlarmEntry 5 }

   -- ITU Active Alarm Table --



Chisholm & Romascanu        Standards Track                    [Page 28]
                               Alarm MIB                      April 2001


   ituAlarmActiveTable OBJECT-TYPE
      SYNTAX      SEQUENCE OF ItuAlarmActiveEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "A table of ITU information for active alarms entries."
      ::= { ituAlarmActive 1 }

   ituAlarmActiveEntry OBJECT-TYPE
      SYNTAX      ItuAlarmActiveEntry
      MAX-ACCESS  not-accessible
      STATUS      current
      DESCRIPTION
          "Entries appear in this table when alarms are active.  They
          are removed when the alarm is no longer occurring."
      INDEX       { alarmListName, alarmActiveTimeFilter,
                   alarmActiveIndex }
      ::= { ituAlarmActiveTable 1 }

   ItuAlarmActiveEntry ::= SEQUENCE {
       ituAlarmActiveTrendIndication       INTEGER,
       ituAlarmActiveDetector              AutonomousType,
       ituAlarmActiveServiceProvider       AutonomousType,
       ituAlarmActiveServiceUser           AutonomousType
       }

   ituAlarmActiveTrendIndication OBJECT-TYPE
      SYNTAX		INTEGER
         {
         moreSevere (1),
         noChange (2),
         lessSevere (3)
         }
      MAX-ACCESS	read-only
      STATUS       current
      DESCRIPTION
               " Represents the trend indication values for the alarms
               as per [M.3100] and [X.733]."
       ::= { ituAlarmActiveEntry 1 }

   ituAlarmActiveDetector OBJECT-TYPE
      SYNTAX AutonomousType
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
      	"Represents the SecurityAlarmDetector object from [X.736]."
      ::= { ituAlarmActiveEntry 2 }

   ituAlarmActiveServiceProvider OBJECT-TYPE
      SYNTAX AutonomousType
      MAX-ACCESS read-only
      STATUS current


Chisholm & Romascanu        Standards Track                    [Page 29]
                               Alarm MIB                      April 2001


      DESCRIPTION
      	"Represents the ServiceProvider object from [X.736]."
      ::= { ituAlarmActiveEntry 3 }

   ituAlarmActiveServiceUser OBJECT-TYPE
      SYNTAX AutonomousType
      MAX-ACCESS read-only
      STATUS current
      DESCRIPTION
      	"Represents the SericeUser object from [X.736]."
      ::= { ituAlarmActiveEntry 4 }


   -- Statistics and Counters

   ituAlarmActiveStatsTable  OBJECT-TYPE
         SYNTAX  SEQUENCE OF ItuAlarmActiveStatsEntry
         MAX-ACCESS  not-accessible
         STATUS  current
         DESCRIPTION
            "This table represents the ITU alarm statistics
            information."
     ::= { ituAlarmActive 2 }


   ituAlarmActiveStatsEntry OBJECT-TYPE
         SYNTAX  ItuAlarmActiveStatsEntry
         MAX-ACCESS  not-accessible
         STATUS  current
         DESCRIPTION
            "Statistics on the current active ITU alarms."
         INDEX   { alarmListName }

     ::= {  ituAlarmActiveStatsTable 1 }



   ItuAlarmActiveStatsEntry ::=
    SEQUENCE {
      ituAlarmActiveStatsIndeterminateCurrent Gauge32,
      ituAlarmActiveStatsCriticalCurrent      Gauge32,
      ituAlarmActiveStatsMajorCurrent	        Gauge32,
      ituAlarmActiveStatsMinorCurrent         Gauge32,
      ituAlarmActiveStatsWarningCurrent       Gauge32,	
      ituAlarmActiveStatsIndeterminateTotal   Counter32,
      ituAlarmActiveStatsCriticalTotal        Counter32,
      ituAlarmActiveStatsMajorTotal           Counter32,
      ituAlarmActiveStatsMinorTotal           Counter32,
      ituAlarmActiveStatsWarningTotal	        Counter32
    }

   ituAlarmActiveStatsIndeterminateCurrent OBJECT-TYPE


Chisholm & Romascanu        Standards Track                    [Page 30]
                               Alarm MIB                      April 2001


      SYNTAX      Gauge32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "A count of the current number of active alarms with a
           ituAlarmPerceivedSeverity of indeterminate."
      ::= { ituAlarmActiveStatsEntry 1 }

   ituAlarmActiveStatsCriticalCurrent OBJECT-TYPE
      SYNTAX      Gauge32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "A count of the current number of active alarms with a
           ituAlarmPerceivedSeverity of critical."
      ::= { ituAlarmActiveStatsEntry 2 }

   ituAlarmActiveStatsMajorCurrent OBJECT-TYPE
      SYNTAX      Gauge32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "A count of the current number of active alarms with a
           ituAlarmPerceivedSeverity of major."
      ::= { ituAlarmActiveStatsEntry 3 }

   ituAlarmActiveStatsMinorCurrent OBJECT-TYPE
      SYNTAX      Gauge32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "A count of the current number of active alarms with a
           ituAlarmPerceivedSeverity of minor."
      ::= { ituAlarmActiveStatsEntry 4 }

   ituAlarmActiveStatsWarningCurrent OBJECT-TYPE
      SYNTAX      Gauge32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "A count of the current number of active alarms with a
           ituAlarmPerceivedSeverity of warning."
      ::= { ituAlarmActiveStatsEntry 5 }

   ituAlarmActiveStatsIndeterminateTotal OBJECT-TYPE
      SYNTAX      Counter32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "A count of the total number of active alarms with a
           ituAlarmPerceivedSeverity of indeterminate since system
           restart."


Chisholm & Romascanu        Standards Track                    [Page 31]
                               Alarm MIB                      April 2001


      ::= { ituAlarmActiveStatsEntry 6 }

   ituAlarmActiveStatsCriticalTotal OBJECT-TYPE
      SYNTAX      Counter32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "A count of the total number of active alarms with a
           ituAlarmPerceivedSeverity of critical since system restart."
      ::= { ituAlarmActiveStatsEntry 7 }

   ituAlarmActiveStatsMajorTotal OBJECT-TYPE
      SYNTAX      Counter32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "A count of the total number of active alarms with a
           ituAlarmPerceivedSeverity of major since system restart."
      ::= { ituAlarmActiveStatsEntry 8 }

   ituAlarmActiveStatsMinorTotal OBJECT-TYPE
      SYNTAX      Counter32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "A count of the total number of active alarms with a
           ituAlarmPerceivedSeverity of minor since system restart."
      ::= { ituAlarmActiveStatsEntry 9 }

   ituAlarmActiveStatsWarningTotal OBJECT-TYPE
      SYNTAX      Counter32
      MAX-ACCESS  read-only
      STATUS      current
      DESCRIPTION
          "A count of the total number of active alarms with a
           ituAlarmPerceivedSeverity of warning since system restart."
      ::= { ituAlarmActiveStatsEntry 10 }

   -- Conformance

   ituAlarmConformance OBJECT IDENTIFIER ::= { ituAlarm 2 }
   ituAlarmCompliances  OBJECT IDENTIFIER ::= { ituAlarmConformance 1 }

   ituAlarmCompliance MODULE-COMPLIANCE
      STATUS  current
      DESCRIPTION
             "The compliance statement for systems supporting
             the ITU Alarm MIB."
      MODULE -- this module
          MANDATORY-GROUPS {
              ituAlarmGroup
              }


Chisholm & Romascanu        Standards Track                    [Page 32]
                               Alarm MIB                      April 2001


     ::= { ituAlarmCompliances 1 }

   ituAlarmGroups OBJECT IDENTIFIER ::= { ituAlarmConformance 2 }

   ituAlarmGroup OBJECT-GROUP
    OBJECTS {
      		ituAlarmEventType,
      		ituAlarmProbableCause,
      		ituAlarmPerceivedSeverity,
      		ituAlarmConditionPointer
       	  }
    STATUS   current
    DESCRIPTION
                  "ITU alarm details list group."
    ::= { ituAlarmGroups 1}

   ituAlarmServiceUserGroup OBJECT-GROUP
    OBJECTS {
              ituAlarmAdditionalText,
              ituAlarmActiveTrendIndication
            }
    STATUS current
    DESCRIPTION
            "The use of these parameters is a service-user option."
    ::= { ituAlarmGroups 2 }

   ituAlarmSecurityGroup OBJECT-GROUP
     OBJECTS {
             ituAlarmActiveDetector,
             ituAlarmActiveServiceProvider,
             ituAlarmActiveServiceUser
            }
     STATUS current
     DESCRIPTION
            "Security Alarm Reporting Function as defined in [X.736]"
     ::= { ituAlarmGroups 3 }

   ituAlarmStatisticsGroup OBJECT-GROUP
     OBJECTS {
            ituAlarmActiveStatsIndeterminateCurrent,
            ituAlarmActiveStatsCriticalCurrent,
            ituAlarmActiveStatsMajorCurrent,
            ituAlarmActiveStatsMinorCurrent,
            ituAlarmActiveStatsWarningCurrent,
            ituAlarmActiveStatsIndeterminateTotal,
            ituAlarmActiveStatsCriticalTotal,
            ituAlarmActiveStatsMajorTotal,
            ituAlarmActiveStatsMinorTotal,
            ituAlarmActiveStatsWarningTotal
             }
     STATUS current
     DESCRIPTION


Chisholm & Romascanu        Standards Track                    [Page 33]
                               Alarm MIB                      April 2001


     	"ITU Active Alarm Statistics."
     ::= { ituAlarmGroups 4 }

   END

6. Examples

6.1 Alarms based on 3-state linkUp/linkDown

   This example demonstrates an interface based alarm that goes into a
   state of "warning" when a linkDown notification is received but the
   ifAdminStatus indicates the interface was taken down
   administratively.  IfAdminStatus is "up" then there is a problem, it
   changes the state of the alarm to be critical.  A linkUp alarm
   clears the alarm.

  linkDown NOTIFICATION-TYPE
          OBJECTS { ifIndex, ifAdminStatus, ifOperStatus }
          STATUS  current
          DESCRIPTION
              ""
      ::= { snmpTraps 3 }

  linkUp NOTIFICATION-TYPE
          OBJECTS { ifIndex, ifAdminStatus, ifOperStatus }
          STATUS  current
          DESCRIPTION
              ""
      ::= { snmpTraps 4 }

   alarmModelIndex                  3
   alarmModelState                  warning (6)
   alarmModelNotificationId         linkDown
   alarmModelVarbindIndex           2
   alarmModelVarbindValue           down (2)
   alarmModelDescription            "linkDown Administratively"
   alarmModelSpecificPointer        ituAlarmEntry.3.6
   alarmModelRowStatus              active (1)
   ituAlarmEventType                communicationsAlarm (2)
   ituPerceivedSeverity             warning (6)

   alarmModelIndex                  3
   alarmModelState                  cleared (1)
   alarmModelNotificationId         linkUp
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0
   alarmModelDescription            ""
   alarmModelSpecificPointer        ituAlarmEntry.3.1
   alarmModelRowStatus              active (1)
   ituAlarmEventType                communicationsAlarm (2)
   ituPerceivedSeverity             cleared (1)



Chisholm & Romascanu        Standards Track                    [Page 34]
                               Alarm MIB                      April 2001



   alarmModelIndex                  3
   alarmModelState                  critical (3)
   alarmModelNotificationId         linkDown
   alarmModelVarbindIndex           2
   alarmModelVarbindValue           up (1)
   alarmModelDescription            "linkDown - confirmed problem"
   alarmModelSpecificPointer        ituAlarmEntry.3.3
   alarmModelRowStatus              active (1)
   ituAlarmEventType                communicationsAlarm (2)
   ituPerceivedSeverity             critical (3)

   alarmActiveIndex                 1
   alarmActiveTime                  2342464573
   alarmActiveDateAndTime           DateAndTime,
   alarmActiveEngineID              SnmpEngineID,
   alarmActiveEngineAddress         10.10.10.10
   alarmActiveContextEngineID       SnmpEngineID,
   alarmActiveContextName           SnmpAdminString,
   alarmActiveVariables             3
   alarmActiveNotificationID        1.3.6.1.6.3.1.1.5.3
   alarmActiveLogIndex              0
   alarmActiveDetailsIndex          3
   alarmActiveModelPointer          ituAlarmActiveEntry.1
   ituAlarmActiveTrendIndication    moreSevere (1)
   ituAlarmActiveProbableCause      cableTamper ( )
   ituAlarmActiveAdditionalText             ""
   ituAlarmDetector                   0.0
   ituAlarmServiceProvider            0.0
   ituAlarmServiceUser                0.0

   alarmActiveVariableIndex                 1
   alarmActiveVariableID                    ifIndex
   alarmActiveVariableValueType             integer32(4)
   alarmActiveVariableCounter32Val          0
   alarmActiveVariableUnsigned32Val         0
   alarmActiveVariableTimeTicksVal          0
   alarmActiveVariableInteger32Val          346
   alarmActiveVariableOctetStringVal        ""
   alarmActiveVariableIpAddressVal          0
   alarmActiveVariableOidVal                0.0
   alarmActiveVariableCounter64Val          0
   alarmActiveVariableIndex                 2
   alarmActiveVariableID                    ifAdminStatus
   alarmActiveVariableValueType             integer32(4)
   alarmActiveVariableCounter32Val          0
   alarmActiveVariableUnsigned32Val         0
   alarmActiveVariableTimeTicksVal          0
   alarmActiveVariableInteger32Val          up (1)
   alarmActiveVariableOctetStringVal        ""
   alarmActiveVariableIpAddressVal          0
   alarmActiveVariableOidVal                0.0


Chisholm & Romascanu        Standards Track                    [Page 35]
                               Alarm MIB                      April 2001


   alarmActiveVariableCounter64Val          0
   alarmActiveVariableIndex                 3
   alarmActiveVariableID                    ifOperStatus
   alarmActiveVariableValueType             integer32(4)
   alarmActiveVariableCounter32Val          0
   alarmActiveVariableUnsigned32Val         0
   alarmActiveVariableTimeTicksVal          0
   alarmActiveVariableInteger32Val          down(2)
   alarmActiveVariableOctetStringVal        ""
   alarmActiveVariableIpAddressVal          0
   alarmActiveVariableOidVal                0.0
   alarmActiveVariableCounter64Val          0
   alarmActiveVariableOpaqueVal


6.2 Alarms based on notifications (M:N)


  Assume 4 traps.
  acmeWidgetTemperatureNormal acme.traps.1
  acmeWidgetTemperatureMinor  acme.traps.2
  acmeWidgetTemperatureMajor  acme.traps.3
  acmeWidgetTemperatureCritical acme.traps.4

   alarmModelIndex                  4
   alarmModelState                  cleared (1)
   alarmModelNotificationId         acmewidgetTemperatureNormal
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0
   alarmModelDescription            "Widget Temperature"
   alarmModelSpecificPointer        ituAlarmEntry.4.1
   alarmModelRowStatus              active (1)
   ituAlarmEventType                environmentalAlarm (6)
   ituPerceivedSeverity             cleared (1)

   alarmModelIndex                  4
   alarmModelState                  minor (5)
   alarmModelNotificationId         acmeWidgetTemperatureMinor
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0
   alarmModelDescription            "Widget Temperature"
   alarmModelSpecificPointer        ituAlarmEntry.4.5
   alarmModelRowStatus              active (1)
   ituAlarmEventType                environmentalAlarm (6)
   ituPerceivedSeverity             minor (5)


   alarmModelIndex                  4
   alarmModelState                  major (4)
   alarmModelNotificationId         acmeWidgetTemperatureMajor
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0


Chisholm & Romascanu        Standards Track                    [Page 36]
                               Alarm MIB                      April 2001


   alarmModelDescription            "Widget Temperature"
   alarmModelSpecificPointer        ituAlarmEntry.4.4
   alarmModelRowStatus              active (1)
   ituAlarmEventType                environmentalAlarm (6)
   ituPerceivedSeverity             major (4)


   alarmModelIndex                  4
   alarmModelState                  critical (3)
   alarmModelNotificationId         acmeWidgetTemperatureCritical
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0
   alarmModelDescription            "Widget Temperature"
   alarmModelSpecificPointer        ituAlarmEntry.4.3
   alarmModelRowStatus              active (1)
   ituAlarmEventState               environmentalAlarm (6)
   ituPerceivedSeverity             critical (3)


6.3 Alarms without notifications, but that still want
  to send out a notification

  Don't assume 4 traps.
  acmeWidgetTemperatureNormal acme.traps.1
  acmeWidgetTemperatureMinor  acme.traps.2
  acmeWidgetTemperatureMajor  acme.traps.3
  acmeWidgetTemperatureCritical acme.traps.4

   alarmModelIndex                  5
   alarmModelState                  cleared (1)
   alarmModelNotificationId         alarmClear
   alarmModelVarbindIndex           2
   alarmModelVarbindValue           cleared (1)
   alarmModelDescription            "Acme Widget Temperature Normal"
   alarmModelSpecificPointer        ituAlarmEntry.5.1
   alarmModelRowStatus              active (1)
   ituAlarmEventType                environmentalAlarm (6)
   ituPerceivedSeverity             cleared (1)


   alarmModelIndex                  5
   alarmModelState                  minor (5)
   alarmModelNotificationId         alarmRaise
   alarmModelVarbindIndex           2
   alarmModelVarbindValue           minor (5)
   alarmModelDescription            "Acme Widget Temperature Minor"
   alarmModelSpecificPointer        ituAlarmEntry.5.5
   alarmModelRowStatus              active (1)
   ituAlarmEventState               environmentalAlarm (6)
   ituPerceivedSeverity             minor (5)




Chisholm & Romascanu        Standards Track                    [Page 37]
                               Alarm MIB                      April 2001


   alarmModelIndex                  5
   alarmModelState                  major (4)
   alarmModelNotificationId         alarmRaise
   alarmModelVarbindIndex           2
   alarmModelVarbindValue           major (4)
   alarmModelDescription            "Acme Widget Temperature Major"
   alarmModelSpecificPointer        ituAlarmEntry.5.4
   alarmModelRowStatus              active (1)
   ituAlarmEventType                environmentalAlarm (6)
   ituPerceivedSeverity             major (4)

   alarmModelIndex                  5
   alarmModelState                  critical (3)
   alarmModelNotificationId         alarmRaise
   alarmModelVarbindIndex           2
   alarmModelVarbindValue           critical (3)
   alarmModelDescription            "Acme Widget Temperature Critical"
   alarmModelSpecificPointer        ituAlarmEntry.5.3
   alarmModelRowStatus              active (1)
   ituAlarmEventType                environmentalAlarm (6)
   ituPerceivedSeverity             critical (3)


6.4 Alarms without notifications that don't want to
  send out notifications

  (Or the above with no managers in the SNMP-TARGET-MIB
   which allows for logging via the notification log)

  Don't assume 4 traps.
  acmeWidgetTemperatureNormal acme.traps.1
  acmeWidgetTemperatureMinor  acme.traps.2
  acmeWidgetTemperatureMajor  acme.traps.3
  acmeWidgetTemperatureCritical acme.traps.4

   alarmModelIndex                  6
   alarmModelState                  cleared (1)
   alarmModelNotificationId         0.0
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0
   alarmModelDescription            "Widget Temperature"
   alarmModelSpecificPointer        ituAlarmEntry.6.1
   alarmModelRowStatus              active (1)
   ituAlarmEventType                environmentalAlarm (6)
   ituPerceivedSeverity             cleared (1)


   alarmModelIndex                  6
   alarmModelState                  minor (5)
   alarmModelNotificationId         0.0
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0


Chisholm & Romascanu        Standards Track                    [Page 38]
                               Alarm MIB                      April 2001


   alarmModelDescription            "Widget Temperature"
   alarmModelSpecificPointer        ituAlarmEntry.6.5
   alarmModelRowStatus              active (1)
   ituAlarmEventState               environmentalAlarm (6)
   ituAlarmPerceivedSeverity        minor (5)

   alarmModelIndex                  6
   alarmModelState                  major (4)
   alarmModelNotificationId         0.0
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0
   alarmModelDescription            "Widget Temperature"
   alarmModelSpecificPointer        ituAlarmEntry.6.4
   alarmModelRowStatus              active (1)
   ituAlarmEventType                environmentalAlarm (6)
   ituPerceivedSeverity             major (4)


   alarmModelIndex                  6
   alarmModelState                  critical (3)
   alarmModelNotificationId         0.0
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0
   alarmModelDescription            "Widget Temperature Severe"
   alarmModelSpecificPointer        ituAlarmEntry.6.3
   alarmModelRowStatus              active (1)
   ituAlarmEventType                environmentalAlarm (6)
   ituPerceivedSeverity             critical (3)




6.5 Printer MIB Alarm Example

    prtAlertSeverityLevel OBJECT-TYPE
     -- This value is a type 1 enumeration
     SYNTAX     INTEGER {
                  other(1),
                  critical(3),
                  warning(4)
              }
     MAX-ACCESS read-only
     STATUS     current
     DESCRIPTION
       "The level of severity of this alert table entry.  The printer
       determines the severity level assigned to each entry into the
       table."
     ::= { prtAlertEntry 2 }

    printerV2Alert NOTIFICATION-TYPE
     OBJECTS { prtAlertIndex, prtAlertSeverityLevel, prtAlertGroup,
             prtAlertGroupIndex, prtAlertLocation, prtAlertCode }


Chisholm & Romascanu        Standards Track                    [Page 39]
                               Alarm MIB                      April 2001


     STATUS  current
     DESCRIPTION
       "This trap is sent whenever a critical event is added to the
       prtAlertTable."
     ::= { printerV2AlertPrefix 1 }

   alarmModelIndex                  9
   alarmModelState                  cleared (1)
   alarmModelNotificationId         alarmClear
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0
   alarmModelDescription            "Printer Alarm"
   alarmModelSpecificPointer        0.0
   alarmModelRowStatus              active (1)

   alarmModelIndex                  9
   alarmModelState                  warning (6)
   alarmModelNotificationId         printerV2Alert
   alarmModelVarbindIndex           2
   alarmModelVarbindValue           warning (4)
   alarmModelDescription            "Printer Alarm"
   alarmModelSpecificPointer        0.0
   alarmModelRowStatus              active (1)

   alarmModelIndex                  9
   alarmModelState                  other (7)
   alarmModelNotificationId         printerV2Alert
   alarmModelVarbindIndex           2
   alarmModelVarbindValue           other (1)
   alarmModelDescription            "Printer Alarm - unknown severity"
   alarmModelSpecificPointer        0.0
   alarmModelRowStatus              active (1)

   alarmModelIndex                  9
   alarmModelState                  critical (3)
   alarmModelNotificationId         printerV2Alert
   alarmModelVarbindIndex           2
   alarmModelVarbindValue           critical (3)
   alarmModelDescription            "Printer Alarm"
   alarmModelSpecificPointer        0.0
   alarmModelRowStatus              active (1)

6.6 RMON Alarm Example

   alarmModelIndex                  6
   alarmModelState                  1
   alarmModelNotificationId         alarmClear
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0
   alarmModelDescription            "RMON Alarm Clear"
   alarmModelSpecificPointer        0.0
   alarmModelRowStatus              active (1)


Chisholm & Romascanu        Standards Track                    [Page 40]
                               Alarm MIB                      April 2001



   alarmModelIndex                  6
   alarmModelState                  2
   alarmModelNotificationId         RisingAlarm
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0
   alarmModelDescription            "RMON Rising Alarm"
   alarmModelSpecificPointer        0.0
   alarmModelRowStatus              active (1)


   alarmModelIndex                  6
   alarmModelState                  3
   alarmModelNotificationId         FallingAlarm
   alarmModelVarbindIndex           0
   alarmModelVarbindValue           0
   alarmModelDescription            "RMON Falling Alarm"
   alarmModelSpecificPointer        0.0




6.7 Relation to Notification Log MIB

       Define the following Object:
         acmeWidgetIndex OBJECT-TYPE
           SYNTAX  Integer32
           MAX-ACCESS read-only
           STATUS   current
           DESCRIPTION
             "A unique number which identifies a particular Widget."
         ::= { acmeWidgetEntry 1 }

       Define the following three traps:
         acmeWidgetTemperatureCritical NOTIFICATION-TYPE
           OBJECTS { acmeWidgetIndex }
           STATUS        current
           DESCRIPTION
             "This trap indicates that the indicated
              widget has reached a critical temperature."
         ::= { acmeWidgetTraps 1 }

         acmeWidgetTemperatureNormal NOTIFICATION-TYPE
           OBJECTS { acmeWidgetIndex }
           STATUS        current
           DESCRIPTION
             "This trap indicates that the indicated widget has
               reached a normal temperature."
         ::= { acmeWidgetTraps 2 }


    dsx3LineStatusChange NOTIFICATION-TYPE


Chisholm & Romascanu        Standards Track                    [Page 41]
                               Alarm MIB                      April 2001


        OBJECTS { dsx3LineStatus,
                  dsx3LineStatusLastChange }
        STATUS  current
        DESCRIPTION
                "A dsx3LineStatusChange trap is sent when the
                value of an instance of dsx3LineStatus changes. It
                can be utilized by an NMS to trigger polls.  When
                the line status change results in a lower level
                line status change (i.e. ds1), then no traps for
                the lower level are sent."
                   ::= { ds3Traps 0 1 }

       0. Active alarm table empty and nothing in notification log
                ___________________________      _____________________
               | alarmActiveTable          |    | nlmLogTable         |
               |---------------------------|    |---------------------|
               | alarmActiveIndex |  alarm |    | nlmLogIndex | alarm |
               |---------------------------|    |---------------------|
               |___________________________|    |_____________________|

       1. Temperature of widget 2 goes critical
                __________________________________________________
               | alarmActiveTable                                 |
               |--------------------------------------------------|
               | alarmActiveIndex |  alarm                        |
               |--------------------------------------------------|
               |        1         | acmeWidgetTemperatureCritical |
               |__________________________________________________|

                _____________________________________________
               | nlmLogTable                                 |
               |---------------------------------------------|
               | nlmLogIndex |  alarm                        |
               |---------------------------------------------|
               |      1      | acmeWidgetTemperatureCritical |
               |_____________________________________________|


















Chisholm & Romascanu        Standards Track                    [Page 42]
                               Alarm MIB                      April 2001


       2. the value of an instance of dsx3LineStatus changes
                __________________________________________________
               | alarmActiveTable                                 |
               |--------------------------------------------------|
               | alarmActiveIndex |  alarm                        |
               |--------------------------------------------------|
               |        1         | acmeWidgetTemperatureCritical |
               |__________________________________________________|

                _____________________________________________
               | nlmLogTable                                 |
               |---------------------------------------------|
               | nlmLogIndex |  alarm                        |
               |---------------------------------------------|
               |      1      | acmeWidgetTemperatureCritical |
               |      2      | dsx3LineStatusChange          |
               |_____________________________________________|

       3. Temperature of widget 2 goes back to normal
                __________________________________________________
               | alarmActiveTable                                 |
               |--------------------------------------------------|
               | alarmActiveIndex |  alarm                        |
               |--------------------------------------------------|
               |__________________________________________________|

                _____________________________________________
               | nlmLogTable                                 |
               |---------------------------------------------|
               | nlmLogIndex |  alarm                        |
               |---------------------------------------------|
               |      1      | acmeWidgetTemperatureCritical |
               |      2      | bgpBackwardTransition         |
               |      3      | acmeWidgetTemperatureNormal   |
               |_____________________________________________|



7. Security Considerations

  There are a number of management objects defined in this MIB
  that have a MAX-ACCESS clause of read-write and/or read-create.
  Such objects may be considered sensitive or vulnerable in some
  network environments.  The support for SET operations in a
  non-secure environment without proper protection can have a
  negative effect on network operations.

  SNMPv1 by itself is not a secure environment.  Even if the network
  itself is secure (for example by using IPSec), even then, there is no
  control as to who on the secure network is allowed to access and
  GET/SET (read/change/create/delete) the objects in this MIB.



Chisholm & Romascanu        Standards Track                    [Page 43]
                               Alarm MIB                      April 2001


  It is recommended that the implementers consider the security
  features as provided by the SNMPv3 framework.  Specifically, the use
  of the User-based Security Model RFC 2574 [RFC2574] and the View-
  based Access Control Model RFC 2575 [RFC2575] is recommended.

  It is then a customer/user responsibility to ensure that the SNMP
  entity giving access to an instance of this MIB, is properly
  configured to give access to the objects only to those principals
  (users) that have legitimate rights to indeed GET or SET
  (change/create/delete) them.


8. Authors' Address

  Sharon Chisholm
  Nortel Networks
  PO Box 3511, Station C
  Ottawa, Ontario, K1Y 4H7
  Canada
  Email: schishol@nortelnetworks.com

  Dan Romascanu
  Avaya Inc.
  Atidim Technology Park, Bldg. #3
  Tel Aviv, 61131
  Israel
  Tel: +972-3-645-8414
  Email: dromasca@avaya.com

9. Acknowledgements

  This document is a product of the DISMAN Working Group.
  ...

10. References

  [RFC2571]   Harrington, D., Presuhn, R., and B. Wijnen, "An
              Architecture for Describing SNMP Management Frameworks",
              RFC 2571, April 41999.

  [RFC1155]   Rose, M., and K. McCloghrie, "Structure and Identification
              of Management Information for TCP/IP-based Internets", STD
              16, RFC 1155, May 1990.

  [RFC1212]   Rose, M., and K. McCloghrie, "Concise MIB Definitions",
              STD 16, RFC 1212, March 1991.

  [RFC1215]   M. Rose, "A Convention for Defining Traps for use with the
              SNMP", RFC 1215, March 1991.

  [RFC2578]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
              Rose, M., and S. Waldbusser, "Structure of Management


Chisholm & Romascanu        Standards Track                    [Page 44]
                               Alarm MIB                      April 2001


              Information Version 2 (SMIv2)", STD 58, RFC 2578, April
              1999.

  [RFC2579]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
              Rose, M., and S. Waldbusser, "Textual Conventions for
              SMIv2", STD 58, RFC 2579, April 1999.

  [RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
              Rose, M., and S. Waldbusser, "Conformance Statements for
              SMIv2", STD 58, RFC 2580, April 1999.

  [RFC1157]   Case, J., Fedor, M., Schoffstall, M., and J. Davin,
              "Simple Network Management Protocol", STD 15, RFC 1157,
              May 1990.

  [RFC1901]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
              "Introduction to Community-based SNMPv2", RFC 1901,
January
              1996.

  [RFC1906]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
              "Transport Mappings for Version 2 of the Simple Network
              Management Protocol (SNMPv2)", RFC 1906, January 1996.

  [RFC2572]   Case, J., Harrington D., Presuhn R., and B. Wijnen,
              "Message Processing and Dispatching for the Simple
              Network Management Protocol (SNMP)", RFC 2572, April
              1999.

  [RFC2574]   Blumenthal, U., and B. Wijnen, "User-based Security Model
              (USM) for version 3 of the Simple Network Management
              Protocol (SNMPv3)", RFC 2574, April 1999.

  [RFC1905]   Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,
              "Protocol Operations for Version 2 of the Simple Network
              Management Protocol (SNMPv2)", RFC 1905, January 1996.

  [RFC2573]   Levi, D., Meyer, P., and B. Stewart, "SNMPv3
              Applications", RFC 2573, April 1999.

  [RFC2575]   Wijnen, B., Presuhn, R., and K. McCloghrie, "View-based
              Access Control Model (VACM) for the Simple Network
              Management Protocol (SNMP)", RFC 2575, April 1999.

  [RFC2570]   Case, J., Mundy, R., Partain, D., and B. Stewart,
              "Introduction to Version 3 of the Internet-standard
              Network Management Framework", RFC 2570, April 1999.

  [RFC2021]   Waldbusser, S. "Remote Network Monitoring Management
              Information Base Version 2 using SMIv2", RFC 2021,
              January 1997



Chisholm & Romascanu        Standards Track                    [Page 45]
                               Alarm MIB                      April 2001


  [RFC2274]   Blumenthal, U. and B. Wijnen, "User-based Security
              Model (USM) for version 3 of the Simple Network Management
              Protocol (SNMPv3)", RFC 2274, January 1998.

  [RFC2275]   Wijnen, B., Presuhn, R. and K. McCloghrie, "View-based
              Access Control Model (VACM) for the Simple Network
              Management Protocol (SNMP)", RFC 2275, January 1998.

  [RFC2119]   Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

  [RFC3014]   Stewart, B.,  Kavasseri, R., "Notification Log MIB,
              RFC 3014, November 2000

  [RFC2037]   McCloghrie, K., Brierman, A., "Entity MIB using SMIv2",
              RFC2037, October 1996

  [RFC2233]   McCloghrie, K., Kastenholz, F., "The Interfaces Group
              MIB using SMIv2", RFC2233, November 1997

  [RFC1759]   Smith, R., Wright, F., Hastings, T., Zilles, S.,
              Gullenskop, J., "Printer MIB", RFC 3014, March 1995

  [M.3100]    ITU Recommendation M.3100, "Generic Network Information
              Model", 1995

  [X.733]     ITU Recommendation X.733, "Information Technology - Open
              Systems Interconnection - System Management: Alarm
              Reporting Function", 1992

  [X.736]     ITU Recommendation X.736, "Information Technology - Open
              Systems Interconnection - System Management: Security
              Alarm Reporting Function", 1992

  [COND-MIB]  Huynh, A., Stewart, M., "Condition MIB",
              draft-huynh-disman-conditionmib-00.txt, February 2001,
              Work in Progress

  [ARC-MIB]   Lam, K., Huynh, A., "Alarm Reporting Control MIB",
              draft-lam-disman-arcmib-00.txt, February 2001,
              Work in Progress


11. Full Copyright Statement

  Copyright (C) The Internet Society (2001). All Rights Reserved.

  This document and translations of it may be copied and furnished to
  others, and derivative works that comment on or otherwise explain it
  or assist in its implementation may be prepared, copied, published
  and distributed, in whole or in part, without restriction of any kind,
  provided that the above copyright notice and this paragraph are


Chisholm & Romascanu        Standards Track                    [Page 46]
                               Alarm MIB                      April 2001


  included on all such copies and derivative works.  However, this
  document itself may not be modified in any way, such as by removing
  the copyright notice or references to the Internet Society or other
  Internet organizations, except as needed for the  purpose of
  developing Internet standards in which case the procedures for
  copyrights defined in the Internet Standards process must be followed,
  or as required to translate it into languages other than English.

  The limited permissions granted above are perpetual and will not be
  revoked by the Internet Society or its successors or assigns.

  This document and the information contained herein is provided on an
  "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
  TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
  NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN
  WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
  MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.





































Chisholm & Romascanu        Standards Track                    [Page 47]
