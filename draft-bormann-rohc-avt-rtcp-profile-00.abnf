out = csi[pos, nb]
out = (@accum << bits) | (op & ((1 << bits) - 1))
out = -out if s[bits] != 0
out = ''
i = 0
op = bo[i]; i += 1
nb = n(op, 5)
delta = n(op, 2, op)
nb = ((op >> 3) & 3) + 1
val = read_csi(nb)
val = ("\0" * (4-nb)) + val
val = val.unpack('N')[0] + delta
out = ''
r = ROHC_RTCP.new
expect = ''
expect = decode($1)
expect = nil
refsi = $1.to_i
testdata = decode($2)
out = r.decompress(testdata, refsi)
out = nil
