name = definition

      The name of a rule is simply the name itself; it is separated from
      the definition by the equal character ("="). Whitespace is only
      significant in that continuation lines of a definition are
      indented.

alpha         = lowalpha | hialpha
lowalpha      = "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h"
                    | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p"
                    | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x"
                    | "y" | "z"
hialpha       = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H"
                    | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P"
                    | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X"
                    | "Y" | "Z"
digit         = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7"
                    | "8" | "9"
OCTET         = <any 8-bit byte>
CHAR          = <any character>
CTL           = <any control character>
SP            = <space character>
NL            = <newline>
LWSP          = SP | NL | <horizontal-tab>
tspecial      = "(" | ")" | "@" | "," | ";" | ":" | "\" | <">
                    | "/" | "[" | "]" | "?" | SP
token         = 1*<any CHAR except CTLs or tspecials>
quoted-string = ( <"> *qdtext <"> ) | ( "<" *qatext ">")
qdtext        = <any CHAR except <"> and CTLs but including LWSP>
qatext        = <any CHAR except "<", ">" and CTLs but
                      including LWSP>

script-uri = protocol "://" SERVER_NAME ":" SERVER_PORT enc-script
                   enc-path-info "?" QUERY_STRING

auth-scheme = "Basic" | token

CONTENT_LENGTH = "" | [ 1*digit ]

CONTENT_TYPE = "" | media-type
media-type   = type "/" subtype *( ";" parameter)
type         = token
subtype      = token
parameter    = attribute "=" value
attribute    = token
value        = token | quoted-string

GATEWAY_INTERFACE =  "CGI" "/" 1*digit "." 1*digit

PATH_INFO = "" | "/" path
path      = segment *( "/" segment )
segment   = *pchar
pchar     = <any CHAR except "/">

PATH_TRANSLATED = *CHAR

QUERY_STRING = query-string
query-string = *qchar
qchar        = unreserved | escape | reserved
unreserved   = alpha | digit | safe | extra
reserved     = ";" | "/" | "?" | ":" | "@" | "&" | "="
safe         = "$" | "-" | "_" | "." | "+"
extra        = "!" | "*" | "'" | "(" | ")" | ","
escape       = "%" hex hex
hex          = digit | "A" | "B" | "C" | "D" | "E" | "F" | "a"
                      | "b" | "c" | "d" | "e" | "f"

REMOTE_ADDR = hostnumber
hostnumber  = digits "." digits "." digits "." digits
digits      = 1*digit
REMOTE_HOST   = "" | hostname
hostname      = *( domainlabel ".") toplabel
domainlabel   = alphadigit [ *alphahypdigit alphadigit ]
toplabel      = alpha [ *alphahypdigit alphadigit ]
alphahypdigit = alphadigit | "-"
alphadigit    = alpha | digit

REMOTE_IDENT = *CHAR

userid      = token

http-method      = "GET" | "HEAD" | "POST" | extension-method
extension-method = token

SCRIPT_NAME = "" | "/" [ path ]

SERVER_NAME = hostname | hostnumber

SERVER_PORT = 1*digit

SERVER_PROTOCOL   = HTTP-Version | extension-version
HTTP-Version      = "HTTP" "/" 1*digit "." 1*digit
extension-version = protocol "/" 1*digit "." 1*digit
protocol          = 1*( alpha | digit | "+" | "-" | "." )

SERVER_SOFTWARE = *CHAR

search-string = search-word *( "+" search-word )
search-word   = 1*schar
schar         = xunreserved | escape | xreserved
xunreserved   = alpha | digit | xsafe | extra
xsafe         = "$" | "-" | "_" | "."
xreserved     = ";" | "/" | "?" | ":" | "@" | "&"

CGI-Response = *( CGI-Header | HTTP-Header ) NL [ Entity-Body ]
CGI-Header   = Content-type
                   | Location
                   | Status
                   | extension-header

generic-header = field-name ":" [ field-value ] NL
field-name     = 1*<any CHAR, excluding CTLs, SP and ":">
field-value    = *( field-content | LWSP )
field-content  = *( token | tspecial | quoted-string)

Content-Type = "Content-Type" ":" media-type NL

Location         = "Location" ":"
                            ( fragment-URI | rel-URL-abs-path ) NL
fragment-URI     = URI [ # fragmentid ]
URI              = scheme ":" *qchar
fragmentid       = *qchar

rel-URL-abs-path = "/" [ hpath ] [ "?" query-string ]
hpath            = fpsegment *( "/" psegment )
fpsegment        = 1*hchar
psegment         = *hchar
hchar            = alpha | digit | safe | extra
                          | ":" | "@" | "& | "="

Status        = "Status" ":" 3digit SP reason-phrase NL
reason-phrase = *<CHAR, excluding CTLs, NL>

