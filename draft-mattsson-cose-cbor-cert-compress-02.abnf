n = SS + 60 * (MM + 60 * (HH + 24 * (dd + 32 * (mm + 13 * yy))))

certificate = (
      tbsCertificate,
      signatureValue : bytes,
tbsCertificate = (
      type : int,
      serialNumber : bytes,
      signatureAlgorithm : int,
      issuer : [ 2* DistinguishedName ] / DistinguishedName,
      validity_notBefore: uint,
      validity_notAfter: uint,
      subject : [ 2* DistinguishedName ] / DistinguishedName,
      subjectPublicKeyInfo_algorithm : int,
      subjectPublicKeyInfo_subjectPublicKey : bytes,
      extensions : [ 2* extension ] / extension,
DistinguishedName = { + int => bytes } / text / bytes

extension = (int, ? text / bytes)
subjectAltName = 1

basicConstraints = 2 + pathLenConstraint

keyUsage = 12 + digitalSignature
               + 2 * keyAgreement + 4 * keyCertSign

extKeyUsage = 19 + id-kp-serverAuth + 2 * id-kp-clientAuth
                  + 4 * id-kp-codeSigning + 8 * id-kp-OCSPSigning

keyCertSign = 0) is encoded as 14 (= 12 + 2).

clientAuth = 0, id-kp-codeSigning = 1, id-kp-OCSPSigning = 1) is
