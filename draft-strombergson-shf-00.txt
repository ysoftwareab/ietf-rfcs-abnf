

Standards Track                                          J. Strombergson
Internet-Draft                                             InformAsic AB
Expires: May 1, 2004                                          L. Walleij
                                                          Ledasa Rangers
                                                            P. Faltstrom
                                                       Cisco Systems Inc
                                                                Nov 2003


                        The Standard Hex Format
                     draft-strombergson-shf-00.txt

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC2026.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups. Note that other
   groups may also distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time. It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at http://
   www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on May 1, 2004.

Copyright Notice

   Copyright (C) The Internet Society (2003). All Rights Reserved.

Abstract

   This document specifies the Standard Hex Format (SHF), a new,
   XML-based open format for describing hexadecimal data. SHF provides
   the ability to describe both small and large, simple and complex
   hexadecimal data dumps in an open, modern, transport and vendor
   neutral format.







Strombergson, et al.      Expires May 1, 2004                   [Page 1]

Internet-Draft          The Standard Hex Format                 Nov 2003


1. Introduction

   In the computing, network and embedded systems communities several
   different types of data formats for hexadecimal data are being used.
   Unfortunately, none of the formats used are truly open, vendor
   neutral and/or well defined.

   Even more problematic is the fact that none of these formats are able
   to represent data sizes that are getting more and more common. Data
   dumps comprising of multiple sub-blocks with different word sizes,
   data sizes spanning anywhere from a few bytes of data to data sizes
   much larger than 2^32 bits are not handled. Also, the checksum
   included in these formats are too simplistic and for larger data
   sizes provides insufficient ability to accurately detect errors.
   Alternatively, the overhead needed for proper error detection is very
   large.

   The Standard Hex format therefore is an effort to provide a modern,
   XML based format that is not too complex for simple tools and
   computing environments to implement, generate, parse and use. Yet the
   format is able to handle large data sizes, complex data structures
   and provide high quality error detection by leveraging standardized
   cryptographic hash functions.




























Strombergson, et al.      Expires May 1, 2004                   [Page 2]

Internet-Draft          The Standard Hex Format                 Nov 2003


2. Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [1].

   The key word Byte is to be interpreted as a group of 8 bits. The key
   word Octet is another name for Byte.

   The key word Word is to be interpreted as a group containing an
   integral number of Bytes.

   The expressiom 2^n is to be interpreted as the value two (2) raised
   to the n:th power. For example 2^8 equals the value 256.





































Strombergson, et al.      Expires May 1, 2004                   [Page 3]

Internet-Draft          The Standard Hex Format                 Nov 2003


3. Features and functionality

   The SHF-format contains the following features:

   o  Support for arbitrarily wide data words

   o  Support for very large data blocks

   o  Support for arbitrarily number of independent data blocks

   o  Data integrity detection against errors provided by the RFC3174
      specified (see [2]) SHA-1 cryptographic signature

   o  A XML based format

   In the embedded systems domain, 8- and 16-bit system are still used
   in large numbers and will continue to do so for any forseeable
   future. Simultaneously, more and more systems are using 64-bit and
   even larger word sizes.

   SHF supports all of these systems by allowing the word sizes to be
   specified. The word width MUST be an integer number of Bytes and at
   least one (1) Byte.

   SHF shall be able to be a represent both large and small data blocks.
   The data block MUST contain at least one (1) Word. Additionally, the
   data block MUST NOT be larger than (2^64)-1 bits.

   The SHF dump MUST contain at least one (1) data block. The maximum
   number of blocks supported is 2^64. Each data block in the dump MAY
   have different word sizes and start at different addresses.

   The checksum (or message digest) used to verify the error correctness
   or data integrity of each block is 20 Bytes (160 bits) long. The
   digest MUST be calculated on the data actual represented by the SHF
   data block, NOT the representation, i.e. NOT the ASCII-code. SHA-1 is
   only able to calculate a digest for a data block no larger than
   (2^64)-1 bits and this limits the size of each data block to in SHF
   to (2^64)-1 bits.












Strombergson, et al.      Expires May 1, 2004                   [Page 4]

Internet-Draft          The Standard Hex Format                 Nov 2003


4. SHF XML specification

   The SHF format consists of an XML data structure representing a dump.
   The dump consists of a dump header section and one (1) or more block
   sections containing data. Each block of data is independent of
   each-other.

   A short, symbolic example of a SHF dump is illustrated by the
   following structure:


   <dump name="(Human readable string)" blocks="(64 bit value)">
     <block name="(Human readable string)" start_address="(64 bit
            value)" word_size="(64 bit value)" length="(64 bit value)"
            checksum="(20 Byte digest)">
       <data>
         (Data)
       </data>
     </block>
   </dump>


4.1 Header section

   The header section comprises of the the dump tag which includes the
   following attributes:

   o  name: A string of arbitrarily length used by any interested party
      to identify the specific SHF dump.

   o  blocks: A 64 bit hexadecimal value representing the number of
      blocks in the specific SHF dump.

   After the preceding dump tag one or more subsections of blocks must
   follow. Finally, the complete SHF dump end with a closing dump tag.

4.2 Block subsection

   The block subsection contains a block tag and a data subsection. The
   block tag includes the following attributes:

   o  name: A string of arbitrarily length used by any interested party
      to identify the specific block.

   o  start_address: A 64 bit hexadecimal value representing the start
      address in Bytes for the data in the block.

   o  word_size: A 64 bit hexadecimal value representing the number of



Strombergson, et al.      Expires May 1, 2004                   [Page 5]

Internet-Draft          The Standard Hex Format                 Nov 2003


      Bytes (the width) in the Words of the data.

   o  length: A hexadecimal representation of an unsigned 64-bit integer
      indicating the number of words in the "data" element.

   o  checksum: A hexadecimal representation of the 20 Byte SHA-1 digest
      of the data in the block.

   The total size of the data in the block in Bytes is given by the
   expression (word_size * length). The expression MUST NOT be larger
   than (2^64)-1 bits.

   After the preceding block tag one subsection of data MUST follow.
   Finally, the block section ends with a closing block tag.

4.3 data subsection

   The data subsection of the block section compises of the opening and
   closing data tags and the hexadecimal representation of the actual
   data in the block.































Strombergson, et al.      Expires May 1, 2004                   [Page 6]

Internet-Draft          The Standard Hex Format                 Nov 2003


5. SHF rules and limits

   There are several rules and permissions in SHF:

   o  The data and attribute values representing an actual value MUST be
      in Big Endian-format. It is the responsibility of the
      SHF-generator to ensure that these attributes are Big Endian.
      Similarly, if needed, it is the responsibility of any SHF consumer
      to swap the attribute values to the appropriate Endianness as
      needed by the SHF consumer.

   o  All attribute values representing an actual value and the data
      MUST be in hexadecimal notation. The attributes excluded from this
      rule is the name attribute in the dump and block tags.

   o  All attribute values with the exception for the checksum MAY be
      leading zero truncated. Conversely, the checksum MUST NOT be
      leading zero truncated.

   o  The data represented in a block MUST NOT be larger than (2^64)-1
      bits.

   o  The data width MUST NOT be larger than (2^64)-1 bits. A block with
      a word defined to the maximum width MUST NOT contain more than one
      Word.


























Strombergson, et al.      Expires May 1, 2004                   [Page 7]

Internet-Draft          The Standard Hex Format                 Nov 2003


6. SHF DTD

   The elements named "data" and the attributes "blocks", "address",
   "word_size" and "checksum" should only contain the characters which
   are valid hexbyte sequences. These are:

    whitespace ::= (#x20 | #x9 | #xD | #xA)+
    hexbyte    ::= [0-9A-Fa-f]
    hexbytes   ::= whitespace* hexbyte (hexbyte|whitespace)*

    A parser reading in an SHF file should silently ignore any other
   characters that would by mistake appear in any of these elements or
   attributes. These alien characters should be treated as if they did
   not exist. Also note that "whitespace" has no semantic meaning, it is
   only valid for the reason of improving human readability of the dump.
   Whitepace may be altogether removed and the hexbyte sequences
   concatenated if desired.


   <!--
     DTD for Standard Hex Format, as of 2003-10-10
     Linus Walleij, Joachim Strombergson, Patrik Faltstrom 2003

     Refer to this DTD as:

     <!ENTITY % SHF PUBLIC "-//IETF//DTD SHF//EN"
                "http://www.foo.org/shf.dtd">
          %SHF;
   -->
   <!ENTITY % hexbytes "#PCDATA">
   <!ELEMENT dump (block)+>
   <!ATTLIST dump
   	  name		(#PCDATA)	#REQUIRED
   	  blocks	(&hexbytes;)	#REQUIRED>
   <!ELEMENT block (data)>
   <!ATTLIST block
   	  name		(#PCDATA)	#REQUIRED
   	  address	(&hexbytes;)	#REQUIRED
   	  word_size	(&hexbytes;)	#REQUIRED
   	  length        (&hexbytes;)    #REQUIRED
   	  checksum	(&hexbytes;)	#REQUIRED>
   <!ELEMENT data		(&hexbytes;)>









Strombergson, et al.      Expires May 1, 2004                   [Page 8]

Internet-Draft          The Standard Hex Format                 Nov 2003


7. SHF examples

   This section contains three different SHF examples, illustrating the
   usage of SHF and the attributes in SHF.

   The first example is a simple SHF dump with a single block of data:

   <dump name="Simple SHF example" blocks="01">
   	<block name="Important message in hex format" address="0400"
   	word_size="01" length="1f" checksum="5601b6acad7da5c7b92036786250b053f05852c3">
   	<data>
             41 6c 6c 20 79 6f 75 72 20 62 61 73 65 20 61 72
             65 20 62 65 6c 6f 6e 67 20 74 6f 20 75 73 0a
           </data>
   	</block>
   </dump>

   The second example is a program in 6502 machine code residing at
   memory address 0x1000, which calculates the 13 first fibonacci
   numbers and stores them at 0x1101-0x110d:

   <dump name="6502 Fibonacci" blocks="02">
   	<block name="Code" address="1000" word_size="01" length="2a"
   checksum="5cab5bf8ee299af1ad17e8093d941914eb5930c7">
   	<data>
   	a9 01 85 20 85 21 20 1e 10 20 1e 10 18 a5 21 aa
   	65 20 86 20 85 21 20 1e 10 c9 c8 90 ef 60 ae 00
   	11 a5 21 9d 00 11 ee 00 11 60
           </data>
   	</block>
   	<block name="Mem" address="1100" word_size="01" length="e"
   checksum="c8c2001c42b0226a5d9f7c2f24bd47393166487a">
   	<data>
   	01 00 00 00 00 00 00 00 00 00 00 00 00 00
   	</data>
   	</block>
   </dump>

   The final example contains a block of 40-bit wide data:

   <dump name="Example of a SHF dump with wide data words" blocks="00001">
     <block name="SMIL memory dump" address="000" word_size="5"
            length="1A" checksum="ff2033489aff0e4e4f0cd7901afc985f7a213c97">
       <data>
         00100 00200 00000 00090 00000 00036 00300 00400
         00852 00250 00230 00858 00500 00600 014DC 00058
         002A8 000B8 00700 00800 000B0 00192 00100 00000
         00900 00A00 00000 0000A 40000 00000 00B00 00C00



Strombergson, et al.      Expires May 1, 2004                   [Page 9]

Internet-Draft          The Standard Hex Format                 Nov 2003


         00000 00000 00000 00001 00D00 00E00 00000 00100
         0CCCC CCCCD 00F00 01000 00000 00010 80000 00000
         00100 00790 00000 00234
       </data>
     </block>
   </dump>













































Strombergson, et al.      Expires May 1, 2004                  [Page 10]

Internet-Draft          The Standard Hex Format                 Nov 2003


8. SHF security considerations

   The SHF format is a format for representing hexadecimal data that one
   wants to transfer, manage or transform. The format itself does not
   guarantee that the represented data is falsely represented, malicious
   or otherwise dangerous.

   The data integrity of the SHF file as a whole is to be provided, if
   needed, by external mean (as to the SHF file) such as the generic
   signing mechanism described by RFC 3275 [3].









































Strombergson, et al.      Expires May 1, 2004                  [Page 11]

Internet-Draft          The Standard Hex Format                 Nov 2003


9. MIME Registration Information

   This section contains the registration information for the MIME type
   to SHF.

   o  Registration: application/shf+xml

   o  MIME media type name: application

   o  MIME subtype name: shf+xml

   o  Required parameters: none


9.1 Optional parameters

   none.

   There is no charset parameter. Character handling has identical
   semantics to the case where the charset parameter of the
   "application/xml" media type is omitted, as described in RFC3023 [4].

9.2 Encoding considerations

   This media type may contain binary content; accordingly, when used
   over a transport that does not permit binary transfer, an appropriate
   encoding must be applied

9.3 Security considerations

   A hex dump in itself has no other security considerations than what
   applies for any other XML file. However the included binary data may
   in decoded form contain any executable code for a target platform. If
   additional security is desired, additional transport security
   solutions may be applied. For target code contained in a hex dump,
   developers may want to include certificates, checksums and the like
   in hexdump form for the target platform. Such uses is outside the
   scope of this document and a matter of implementation.

9.4 Interoperability considerations

   n/a

9.5 Published specification

   This media type is a proper subset of the the XML 1.0 specification
   [WWWXML].  Two restrictions are made. First, no entity references
   other than the five predefined general entities references ("&", "<",



Strombergson, et al.      Expires May 1, 2004                  [Page 12]

Internet-Draft          The Standard Hex Format                 Nov 2003


   ">", "'", and """) and numeric entity references may be present.
   Second, neither the "XML" declaration (e.g., ) nor the "DOCTYPE"
   declaration (e.g., ) may be present.  (Accordingly, if another
   character set other than UTF-8 is desired, then the "charset"
   parameter must be present.) All other XML 1.0 instructions (e.g.,
   CDATA blocks, processing instructions, and so on) are allowed.

   Applications which use this media type: any program or individual
   wishing to make use of this XML 1.0 subset for hexdump exchange.

   Additional Information:

   o  Magic number: There is no single initial byte sequence that is
      always present for SHF files

   o  File extension: shf

   o  Macintosh File Type code: none

































Strombergson, et al.      Expires May 1, 2004                  [Page 13]

Internet-Draft          The Standard Hex Format                 Nov 2003


10. Additional information

   Contact for further information: c.f., the "Author's Address" section
   of this memo.

   Intended usage: COMMON.

   Author/Change controller: the authors of this document.

   Acknowledgment: The SMIL memory dump was kindly provided by Sten
   Henriksson at Lund University.








































Strombergson, et al.      Expires May 1, 2004                  [Page 14]

Internet-Draft          The Standard Hex Format                 Nov 2003


References

   [1]  Bradner, S., "Key words for use in RFCs to Indicate Requirement
        Levels", BCP 14, RFC 2119, March 1997.

   [2]  Eastlake, 3rd, D. and P. Jones, "US Secure Hash Algorithm 1
        (SHA1)", BCP 14, RFC 3174, September 2001.

   [3]  Eastlake, 3rd, D., Joseph, J. and D. David, "(Extensible Markup
        Language) XML-Signature Syntax and Processing", BCP 14, RFC
        3275, March 2002.

   [4]  Makoto, M., Simon, S. and D. Dan, "(Extensible Markup Language)
        XML Media Types", BCP 14, RFC 3023, January 2001.


Authors' Addresses

   Joachim Strombergson
   InformAsic AB
   Hugo Grauers gata 5a
   Gothenburg  411 33
   SE

   Phone: +46 31 68 54 90
   EMail: Joachim.Strombergson@InformAsic.com
   URI:   http://www.InformAsic.com/


   Linus Walleij
   Ledasa Rangers
   Master Olofs Vag 24
   Lund  224 66
   SE

   Phone: +46 703 193678
   EMail: triad@df.lth.se


   Patrik Faltstrom
   Cisco Systems Inc
   Ledasa
   273 71 Lovestad
   Sweden

   EMail: paf@cisco.com
   URI:   http://www.cisco.com




Strombergson, et al.      Expires May 1, 2004                  [Page 15]

Internet-Draft          The Standard Hex Format                 Nov 2003


Intellectual Property Statement

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights. Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11. Copies of
   claims of rights made available for publication and any assurances of
   licenses to be made available, or the result of an attempt made to
   obtain a general license or permission for the use of such
   proprietary rights by implementors or users of this specification can
   be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights which may cover technology that may be required to practice
   this standard. Please address the information to the IETF Executive
   Director.


Full Copyright Statement

   Copyright (C) The Internet Society (2003). All Rights Reserved.

   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works. However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assignees.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION



Strombergson, et al.      Expires May 1, 2004                  [Page 16]

Internet-Draft          The Standard Hex Format                 Nov 2003


   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Acknowledgement

   Funding for the RFC Editor function is currently provided by the
   Internet Society.











































Strombergson, et al.      Expires May 1, 2004                  [Page 17]

