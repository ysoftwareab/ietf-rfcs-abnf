childinfo-extended-item = "CHILDINFO" SP "(" list-sel-base-opt-quoted
                              *( SP list-sel-base-opt-quoted ) ")"
                        ; Extended data item returned when the RECURSIVEMATCH
                        ; selection option is specified.
                        ; Note 1: the CHILDINFO tag can be returned
                        ;  with and without surrounding quotes, as per
                        ;  mbox-list-extended-item-tag production.
                        ; Note 2: The selection options are returned quoted,
                        ;  unlike their specification in the extended LIST
                        ;  command.

child-mbox-flag    = "\HasChildren" / "\HasNoChildren"
                        ; attributes for CHILDREN return option, at most one
                        ; possible per LIST response

eitem-standard-tag = atom
                        ; a tag for extended list data defined in a Standard
                        ; Track or Experimental RFC.

eitem-vendor-tag   = vendor-tag
                        ; a vendor specific tag for extended list data

list               = "LIST" [SP list-select-opts] SP mailbox SP mbox-or-pat
                        [SP list-return-opts]

list-select-opts   = "(" [*(list-select-mod-opt SP) list-select-base-opt
                            *(SP list-select-opt)] ")"
                        ; list selection options, e.g. REMOTE

list-select-opt    = list-sel-mod-opt / list-sel-base-opt
                        ; An option registration template is described in
                        ; section 8.3 of this document.

list-sel-base-opt  = "SUBSCRIBED" / "REMOTE" / option-extension
list-sel-base-opt-quoted = <"> list-sel-base-opt <">

list-sel-mod-opt   = "RECURSIVEMATCH" / option-extension
list-return-opts   = "RETURN" SP "(" [return-option *(SP return-option)] ")"
                        ; list return options, e.g. CHILDREN

mailbox-list       = "(" [mbx-list-flags] ")" SP
                        (DQUOTE QUOTED-CHAR DQUOTE / nil) SP mailbox
                        [SP mbox-list-extended]

mbox-list-extended = "(" [mbox-list-extended-item
                        *(SP mbox-list-extended-item)] ")"

mbox-list-extended-item = "(" mbox-list-extended-item-data ")"

mbox-list-extended-item-data =  mbox-list-extended-item-tag SP nstring-list

mbox-list-extended-item-tag  = astring
                        ; The content MUST conform to either "eitem-vendor-tag" or
                        ; "eitem-standard-tag" ABNF productions.
                        ; A tag registration template is described in section
                        ; 8.5 of this document.

mbox-list-oflag    = child-mbox-flag / "\NonExistent" / 
                        / "\Subscribed" / "\Remote"

mbox-or-pat        = list-mailbox / patterns

nstring-list       = nstring /
                        "(" [nstring-list *(SP nstring-list)] ")"
                        ;; a recursive list definition

option-extension   = option-vendor-tag / option-standard-tag

option-vendor-tag  = vendor-tag
                        ; a vendor specific option

option-standard-tag= atom
                        ; an option defined in a Standard Track or
                        ; Experimental RFC

patterns           = "(" list-mailbox *(SP list-mailbox) ")"

return-option      = "SUBSCRIBED" / "CHILDREN" / 
                        option-extension

vendor-tag         = vendor-token "-" atom


