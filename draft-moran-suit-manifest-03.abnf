COSE_Digest_Tagged = #6.19(COSE_Digest)
COSE_Digest = COSE_Mac0

Digest_structure = [
       context : "Digest",
       protected : empty_or_serialized_map,
       external_aad : bstr,
       payload : bstr
OuterWrapper = {
       authenticationWrapper: AuthenticationWrapper,
       manifest:              bstr .cbor Manifest,
       ? preInstallExt:       bstr .cbor PreInstallationInfo,
       ? installExt:          bstr .cbor InstallationInfo,
       ? postInstallExt:      bstr .cbor PostInstallationInfo,
       ? textInfoExt:         bstr .cbor Text,
       ? coswidExt:           bstr .cbor concise-software-identity
authenticationWrapper = 1
manifest = 2
preInstallExt = 3
installExt = 4
postInstallExt = 5
textExt = 6
coswidExt = 7

AuthenticationWrapper = COSE_Mac_Tagged / COSE_Sign_Tagged /
                           COSE_Mac0_Tagged / COSE_Sign1_Tagged

Manifest = {
       manifestVersion : 1,
       sequence        : SequenceNumber,
       ? preInstall    : PreInstallationInfo / COSE_Digest,
       ? dependencies  : [* DependencyInfo],
       ? payloads      : [* PayloadInfo],
       ? install       : InstallationInfo / COSE_Digest,
       ? postInstall   : PostInstallationInfo / COSE_Digest,
       ? text          : TextInfo / COSE_Digest,
       ? coswid        : concise-software-identity / COSE_Digest
manifestVersion = 1
sequence        = 2
preInstall      = 3
dependencies    = 4
payloads        = 5
install         = 6
postInstall     = 7
text            = 8
coswid          = 9

SequenceNumber = uint

DependencyInfo = {
       depDigest  : COSE_Digest,         ; digest of the resource
       depScope   : ComponentIdentifier, ; where the dependency's
                                         ; payloads will be applied
       ? depUris  : UriList              ; where to find the resource
depDigest = 1
depScope  = 2
depUris   = 3

UriList = [ + [priority: int, uri: tstr] ]
ComponentIdentifier = [* bstr]

PayloadInfo = {
      payloadComponent:       ComponentIdentifier,
      payloadSize:            uint / nil,
      payloadDigest:          COSE_Digest,
      ? regenInfo : {
          regenDigest:        COSE_Digest
          regenType:          int
          ? regenParameters:  bstr
      },
payloadComponent = 1
payloadSize      = 2
payloadDigest    = 3
regenInfo        = 4
regenDigest      = 5
regenType        = 6
regenParameters  = 7

RegenType = LocationLengthRegenType /
              FileListRegenType /
              KeyListRegenType /
              CustomRegenType

LocationLengthRegenType = 1
FileListRegenType       = 2
KeyListRegenType        = 3
CustomRegenType         = nint

RegenParameters = LocationLengthRegenParameters /
                    FileListRegenParameters /
                    KeyListRegenParameters /
                    CustomRegenParameters
LocationLengthRegenParameters = [ * [ location: uint, length: uint ] ]
FileListRegenParameters       = [ * file: tstr ]
KeyListRegenParameters        = [ * key: tstr ]
CustomRegenParameters         = bstr

   The payloadComponent element contains a ComponentIdentifier.  This
   specifies the module/component/location in which the payload should
   be installed.  The meaning of ComponentIdentifier is application-
   specific.  In general, the last bstr in the ComponentIdentifier
   defines where to store a payload within a given storage subsystem in
   a Heterogeneous Storage Architecture device, the remainder of the
   elements in the ComponentIdentifier define which storage subsystem to
   use to store the payload. payloadComponent is MANDATORY.  When used
   on a single-image device payloadComponent MAY contain 0 elements.  On
   multi-image devices, payloadComponent MUST contain at least one
   element.
   payloadSize contains a positive integer that describes the size of
   the ready-to-install payload.  Where the payload requires a
   specialised installer, this is the payload prior to installation.
   This element is MANDATORY.

   payloadDigest contains a digest of the payload, prior to
   installation.  For payloads that do not require a specialised
   installer, this is the also the post-installation digest.  This
   element is MANDATORY.

   regenInfo describes the mechanism for recreating a message digest of
   payload that requires a specialised installer.  This element is
   OPTIONAL.  This element is OPTIONAL TO IMPLEMENT.

   regenDigest is a Digest that contains the message digest that an
   application should regenerate to verify the installed payload.  This
   element is MANDATORY when regenInfo is present.

   regenType is an int that identifies a particular mechanism for
   creating the regenDigest.  This element is MANDATORY when regenInfo
   is present.

   regenParameters is a bstr that provides any additional arguments
   needed by the specialised installer.  This element is OPTIONAL.

   When message digest regeneration is in place, regenType implies a
   regenParameters structure, as described in the following table:

   +-----------+-----------------------+-------------------------------+
   | regenType | RegenParameters       | Description                   |
   +-----------+-----------------------+-------------------------------+
   | 0         | -                     | Reserved                      |
   |           |                       |                               |
   | 1         | [ * [ location: uint, | Lists a series of regions to  |
   |           | length: uint] ]       | include in the digest         |
   |           |                       |                               |
   | 2         | [ * file: tstr ]      | Lists a series of files to    |
   |           |                       | digest                        |
   |           |                       |                               |
   | 3         | [ * key: tstr ]       | Lists a series of keys, whose |
   |           |                       | values should be digested     |
   +-----------+-----------------------+-------------------------------+

   Positive RegenType numbers are reserved for IANA registration.
   Negative numbers are reserved for proprietary, application-specific
   directives.
PreInstallationInfo = {
       ? preConditions : [ * PreCondition ],
       ? preDirectives : [ * PreDirective ]
preConditions = 1
preDirectives = 2

PreCondition    = IdCondition /
                     TimeCondition /
                     ImageCondition /
                     BatteryLevelCondition /
                     CustomCondition
IdCondition     = [ vendor : 1, id: Uuid ] /
                     [ class  : 2, id: Uuid ] /
                     [ device : 3, id: Uuid ]
Uuid = bstr .size 16

TimeCondition   = [useBy: 4,
                      time:       Timestamp]
ImageCondition  = [ currentContent :    6 ,
                       digest: COSE_Digest / nil,
                       location: ComponentIdentifier ] /
                     [ notCurrentContent : 7 ,
                       digest: COSE_Digest / nil,
                       location: ComponentIdentifier ]
BatteryLevelCondition = [ batteryLevel: 8,
                             level: uint ]
CustomCondition = [nint,
                      parameters: bstr]

Timestamp       = uint

PreDirective = WaitUntilDirective /
                  DayOfWeekDirective /
                  TimeOfDayDirective /
                  BatteryLevelDirective /
                  ExternalPowerDirective /
                  CustomDirective

WaitUntilDirective     = [ 1,
                              timestamp: uint ]
DayOfWeekDirective     = [ 2, day: 0..6 ]
TimeOfDayDirective     = [ 3, hours: 0..23,
                                 ? minutes: 0..59,
                                 ? seconds: 0..59 ]
BatteryLevelDirective  = [ 4, level: uint]
ExternalPowerDirective = [ 5 ]
NetworkDisconnectDirective = [ 6 ]
CustomDirective        = [ nint,
                              ? parameters: bstr ]

InstallationInfo = {
       payloadInstallationInfo : [ * PayloadInstallationInfo ],
payloadInstallationInfo = 1

PayloadInstallationInfo = {
       installComponent :          ComponentIdentifier
       payloadProcessors :         [ * Processor ],
       ? allowOverride :    bool,
       ? payloadInstaller:  {
           payloadInstallerID:           [ * int ],
           ? payloadInstallerParameters: bstr,
       }
installComponent = 1
payloadProcessors = 2
allowOverride = 3
payloadInstaller = 4
payloadInstallerID = 5
payloadInstallerParameters = 6

Processor       = {
       processorId:       ProcessorID
       parameters:        Digest / COSE_Encrypt / COSE_Encrypt0 /
                          int / tstr / bstr / nil,
       inputs:            UriList / ComponentIdentifier /
                          ProcessorDependencies
ProcessorID = [ * int ]
ProcessorDependencies = {int => int}

PostInstallationInfo = {
       ? postConditions : [ * PostCondition ],
       ? postDirectives : [ * PostDirective ]
postConditions = 1
postDirectives = 2

PostCondition   = ImageCondition / CustomCondition
PostDirective   = CustomDirective

OuterWrapper = {
      authenticationWrapper: AuthenticationWrapper,
      manifest:              bstr .cbor Manifest,
      ? preInstallExt:       bstr .cbor PreInstallationInfo,
      ? installExt:          bstr .cbor InstallationInfo,
      ? postInstallExt:      bstr .cbor PostInstallationInfo,
      ? textInfoExt:         bstr .cbor Text,
      ? coswidExt:           bstr .cbor concise-software-identity
authenticationWrapper = 1
manifest = 2
preInstallExt = 3
installExt = 4
postInstallExt = 5
textExt = 6
coswidExt = 7

AuthenticationWrapper = COSE_Mac_Tagged / COSE_Sign_Tagged /
                          COSE_Mac0_Tagged / COSE_Sign1_Tagged

concise-software-identity = any
AuthenticationWrapper = COSE_Mac_Tagged / COSE_Sign_Tagged /
                          COSE_Mac0_Tagged / COSE_Sign1_Tagged

COSE_Mac_Tagged = any
COSE_Sign_Tagged = any
COSE_Mac0_Tagged = any
COSE_Sign1_Tagged = any
COSE_Encrypt = any
COSE_Encrypt0 = any

COSE_Mac0 = [
        Headers,
        payload : bstr / nil,
        tag : bstr,
     ]

Headers = (
      protected : empty_or_serialized_map,
      unprotected : header_map
header_map = {
      Generic_Headers,
      * label => values
empty_or_serialized_map = bstr .cbor header_map / bstr .size 0

Generic_Headers = (
     ? 1 => int / tstr,  ; algorithm identifier
     ? 2 => [+label],    ; criticality
     ? 3 => tstr / int,  ; content type
     ? 4 => bstr,        ; key identifier
     ? 5 => bstr,        ; IV
     ? 6 => bstr,        ; Partial IV
     ? 7 => COSE_Signature / [+COSE_Signature] ; Counter signature
COSE_Digest = COSE_Mac0

Manifest = {
      manifestVersion : 1,
      sequence        : SequenceNumber,
      ? preInstall    : PreInstallationInfo / COSE_Digest,
      ? dependencies  : [* DependencyInfo],
      ? payloads      : [* PayloadInfo],
      ? install       : InstallationInfo / COSE_Digest,
      ? postInstall   : PostInstallationInfo / COSE_Digest,
      ? text          : TextInfo / COSE_Digest,
      ? coswid        : concise-software-identity / COSE_Digest
manifestVersion = 1
sequence        = 2
preInstall      = 3
dependencies    = 4
payloads        = 5
install         = 6
postInstall     = 7
text            = 8
coswid          = 9

SequenceNumber = uint

DependencyInfo = {
      depDigest  : COSE_Digest,         ; digest of the resource
      depScope   : ComponentIdentifier, ; where the dependency's
                                        ; payloads will be applied
      ? depUris  : UriList              ; where to find the resource
                                       ; applied
depDigest = 1
depScope  = 2
depUris   = 3

UriList = [ + [priority: int, uri: tstr] ]
ComponentIdentifier = [* bstr]
PayloadInfo = {
      payloadComponent:       ComponentIdentifier,
      payloadSize:            uint / nil,
      payloadDigest:          COSE_Digest,
      ? regenInfo : {
          regenDigest:        COSE_Digest
          regenType:          int
          ? regenParameters:  bstr
      },
payloadComponent = 1
payloadSize      = 2
payloadDigest    = 3
regenInfo        = 4
regenDigest      = 5
regenType        = 6
regenParameters  = 7

RegenType = LocationLengthRegenType /
              FileListRegenType /
              KeyListRegenType /
              CustomRegenType

LocationLengthRegenType = 1
FileListRegenType       = 2
KeyListRegenType        = 3
CustomRegenType         = nint

RegenParameters = LocationLengthRegenParameters /
                    FileListRegenParameters /
                    KeyListRegenParameters /
                    CustomRegenParameters
LocationLengthRegenParameters = [ * [ location: uint, length: uint ] ]
FileListRegenParameters       = [ * file: tstr ]
KeyListRegenParameters        = [ * key: tstr ]
CustomRegenParameters         = bstr

PreInstallationInfo = {
      ? preConditions : [ * PreCondition ],
      ? preDirectives : [ * PreDirective ]
preConditions = 1
preDirectives = 2

PreCondition    = IdCondition /
                    TimeCondition /
                    ImageCondition /
                    BatteryLevelCondition /
                    CustomCondition

IdCondition     = [ vendor : 1, id: Uuid ] /
                    [ class  : 2, id: Uuid ] /
                    [ device : 3, id: Uuid ]
Uuid = bstr .size 16

TimeCondition   = [useBy: 4,
                     time:       Timestamp]
ImageCondition  = [ currentContent : 6 ,
                     digest: COSE_Digest / nil,
                     location: ComponentIdentifier ] /
                    [ notCurrentContent : 7 ,
                     digest: COSE_Digest / nil,
                     location: ComponentIdentifier ]
BatteryLevelCondition = [ batteryLevel: 8,
                            level: uint ]
CustomCondition = [nint,
                     parameters: bstr]

Timestamp       = uint

PreDirective = WaitUntilDirective /
                 DayOfWeekDirective /
                 TimeOfDayDirective /
                 BatteryLevelDirective /
                 ExternalPowerDirective /
                 CustomDirective

WaitUntilDirective     = [ 1,
                             timestamp: uint ]
DayOfWeekDirective     = [ 2, day: 0..6 ]
TimeOfDayDirective     = [ 3, hours: 0..23,
                                ? minutes: 0..59,
                                ? seconds: 0..59 ]
BatteryLevelDirective  = [ 4, level: uint]
ExternalPowerDirective = [ 5 ]
NetworkDisconnectDirective = [ 6 ]
CustomDirective        = [ nint,
                             ? parameters: bstr ]

InstallationInfo = {
     payloadInstallationInfo : [ * PayloadInstallationInfo ],
payloadInstallationInfo = 1

PayloadInstallationInfo = {
     installComponent :          ComponentIdentifier
     payloadProcessors :         [ * Processor ],
     ? allowOverride :    bool,
     ? payloadInstaller:  {
         payloadInstallerID:           [ * int ],
         ? payloadInstallerParameters: bstr,
     }
installComponent = 1
payloadProcessors = 2
allowOverride = 3
payloadInstaller = 4
payloadInstallerID = 5
payloadInstallerParameters = 6

Processor       = {
      processorId:       ProcessorID
      parameters:        COSE_Digest / COSE_Encrypt / COSE_Encrypt0 /
                         int / tstr / bstr / nil,
      inputs:            UriList / ComponentIdentifier / {int => int}
ProcessorID = [ * int ]

PostInstallationInfo = {
      ? postConditions : [ * PostCondition ],
      ? postDirectives : [ * PostDirective ]
postConditions = 1
postDirectives = 2

PostCondition   = ImageCondition / CustomCondition
PostDirective   = CustomDirective

Text = {
      * int => tstr
OuterWrapper = {
       / authenticationWrapper / 1 : F6 / null /,
       / manifest / 2: h'a3010102020581a301814130021825038444a
                         1011829a0f658208caf9283b13666ca4e50f7
                         a1eee86ba40b5e6a1d2ca39f7498b6a6a7be8d8d67' /
       {
           \ manifestVersion \  1 : 1,
           \ sequence \ 2: 1,
           \ payloads \ 5: [
               {
                   \ payloadComponent \ 1: [h'30'],
                   \ payloadSize \ 2: 37,
                   \ payloadDigest \ 3: [
                       \ protected \ "a1011829" \ {
                           \ alg \ 1 : 41 \ sha-256 \
                       } \ ,
                       \ unprotected \ {},
                       \ payload \ F6 \ null,
                       \ tag \ h'8caf9283b13666ca4e50f7a1eee86ba40
                                 b5e6a1d2ca39f7498b6a6a7be8d8d67'
                   ]
               }
           ]
       } /
OuterWrapper = {
      / authenticationWrapper / 1: #98([
          / protected / h'A103182A' / {
              \ content type \ 3 : 42 \ application octet-stream \
              } / ,
          / unprotected / {},
          / payload / null,
          / signatures / [
              [
                  / protected / h'A10126' / {
                      \ alg \ 1 : -7 \ ECDSA 256 \
                  },
                  / unprotected / {
                      / kid / 4 : h'537ac93ac909e79990914caa00fe87ee
                                    ea637ef89b5512e5cb6e558a136ff98d'
                  } / ,
                  / signature / h'304502201d65938ec454354a6e866b468e9
                                  808db4ef36e97de09f98fda92e9c0e3302f
                                  c8022100aff871fe581d3f6b831d74e46f9
                                  acd7a015e5548770b2a437970be9272a7fbaa'
              ]
          ]
      ])
      / manifest / 2: h'a3010102020581a301814130021825038444a1011829a
                        0f658208caf9283b13666ca4e50f7a1eee86ba40b5e6a
                        1d2ca39f7498b6a6a7be8d8d67' /
      {
          \ manifestVersion \  1 : 1,
          \ sequence \ 2: 1,
          \ payloads \ 5: [
              {
                  \ payloadComponent \ 1: [h'30'],
                  \ payloadSize \ 2: 37,
                  \ payloadDigest \ 3: [
                      \ protected \ "a1011829" \ {
                          \ alg \ 1 : 41 \ sha-256 \
                      } \ ,
                      \ unprotected \ {},
                      \ payload \ F6 \ null,
                      \ tag \ h'8caf9283b13666ca4e50f7a1eee86ba4
                                0b5e6a1d2ca39f7498b6a6a7be8d8d67'
                  ]
              }
          ]
      } /
OuterWrapper = {
     / authenticationWrapper / 1: #98([
         / protected / h'A103182A' / {
             \ content type \ 3 : 42 \ application octet-stream \
             } / ,
         / unprotected / {},
         / payload / null,
         / signatures / [
             [
                 / protected / h'A10126' / {
                     \ alg \ 1 : -7 \ ECDSA 256 \
                 },
                 / unprotected / {
                     / kid / 4 : h'537ac93ac909e79990914caa00
                                   fe87eeea637ef89b5512e5cb6e
                                   558a136ff98d'
                 } / ,
                 / signature /"3045022100830cf142cc4adf563392dc7e043
                               0000158bf3720b28b7cea388b0f1a5f8918a8
                               02201def2df34d6abd3b17c3425573ff2b7ca
                               cae3dd085e11dfc23bf0c60be51b7da"
             ]
         ]
     ])
     / manifest / 2: h'a60101020203a10182820150fa6b4a53d5ad5fdfbe9de
                       663e4d41ffe8202506e04d3c2488759e4a597b5e7cd49
                       76530581a301814130021825038444a1011829a0f6582
                       08caf9283b13666ca4e50f7a1eee86ba40b5e6a1d2ca3
                       9f7498b6a6a7be8d8d6706a10181a2018141300281a20
                       182010103820076687474703a2f2f666f6f2e6261722f
                       62617a2e62696e088444a1011829a0f658204e2714598
                       479d8b6634805df5019ef3420edff0329894acc91de8c
                       8de16fb0cf' /
     {
         \ manifestVersion \  1 : 1,
         \ sequence \ 2 : 2,
         \ preInstall \ 3 : {
             \ preConditions 1 : [
                 [ \ vendorId \ 1, h'fa6b4a53d5ad5fdfbe9de663e4d41ffe'],
                 [ \ classId \ 2, h'6e04d3c2488759e4a597b5e7cd497653']
             ]
         },
         \ payloads \ 5: [
             {
                 \ payloadComponent \ 1: [h'30'],
                 \ payloadSize \ 2: 37,
                 \ payloadDigest \ 3: [
                     \ protected \ "a1011829" \ {
                         \ alg \ 1 : 41 \ sha-256 \
                     } \ ,
                     \ unprotected \ {},
                     \ payload \ F6 \ null,
                     \ tag \ h'8caf9283b13666ca4e50f7a1eee86ba4
                               0b5e6a1d2ca39f7498b6a6a7be8d8d67'
                 ]
             }
         ],
         \ install \ 6 : {
             \ payloadInstallationInfo \ 1 : [
                 {
                     \ installComponent \ 1 : [h'30'],
                     \ payloadProcessors \ 2 : [
                         {
                             \ processorId \ 1 :
                                  [1,1] \ remote resource \ ,
                             \ inputs \ 3 : [
                                 0, "http://foo.bar/baz.bin"
                             ]
                         }
                     ]
                 }
             ]
         },
         \ textInfo \ 8 : [
             \ protected \ "a1011829" \ {
                 \ alg \ 1 : 41 \ sha-256 \
             } \ ,
             \ unprotected \ {},
             \ payload \ F6 \ null,
             \ tag \ "4e2714598479d8b6634805df5019ef342
                      0edff0329894acc91de8c8de16fb0cf"
         ]
     }
     / textInfoExt / 6 : h'a10178c84c6f72656d20697073756d20646f6c6f7
                           22073697420616d65742c20636f6e736563746574
                           75722061646970 697363696e6720656c69742e20
                           4e756e63207365642074696e636964756e7420616
                           e74652c206120736f64616c6573206c6967756c61
                           2e205068617365 6c6c757320756c6c616d636f72
                           706572206f64696f20636f6d6d6f646f206970737
                           56d20656765737461732c207669746165206c6163
                           696e6961206c656f206f726e6172652e205375737
                           0656e646973736520706f7375657265207365642e' /
     {
         \ updateDescription \ 1 : "Lorem ipsum dolor sit amet,
                                    consectetur adipiscing elit.
                                    Nunc sed tincidunt ante, a
                                    sodales ligula. Phasellus
                                    ullamcorper odio commodo ipsum
                                    egestas, vitae lacinia leo ornare.
                                    Suspendisse posuere sed."
     } /
