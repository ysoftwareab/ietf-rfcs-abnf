generic-message = attr-val *("," attr-val)
                        ;; Generic syntax of any server challenge
                        ;; or client response

attr-val        = ALPHA "=" value

value           = 1*(value-char)










value-safe-char = %01-2B / %2D-3C / %3E-7F /
                        UTF8-2 / UTF-3 / UTF8-4
                        ;; UTF8-char except NUL, "=", and ",".

value-char      = value-safe-char / "="

base64-char     = ALPHA / DIGIT / "/" / "+"

base64-4        = 4*4(base64-char)

base64-3        = 3*3(base64-char) "="

base64-2        = 2*2(base64-char) "=="

base64          = *(base64-4) [base64-3 / base64-2]

posit-number = (%x31-39) *DIGIT
                        ;; A positive number

saslname        = 1*(value-safe-char / "=2C" / "=3D")
                        ;; Conforms to <value>

authzid         = "a=" saslname
                        ;; Protocol specific.

username        = "n=" saslname
                        ;; Usernames are prepared using SASLPrep.

reserved-mext  = "m=" 1*(value-char)
                        ;; Reserved for signalling mandatory extensions.
                        ;; The exact syntax will be defined in
                        ;; the future.

channel-binding = "c=" base64

proof           = "p=" base64

nonce           = "r=" c-nonce [s-nonce]
                        ;; Second part provided by server.

c-nonce         = value

s-nonce         = value

salt            = "s=" base64

verifier        = "v=" base64
                        ;; base-64 encoded ServerSignature.










iteration-count = "i=" posit-number
                        ;; A positive number

client-first-message =
                        [reserved-mext ","] username "," nonce [","
                        extensions]

server-first-message =
                        [reserved-mext ","] nonce "," salt ","
                        iteration-count ["," extensions]

client-final-message-without-proof =
                        [authzid ","] [channel-binding ","] nonce [","
                        extensions]

client-final-message =
                        client-final-message-without-proof "," proof

server-final-message =
                        verifier ["," extensions]

extensions = attr-val *("," attr-val)
                        ;; All extensions are optional,
                        ;; i.e. unrecognized attributes
                        ;; not defined in this document
                        ;; MUST be ignored.


