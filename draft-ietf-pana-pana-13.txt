


PANA Working Group                                           D. Forsberg
Internet-Draft                                                     Nokia
Intended status: Standards Track                           Y. Ohba (Ed.)
Expires: June 9, 2007                                            Toshiba
                                                                B. Patil
                                                                   Nokia
                                                           H. Tschofenig
                                                                 Siemens
                                                                A. Yegin
                                                                 Samsung
                                                        December 6, 2006


     Protocol for Carrying Authentication for Network Access (PANA)
                        draft-ietf-pana-pana-13

Status of this Memo

   By submitting this Internet-Draft, each author represents that any
   applicable patent or other IPR claims of which he or she is aware
   have been or will be disclosed, and any of which he or she becomes
   aware will be disclosed, in accordance with Section 6 of BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on June 9, 2007.

Copyright Notice

   Copyright (C) The Internet Society (2006).







Forsberg, et al.          Expires June 9, 2007                  [Page 1]

Internet-Draft                    PANA                     December 2006


Abstract

   This document defines the Protocol for Carrying Authentication for
   Network Access (PANA), a network-layer transport for Extensible
   Authentication Protocol (EAP) to enable network access authentication
   between clients and access networks.  PANA protocol specification
   covers the client-to-network access authentication part of an overall
   secure network access framework, which additionally includes other
   protocols and mechanisms for service provisioning, access control as
   a result of initial authentication, and accounting.


Table of Contents

   1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  5
     1.1.  Specification of Requirements  . . . . . . . . . . . . . .  5
   2.  Terminology  . . . . . . . . . . . . . . . . . . . . . . . . .  6
   3.  Protocol Overview  . . . . . . . . . . . . . . . . . . . . . .  8
   4.  Protocol Details . . . . . . . . . . . . . . . . . . . . . . . 10
     4.1.  Transport Layer  . . . . . . . . . . . . . . . . . . . . . 10
     4.2.  High-Level Attribute-Value Pair Description  . . . . . . . 10
     4.3.  Handshake Phase  . . . . . . . . . . . . . . . . . . . . . 10
     4.4.  Authentication and Authorization Phase . . . . . . . . . . 12
     4.5.  Access Phase . . . . . . . . . . . . . . . . . . . . . . . 14
     4.6.  Re-authentication Phase  . . . . . . . . . . . . . . . . . 14
     4.7.  Termination Phase  . . . . . . . . . . . . . . . . . . . . 16
   5.  Processing Rules . . . . . . . . . . . . . . . . . . . . . . . 17
     5.1.  Fragmentation  . . . . . . . . . . . . . . . . . . . . . . 17
     5.2.  Sequence Number and Retransmission . . . . . . . . . . . . 17
     5.3.  PANA Security Association  . . . . . . . . . . . . . . . . 18
     5.4.  Message Authentication . . . . . . . . . . . . . . . . . . 19
     5.5.  Message Validity Check . . . . . . . . . . . . . . . . . . 20
     5.6.  PaC Updating its IP Address  . . . . . . . . . . . . . . . 21
     5.7.  Session Lifetime . . . . . . . . . . . . . . . . . . . . . 21
     5.8.  Error Handling . . . . . . . . . . . . . . . . . . . . . . 22
   6.  Header Format  . . . . . . . . . . . . . . . . . . . . . . . . 24
     6.1.  IP and UDP Headers . . . . . . . . . . . . . . . . . . . . 24
     6.2.  PANA Message Header  . . . . . . . . . . . . . . . . . . . 24
     6.3.  AVP Header . . . . . . . . . . . . . . . . . . . . . . . . 26
   7.  PANA Messages  . . . . . . . . . . . . . . . . . . . . . . . . 29
     7.1.  PANA-Client-Initiation (PCI) . . . . . . . . . . . . . . . 31
     7.2.  PANA-Start-Request (PSR) . . . . . . . . . . . . . . . . . 31
     7.3.  PANA-Start-Answer (PSA)  . . . . . . . . . . . . . . . . . 31
     7.4.  PANA-Auth-Request (PAR)  . . . . . . . . . . . . . . . . . 32
     7.5.  PANA-Auth-Answer (PAN) . . . . . . . . . . . . . . . . . . 32
     7.6.  PANA-Reauth-Request (PRR)  . . . . . . . . . . . . . . . . 32
     7.7.  PANA-Reauth-Answer (PRA) . . . . . . . . . . . . . . . . . 32
     7.8.  PANA-Bind-Request (PBR)  . . . . . . . . . . . . . . . . . 32



Forsberg, et al.          Expires June 9, 2007                  [Page 2]

Internet-Draft                    PANA                     December 2006


     7.9.  PANA-Bind-Answer (PBA) . . . . . . . . . . . . . . . . . . 33
     7.10. PANA-Ping-Request (PPR)  . . . . . . . . . . . . . . . . . 33
     7.11. PANA-Ping-Answer (PPA) . . . . . . . . . . . . . . . . . . 33
     7.12. PANA-Termination-Request (PTR) . . . . . . . . . . . . . . 33
     7.13. PANA-Termination-Answer (PTA)  . . . . . . . . . . . . . . 34
     7.14. PANA-Error-Request (PER) . . . . . . . . . . . . . . . . . 34
     7.15. PANA-Error-Answer (PEA)  . . . . . . . . . . . . . . . . . 34
     7.16. PANA-Update-Request (PUR)  . . . . . . . . . . . . . . . . 34
     7.17. PANA-Update-Answer (PUA) . . . . . . . . . . . . . . . . . 34
   8.  AVPs in PANA . . . . . . . . . . . . . . . . . . . . . . . . . 36
     8.1.  Algorithm AVP  . . . . . . . . . . . . . . . . . . . . . . 37
     8.2.  AUTH AVP . . . . . . . . . . . . . . . . . . . . . . . . . 37
     8.3.  EAP-Payload AVP  . . . . . . . . . . . . . . . . . . . . . 37
     8.4.  Failed-AVP AVP . . . . . . . . . . . . . . . . . . . . . . 38
     8.5.  Failed-Message-Header AVP  . . . . . . . . . . . . . . . . 38
     8.6.  Key-Id AVP . . . . . . . . . . . . . . . . . . . . . . . . 38
     8.7.  Nonce AVP  . . . . . . . . . . . . . . . . . . . . . . . . 38
     8.8.  Result-Code AVP  . . . . . . . . . . . . . . . . . . . . . 39
       8.8.1.  Authentication Results Codes . . . . . . . . . . . . . 39
       8.8.2.  Protocol Error Result Codes  . . . . . . . . . . . . . 39
     8.9.  Session-Lifetime AVP . . . . . . . . . . . . . . . . . . . 42
     8.10. Termination-Cause AVP  . . . . . . . . . . . . . . . . . . 42
   9.  Retransmission Timers  . . . . . . . . . . . . . . . . . . . . 43
     9.1.  Transmission and Retransmission Parameters . . . . . . . . 44
   10. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 46
     10.1. PANA UDP Port Number . . . . . . . . . . . . . . . . . . . 46
     10.2. PANA Message Header  . . . . . . . . . . . . . . . . . . . 46
       10.2.1. Version  . . . . . . . . . . . . . . . . . . . . . . . 46
       10.2.2. Message Type . . . . . . . . . . . . . . . . . . . . . 46
       10.2.3. Flags  . . . . . . . . . . . . . . . . . . . . . . . . 47
     10.3. AVP Header . . . . . . . . . . . . . . . . . . . . . . . . 47
       10.3.1. AVP Code . . . . . . . . . . . . . . . . . . . . . . . 47
       10.3.2. Flags  . . . . . . . . . . . . . . . . . . . . . . . . 48
     10.4. AVP Values . . . . . . . . . . . . . . . . . . . . . . . . 48
       10.4.1. Result-Code AVP Values . . . . . . . . . . . . . . . . 48
       10.4.2. Termination-Cause AVP Values . . . . . . . . . . . . . 48
   11. Security Considerations  . . . . . . . . . . . . . . . . . . . 49
     11.1. General Security Measures  . . . . . . . . . . . . . . . . 49
     11.2. Handshake  . . . . . . . . . . . . . . . . . . . . . . . . 50
     11.3. EAP Methods  . . . . . . . . . . . . . . . . . . . . . . . 51
     11.4. Cryptographic Keys . . . . . . . . . . . . . . . . . . . . 51
     11.5. Per-packet Ciphering . . . . . . . . . . . . . . . . . . . 51
     11.6. PAA-to-EP Communication  . . . . . . . . . . . . . . . . . 52
     11.7. Liveness Test  . . . . . . . . . . . . . . . . . . . . . . 52
     11.8. IP Address Spoofing  . . . . . . . . . . . . . . . . . . . 52
     11.9. Early Termination of a Session . . . . . . . . . . . . . . 52
   12. Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 54
   13. References . . . . . . . . . . . . . . . . . . . . . . . . . . 55



Forsberg, et al.          Expires June 9, 2007                  [Page 3]

Internet-Draft                    PANA                     December 2006


     13.1. Normative References . . . . . . . . . . . . . . . . . . . 55
     13.2. Informative References . . . . . . . . . . . . . . . . . . 55
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 57
   Intellectual Property and Copyright Statements . . . . . . . . . . 59















































Forsberg, et al.          Expires June 9, 2007                  [Page 4]

Internet-Draft                    PANA                     December 2006


1.  Introduction

   Providing secure network access service requires access control based
   on the authentication and authorization of the clients and the access
   networks.  Client-to-network authentication provides parameters that
   are needed to police the traffic flow through the enforcement points.
   A protocol is needed to carry authentication methods between the
   client and the access network.

   Scope of this work is identified as designing a network layer
   transport for network access authentication methods.  The Extensible
   Authentication Protocol (EAP) [RFC3748] provides such authentication
   methods.  In other words, PANA will carry EAP which can carry various
   authentication methods.  By the virtue of enabling transport of EAP
   above IP, any authentication method that can be carried as an EAP
   method is made available to PANA and hence to any link-layer
   technology.  There is a clear division of labor between PANA (an EAP
   lower layer), EAP and EAP methods as described in [RFC3748].

   Various environments and usage models for PANA are identified in
   Appendix A of [RFC4058].  Potential security threats for
   network-layer access authentication protocol are discussed in
   [RFC4016].  These have been essential in defining the requirements
   [RFC4058] on the PANA protocol.  Note that some of these requirements
   are imposed by the chosen payload, EAP [RFC3748].

   There are components that are part of a complete secure network
   access solution but are outside of the PANA protocol specification,
   including authentication method choice, data traffic protection,
   PAA-EP protocol, and PAA discovery.  PANA authentication output is
   used for creating access control filters.  These components are
   described in separate documents (see [I-D.ietf-pana-framework],
   [I-D.ietf-pana-snmp] and [I-D.ietf-dhc-paa-option]).  The readers are
   recommended to read the PANA Framework document
   [I-D.ietf-pana-framework] prior to reading this protocol
   specification document.

1.1.  Specification of Requirements

   In this document, several words are used to signify the requirements
   of the specification.  These words are often capitalized.  The key
   words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
   "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document
   are to be interpreted as described in [RFC2119].







Forsberg, et al.          Expires June 9, 2007                  [Page 5]

Internet-Draft                    PANA                     December 2006


2.  Terminology

   PANA Client (PaC):

      The client side of the protocol that resides in the access device
      (e.g., laptop, PDA, etc.).  It is responsible for providing the
      credentials in order to prove its identity (authentication) for
      network access authorization.  The PaC and the EAP peer are
      co-located in the same access device.

   PANA Authentication Agent (PAA):

      The protocol entity in the access network whose responsibility is
      to verify the credentials provided by a PANA client (PaC) and
      authorize network access to the access device.  The PAA and the
      EAP authenticator (and optionally the EAP server) are co-located
      in the same node.  Note the authentication and authorization
      procedure can, according to the EAP model, also be offloaded to
      the backend AAA infrastructure.

   PANA Session:

      A PANA session begins with the handshake between the PANA Client
      (PaC) and the PANA Authentication Agent (PAA), and terminates as a
      result of an authentication or liveness test failure, a message
      delivery failure after retransmissions reach maximum values,
      session lifetime expiration, or an explicit termination message.
      A fixed session identifier is maintained throughout a session.  A
      session cannot be shared across multiple network interfaces.

   Session Lifetime:

      A duration that is associated with a PANA session.  For an
      established PANA session, the session lifetime is bound to the
      lifetime of the current authorization given to the PaC.  The
      session lifetime can be updated by a new round of EAP
      authentication before it expires.

   Session Identifier:

      This identifier is used to uniquely identify a PANA session on the
      PaC and the PAA.  It is included in PANA messages to bind the
      message to a specific PANA session.  This bidirectional identifier
      is allocated by the PAA in handshake phase and freed when the
      session terminates.  The session identifier is assigned by the PAA
      and unique within the PAA during the lifetime of the session.





Forsberg, et al.          Expires June 9, 2007                  [Page 6]

Internet-Draft                    PANA                     December 2006


   PANA Security Association (PANA SA):

      A PANA security association is formed between the PaC and the PAA
      by sharing cryptographic keying material and associated context.
      The formed duplex security association is used to protect the
      bidirectional PANA signaling traffic between the PaC and PAA.

   Enforcement Point (EP):

      A node on the access network where per-packet enforcement policies
      (i.e., filters) are applied on the inbound and outbound traffic of
      access devices.  The EP and the PAA may be co-located.  EPs should
      prevent data traffic from and to any unauthorized client unless
      it's either PANA or one of the other allowed traffic types (e.g.,
      ARP, IPv6 neighbor discovery, DHCP, etc.).  Detailed enforcement
      policies may be specified in deployment-specific PANA
      applicability documents.

   Master Session Key (MSK):

      A key derived by the EAP peer and the EAP server and transported
      to the EAP authenticator [RFC3748].

   For additional terminology definitions see the PANA framework
   document [I-D.ietf-pana-framework].


























Forsberg, et al.          Expires June 9, 2007                  [Page 7]

Internet-Draft                    PANA                     December 2006


3.  Protocol Overview

   The PANA protocol is run between a client (PaC) and a server (PAA) in
   order to perform authentication and authorization for the network
   access service.

   The protocol messaging consists of a series of request and responses,
   some of which may be initiated by either end.  Each message can carry
   zero or more AVPs within the payload.  The main payload of PANA is
   EAP which performs authentication.  PANA helps the PaC and PAA
   establish an EAP session.

   PANA is a UDP-based protocol.  It has its own retransmission
   mechanism to reliably deliver messages.

   PANA messages are sent between the PaC and PAA as part of a PANA
   session.  A PANA session consists of distinct phases:

   o  Handshake phase: This is the phase that initiates a new PANA
      session.  The handshake phase can be triggered by both the PaC and
      the PAA.

   o  Authentication and authorization phase: Immediately following the
      handshake phase is the EAP execution between the PAA and PaC.  The
      EAP payload (which carry an EAP method inside) is what is used for
      authentication.  The PAA conveys the result of authentication and
      authorization to the PaC at the end of this phase.

   o  Access phase: After a successful authentication and authorization
      the host gains access to the network and can send and receive IP
      data traffic through the EP(s).  At any time during this phase,
      the PaC and PAA may optionally send PANA ping messages to test
      liveness of the PANA session on the peer.

   o  Re-authentication phase: During the access phase, the PAA must
      initiate re-authentication before the PANA session lifetime
      expires.  EAP is carried by PANA to perform authentication.  This
      phase may be optionally triggered by both the PaC and the PAA
      without any respect to the session lifetime.  The session moves to
      this phase from the access phase, and returns back there upon
      successful re-authentication.

   o  Termination phase: The PaC or PAA may choose to discontinue the
      access service at any time.  An explicit disconnect message can be
      sent by either end.  If either the PaC or the PAA disconnects
      without engaging in termination messaging, it is expected that
      either the expiration of a finite session lifetime or failed
      liveness tests would clean up the session at the other end.



Forsberg, et al.          Expires June 9, 2007                  [Page 8]

Internet-Draft                    PANA                     December 2006


     PaC  PAA    Message
   -----------------------------------------------------
   // Handshake phase
      ----->     PANA-Client-Initiation
      <-----     PANA-Start-Request
      ----->     PANA-Start-Answer

   // Authentication and authorization phase
      <-----     PANA-Auth-Request /* EAP Request */
      ----->     PANA-Auth-Answer
      ----->     PANA-Auth-Request /* EAP Response */
      <-----     PANA-Auth-Answer
      <-----     PANA-Bind-Request /* EAP Success */
      ----->     PANA-Bind-Answer

   // Access phase (IP data traffic allowed)
      <-----     PANA-Ping-Request
      ----->     PANA-Ping-Answer

   // Termination phase
      ----->     PANA-Termination-Request
      <-----     PANA-Termination-Answer

           Figure 1: Illustration of PANA messages in a session

   Note that depending on the environment and deployment the protocol
   flow depicted in Figure 1 can be abbreviated (An unsolicited
   PANA-Start-Request message can be sent without
   PANA-Client-Initiation, EAP responses can be piggybacked on the
   PANA-Auth-Answers, and PANA-Ping and PANA-Termination usage is
   optional).

   Cryptographic protection of messages between the PaC and PAA is
   possible as soon as EAP in conjunction with the EAP method exports a
   shared key.  That shared key is used to create a PANA SA.  The PANA
   SA helps generate per-message authentication codes that provide
   integrity protection and authentication.

   Throughout the lifetime of a session, various problems found with the
   incoming messages can generate a PANA error message sent in response.











Forsberg, et al.          Expires June 9, 2007                  [Page 9]

Internet-Draft                    PANA                     December 2006


4.  Protocol Details

   The following sections explain in detail the various phases of a PANA
   session.

4.1.  Transport Layer

   PANA uses UDP as its transport layer protocol.  The UDP port number
   is To Be Assigned by IANA.  All messages are always unicast.

4.2.  High-Level Attribute-Value Pair Description

   The payload of any PANA message consists of zero or more AVPs
   (Attribute Value Pairs).  The subsequent sections refer to these
   AVPs, therefore the list of AVPs are provided with a brief
   description before more extensive descriptions are included later in
   the document (see Section 8).

   o  Algorithm AVP: contains a pseudo-random function and an integrity
      algorithm.

   o  AUTH AVP: contains a Message Authentication Code that integrity
      protects the PANA message.

   o  EAP AVP: contains an EAP PDU.

   o  Failed-AVP: contains an offending AVP that caused a failure.

   o  Failed-Message-Header AVP: contains the header of an offending
      message that caused a failure.

   o  Key-Id AVP: contains an MSK identifier.

   o  Nonce AVP: contains a randomly chosen value [RFC4086] that is used
      in cryptographic key computations.

   o  Result-Code AVP: contains information about the protocol execution
      results.

   o  Session-Lifetime AVP: contains the duration of authorized access.

   o  Termination-Cause AVP: contains the reason of session termination.

4.3.  Handshake Phase

   The handshake phase can be initiated by either the PaC or the PAA.





Forsberg, et al.          Expires June 9, 2007                 [Page 10]

Internet-Draft                    PANA                     December 2006


   PaC-initiated Handshake:

      When the PaC initiates the handshake phase, it sends a
      PANA-Client-Initiation message to the PAA.  When the PaC is not
      configured with an IP address of the PAA before initiating the
      handshake phase, DHCP [I-D.ietf-dhc-paa-option] is used as the
      default method for dynamically configuring the IP address of the
      PAA.  Alternative methods for dynamically discovering the IP
      address of the PAA may be used for PaC-initiated handshake but
      they are outside the scope of this specification.  The PAA that
      receives the PANA-Client-Initiation message MUST respond with a
      PANA-Start-Request message sent to the PaC.

   PAA-initiated Handshake:

      When the PAA knows the IP address of the PaC, it MAY send an
      unsolicited PANA-Start-Request to the PaC.  The details of how PAA
      can learn the IP address of the PaC are outside the scope of this
      specification.

   A session identifier for the session is assigned by the PAA in the
   handshake phase and carried in the PANA-Start-Request message.  The
   same session identifier MUST be carried in the subsequent messages
   exchanged between the PAA and PaC throughout the session.

   When the PaC receives a PANA-Start-Request message from a PAA, it
   responds with a PANA-Start-Answer message if it wishes to enter the
   authentication and authorization phase.

   The PAA MAY limit the rate it processes incoming
   PANA-Client-Initiation messages.

   An Algorithm AVP MAY be included in the PANA-Start-Request in order
   to indicate required and available capabilities for the network
   access.  This AVP MAY be used by the PaC for assessing the capability
   match even before the authentication takes place.  Since this AVP is
   provided during the insecure handshake phase, there are certain
   security risks involved in using the provided information.  See
   Section 11 for further discussion on this.

   The initial EAP Request message MAY be carried by the
   PANA-Start-Request message (as oppose to by a later PANA-Auth-Request
   message) in order to reduce the number of round-trips.  If the
   initial EAP Request message is carried in the PANA-Start-Request
   message, an EAP Response message MUST be carried in the
   PANA-Start-Answer message returned to the PAA.

   In order to prevent potential DoS attacks, the PAA MAY refrain from



Forsberg, et al.          Expires June 9, 2007                 [Page 11]

Internet-Draft                    PANA                     December 2006


   timeout-based retransmission of the PANA-Start-Request message in
   response to a PaC-initiated handshake.  For this reason, the PaC MUST
   retransmit the PANA-Client-Initiation message until it enters the
   authentication and authorization phase by receiving the first
   PANA-Auth-Request message from the PAA.

   It is possible that both the PAA and the PaC initiate the handshake
   procedure at the same time, i.e., the PAA sends a PANA-Start-Request
   message while the PaC sends a PANA-Client-Initiation message.  To
   resolve the race condition, the PAA SHOULD silently discard the
   PANA-Client-Initiation message received from the PaC after it has
   sent a PANA-Start-Request message.

   Figure 2 shows an example sequence for PaC-initiated handshake.

      PaC      PAA         Message(sequence number)[AVPs]
      ------------------------------------------------------
         ----->            PANA-Client-Initiation(0)
         <-----            PANA-Start-Request(x)
         ----->            PANA-Start-Answer(x)
                           (continued to the authentication and
                            authorization phase)

       Figure 2: Example sequence for PaC-initiated handshake phase

4.4.  Authentication and Authorization Phase

   The main task of the authentication and authorization phase is to
   carry EAP messages between the PaC and the PAA.  EAP Request and
   Response messages are carried in PANA-Auth-Request messages.
   PANA-Auth-Answer messages are simply used to acknowledge receipt of
   the requests.  As an optimization, a PANA-Auth-Answer message MAY
   include the EAP Response message.  This optimization MAY not be used
   when it takes time to generate the EAP Response message (due to,
   e.g., intervention of human input), in which case returning an
   PANA-Auth-Answer message without piggybacking an EAP Response message
   can avoid unnecessary retransmission of the PANA-Auth-Request
   message.  Another optimization allows optionally carrying the first
   EAP Request/Response message in PANA-Start-Request/Answer message as
   described in Section 4.3.

   A Nonce AVP MUST be included in the first PANA-Auth-Request and
   PANA-Auth-Answer messages.

   The result of PANA authentication is carried in a PANA-Bind-Request
   message sent from the PAA to the PaC.  This message carries the EAP
   authentication result and the result of PANA authentication.  The
   PANA-Bind-Request message MUST be acknowledged with a



Forsberg, et al.          Expires June 9, 2007                 [Page 12]

Internet-Draft                    PANA                     December 2006


   PANA-Bind-Answer (PBA) message.  Figure 3 shows an example sequence
   in the authentication and authorization phase.

 PaC      PAA  Message(sequence number)[AVPs]
 --------------------------------------------------------------------
               (continued from the handshake phase)
    <-----     PANA-Auth-Request(x+1)[Nonce, EAP{Request}]
    ----->     PANA-Auth-Answer(x+1)[Nonce] // No piggybacking EAP Resp.
    ----->     PANA-Auth-Request(y)[EAP{Response}]
    <-----     PANA-Auth-Answer(y)
    <-----     PANA-Auth-Request(x+2)[EAP{Request}]
    ----->     PANA-Auth-Answer(x+2)[EAP{Response}]
    <-----     PANA-Bind-Request(x+3)[Result-Code, EAP{Success}, Key-Id,
                                          Algorithm, Lifetime, AUTH]
    ----->     PANA-Bind-Answer(x+3)[Key-Id, AUTH]

    Figure 3: Example sequence for the authentication and authorization
                                   phase

   When an EAP method that is capable of deriving keys is used during
   the authentication and authorization phase and the keys are
   successfully derived, the PANA message that carries the EAP Success
   message (i.e., a PANA-Bind-Request message) MUST contain a Key-Id AVP
   and an AUTH AVP, and an Algorithm AVP for the first derivation of
   keys in the session, and any subsequent message MUST contain an AUTH
   AVP.  An Algorithm AVP MUST NOT be contained in a PANA-Bind-Request
   message after the first derivation of keys in the session.

   EAP authentication can fail at a pass-through authenticator without
   sending an EAP Failure message [RFC4137].  When this occurs, the PAA
   SHOULD send a PANA-Error-Request message to the PaC with using
   PANA_UNABLE_TO_COMPLY result code.  The PaC MUST NOT change its state
   unless the error message is secured by PANA or lower-layer.  In any
   case, a more appropriate way is to rely on a timeout on the PaC.

   There is a case where EAP authentication succeeds with producing an
   EAP Success message but network access authorization fails due to,
   e.g., authorization rejected by a AAA or authorization locally
   rejected by the PAA.  When this occurs, the PAA MUST send a
   PANA-Bind-Request with a result code PANA_AUTHORIZATION_REJECTED.  If
   an MSK is established between the PaC and the PAA by the time when
   the EAP Success message is generated by the EAP server (this is the
   case when the EAP method provides protected success indication), the
   PANA-Bind-Request and PANA-Bind-Answer messages MUST be protected
   with an AUTH AVP and carry a Key-Id AVP.  The PANA-Bind-Request
   message MUST also carry an Algorithm AVP if it is for the first
   derivation of keys in the session.  The MSK and the PANA session MUST
   be deleted immediately after the PANA-Bind message exchange.



Forsberg, et al.          Expires June 9, 2007                 [Page 13]

Internet-Draft                    PANA                     December 2006


4.5.  Access Phase

   Once the authentication and authorization phase or the
   re-authentication phase successfully completes, the PaC gains access
   to the network and can send and receive IP data traffic through the
   EP(s) and the PANA session enters the access phase.  In this phase,
   PANA-Ping-Request and PANA-Ping-Answer messages can be used for
   testing the liveness of the PANA session on the PANA peer.  Both the
   PaC and the PAA are allowed to send a PANA-Ping-Request message to
   the communicating peer whenever they need to make sure the
   availability of the session on the peer and expect the peer to return
   a PANA-Ping-Answer message.  Both PANA-Ping-Request and
   PANA-Ping-Answer messages MUST be protected with an AUTH AVP when a
   PANA SA is available.

   Implementations MUST limit the rate of performing this test.  The PaC
   and the PAA can handle rate limitation on their own, they do not have
   to perform any coordination with each other.  There is no negotiation
   of timers for this purpose.  Additionally, an implementation MAY
   rate-limit processing the incoming PANA-Ping-Requests.

   Figure 4 and Figure 5 show liveness tests as they are initiated by
   the PaC and the PAA respectively.

   PaC      PAA     Message(sequence number)[AVPs]
   ------------------------------------------------------
      ----->        PANA-Ping-Request(q)[AUTH]
      <-----        PANA-Ping-Answer(q)[AUTH]


        Figure 4: Example sequence for PaC-initiated liveness test


   PaC      PAA     Message(sequence number)[AVPs]
   ------------------------------------------------------
      <-----        PANA-Ping-Request(p)[AUTH]
      ----->        PANA-Ping-Answer(p)[AUTH]

        Figure 5: Example sequence for PAA-initiated liveness test

4.6.  Re-authentication Phase

   The PANA session in the access phase can enter the re-authentication
   phase to extend the current session lifetime by re-executing EAP.
   Once the re-authentication phase successfully completes, the session
   re-enters the access phase.  Otherwise, the session is deleted.

   When the PaC wants to initiate re-authentication, it sends a



Forsberg, et al.          Expires June 9, 2007                 [Page 14]

Internet-Draft                    PANA                     December 2006


   PANA-Reauth-Request message to the PAA.  This message MUST contain
   the session identifier assigned to the session being
   re-authenticated.  If the PAA already has an established PANA session
   for the PaC with the matching session identifier, it MUST first
   respond with a PANA-Reauth-Answer message, followed by a
   PANA-Auth-Request message that starts a new EAP authentication.  If
   the PAA cannot identify the session, it MUST silently discard the
   message.  A Nonce AVP MUST be included in the first PANA-Auth-Request
   and PANA-Auth-Answer messages in the re-authentication phase.

   The PaC may receive a PANA-Auth-Request before receiving the answer
   to its outstanding PANA-Reauth-Request.  This condition can arise due
   to packet re-ordering or a race condition between the PaC and PAA
   when they both attempt to engage in re-authentication.  The PaC MUST
   keep discarding the received PANA-Auth-Requests until it receives the
   answer to its request.

   When the PAA initiates re-authentication, it sends a
   PANA-Auth-Request message containing the session identifier for the
   PaC to enter the re-authentication phase.  The PAA SHOULD initiate
   EAP re-authentication before the current session lifetime expires.

   Re-authentication of an on-going PANA session MUST maintain the
   existing sequence numbers.

   For any re-authentication, if there is an established PANA SA,
   PANA-Reauth-Request, PANA-Reauth-Answer, PANA-Auth-Request and
   PANA-Auth-Answer messages MUST be protected by adding an AUTH AVP to
   each message.

 PaC      PAA  Message(sequence number)[AVPs]
 ------------------------------------------------------
    ----->     PANA-Reauth-Request(q)[AUTH]
    <-----     PANA-Reauth-Answer(q)[AUTH]
    <-----     PANA-Auth-Request(p)[EAP{Request}, AUTH]
    ----->     PANA-Auth-Answer(p)[AUTH]   // No piggybacking EAP Resp.
    ----->     PANA-Auth-Request(q+1)[EAP{Response}, AUTH]
    <-----     PANA-Auth-Answer(q+1)[AUTH] // No piggybacking EAP Resp.
    <-----     PANA-Auth-Request(p+1)[EAP{Request}, AUTH]
    ----->     PANA-Auth-Answer(p+1)[EAP{Response}, AUTH]
    <-----     PANA-Bind-Request(p+2)[Result-Code, EAP{Success}, Key-Id,
                                           Algorithm, Lifetime, AUTH]
    ----->     PANA-Bind-Answer(p+2)[Key-Id, AUTH]

   Figure 6: Example sequence for the re-authentication phase initiated
                                  by PaC





Forsberg, et al.          Expires June 9, 2007                 [Page 15]

Internet-Draft                    PANA                     December 2006


4.7.  Termination Phase

   A procedure for explicitly terminating a PANA session can be
   initiated either from the PaC (i.e., disconnect indication) or from
   the PAA (i.e., session revocation).  The PANA-Termination-Request and
   PANA-Termination-Answer message exchanges are used for disconnect
   indication and session revocation procedures.

   The reason for termination is indicated in the Termination-Cause AVP.
   When there is an established PANA SA between the PaC and the PAA, all
   messages exchanged during the termination phase MUST be protected
   with an AUTH AVP.  When the sender of the PANA-Termination-Request
   message receives a valid acknowledgment, all states maintained for
   the PANA session MUST be deleted immediately.

   PaC      PAA     Message(sequence number)[AVPs]
   ------------------------------------------------------
      ----->        PANA-Termination-Request(q)[AUTH]
      <-----        PANA-Termination-Answer(q)[AUTH]

   Figure 7: Example sequence for the termination phase triggered by PaC






























Forsberg, et al.          Expires June 9, 2007                 [Page 16]

Internet-Draft                    PANA                     December 2006


5.  Processing Rules

5.1.  Fragmentation

   PANA does not provide fragmentation of PANA messages.  Instead, it
   relies on fragmentation provided by EAP methods and IP layer when
   needed.

5.2.  Sequence Number and Retransmission

   PANA uses sequence numbers to provide ordered and reliable delivery
   of messages.

   The PaC and PAA maintain two sequence numbers: the next one to be
   used for a request it initiates and the next one it expects to see in
   a request from the other end.  These sequence numbers are 32-bit
   unsigned numbers.  They are monotonically incremented by 1 as new
   requests are generated and received, and wrapped to zero on the next
   message after 2^32-1.  Answers always contain the same sequence
   number as the corresponding request.  Retransmissions reuse the
   sequence number contained in the original packet.

   The initial sequence numbers (ISN) are randomly picked by the PaC and
   PAA as they send their very first request messages.
   PANA-Client-Initiation message carries sequence number 0.

   When a request message is received, it is considered valid in terms
   of sequence numbers if and only if its sequence number matches the
   expected value.  This check does not apply to the
   PANA-Client-Initiation and PANA-Start-Request messages.

   When an answer message is received, it is considered valid in terms
   of sequence numbers if and only if its sequence number matches that
   of the currently outstanding request.  A peer can only have one
   outstanding request at a time.

   PANA request messages are retransmitted based on a timer until a
   response is received (in which case the retransmission timer is
   stopped) or the number of retransmission reaches the maximum value
   (in which case the PANA session MUST be deleted immediately).

   The retransmission timers SHOULD be calculated as described in
   Section 9 unless a given deployment chooses to use its own
   retransmission timers optimized for the underlying link-layer
   characteristics.

   The PaC and PAA MUST respond to duplicate requests as long as the
   responding rate does not exceed a certain threshold value.  The last



Forsberg, et al.          Expires June 9, 2007                 [Page 17]

Internet-Draft                    PANA                     December 2006


   transmitted answer MAY be cached in case it is not received by the
   peer and that generates a retransmission of the last request.  When
   available, the cached answer can be used instead of fully processing
   the retransmitted request and forming a new answer from scratch.

5.3.  PANA Security Association

   A PANA SA is created as an attribute of a PANA session when EAP
   authentication succeeds with a creation of an MSK.  A PANA SA is not
   created when the PANA authentication fails or no MSK is produced by
   any EAP authentication method.  When a new MSK is derived in the PANA
   re-authentication phase, any key derived from the old MSK MUST be
   updated to a new one that is derived from the new MSK.  In order to
   distinguish the new MSK from old ones, one Key-Id AVP MUST be carried
   in PANA-Bind-Request and PANA-Bind-Answer messages at the end of the
   EAP authentication which resulted in deriving a new MSK.  The Key-Id
   AVP is of type Unsigned32 and MUST contain a value that uniquely
   identifies the MSK within the PANA session.  The PANA-Bind-Answer
   message sent in response to a PANA-Bind-Request message with a Key-Id
   AVP MUST contain a Key-Id AVP with the same MSK identifier carried in
   the request.  PANA-Bind-Request and PANA-Bind-Answer messages with a
   Key-Id AVP MUST also carry an AUTH AVP whose value is computed by
   using the new PANA_AUTH_KEY derived from the new MSK.  Although the
   specification does not mandate a particular method for calculation of
   the Key-Id AVP value, a simple method is to use monotonically
   increasing numbers.

   The PANA session lifetime is bounded by the authorization lifetime
   granted by the authentication server (same as the MSK lifetime).  The
   lifetime of the PANA SA (hence the PANA_AUTH_KEY) is the same as the
   lifetime of the PANA session.  The created PANA SA is deleted when
   the corresponding PANA session is deleted.

   PANA SA attributes as well as PANA session attributes are listed
   below:

   PANA Session attributes:

      *  Session Identifier

      *  IP address and UDP port number of the PaC.

      *  IP address and UDP port number of the PAA

      *  Sequence number of the last transmitted request

      *  Sequence number of the last received request




Forsberg, et al.          Expires June 9, 2007                 [Page 18]

Internet-Draft                    PANA                     December 2006


      *  Last transmitted message payload

      *  Retransmission interval

      *  Session lifetime

      *  PANA SA attributes

   PANA SA attributes:

      *  Nonce generated by PaC (PaC_nonce)

      *  Nonce generated by PAA (PAA_nonce)

      *  MSK

      *  MSK Identifier

      *  PANA_AUTH_KEY

      *  Pseudo-random function

      *  Integrity algorithm

   The PANA_AUTH_KEY is derived from the available MSK and it is used to
   integrity protect PANA messages.  The PANA_AUTH_KEY is computed in
   the following way:

    PANA_AUTH_KEY = prf+(MSK, PaC_nonce|PAA_nonce|Session_ID|Key_ID)

   where the prf+ function is defined in IKEv2 [RFC4306].  The
   pseudo-random function to be used for the prf+ function is specified
   in the Algorithm AVP in a PANA-Bind-Request message.  The length of
   PANA_AUTH_KEY depends on the integrity algorithm in use.  See
   Section 5.4 for the detailed usage of the PANA_AUTH_KEY.  PaC_nonce
   and PAA_nonce are values of the Nonce AVP carried in the first
   PANA-Auth-Answer and PANA-Auth-Request messages in the authentication
   and authorization phase or the re-authentication phase, respectively.
   Session_ID is the session identifier of the session.  Key_ID is the
   value of the Key-ID AVP.

5.4.  Message Authentication

   A PANA message can contain an AUTH AVP for cryptographically
   protecting the message.

   When an AUTH AVP is included in a PANA message, the value field of
   the AUTH AVP is calculated by using the PANA_AUTH_KEY in the



Forsberg, et al.          Expires June 9, 2007                 [Page 19]

Internet-Draft                    PANA                     December 2006


   following way:

      AUTH AVP value = PANA_AUTH_HASH(PANA_AUTH_KEY, PANA_PDU)

   where PANA_PDU is the PANA message including the PANA header, with
   the AUTH AVP value field first initialized to 0.  PANA_AUTH_HASH
   represents the integrity algorithm specified in the Algorithm AVP in
   a PANA-Bind-Request message.  The PaC and PAA MUST use the same
   integrity algorithm to calculate an AUTH AVP they originate and
   receive.  The algorithm is determined by the PAA.  When the PaC does
   not support the integrity algorithm specified in the
   PANA-Bind-Request message, it MUST silently discard the message.

5.5.  Message Validity Check

   When a PANA message is received, the message is considered to be
   invalid at least when one of the following conditions are not met:

   o  Each field in the message header contains a valid value including
      sequence number, message length, message type, version number,
      flags, session identifier, etc.

   o  The message type is one of the expected types in the current
      state.  Specifically the following messages are unexpected and
      invalid:

      *  In the handshake phase:

         +  PANA-Termination-Request and PANA-Ping-Request.

         +  PANA-Bind-Request.

         +  PANA-Update-Request.

         +  PANA-Reauth-Request.

         +  PANA-Error-Request.

      *  In the authentication and authorization phase and the
         re-authentication phase:

         +  PANA-Client-Initiation.

         +  PANA-Update-Request.

         +  PANA-Start-Request after a PaC receives the first valid
            PANA-Auth-Request.




Forsberg, et al.          Expires June 9, 2007                 [Page 20]

Internet-Draft                    PANA                     December 2006


         +  PANA-Termination-Request before the PaC receives the first
            successful PANA-Bind-Request.

      *  In the access phase:

         +  PANA-Start-Request as well as a non-duplicate
            PANA-Bind-Request.

         +  PANA-Client-Initiation.

      *  In the termination phase:

         +  PANA-Client-Initiation.

         +  All requests but PANA-Termination-Request.

   o  The message payload contains a valid set of AVPs allowed for the
      message type and there is no missing AVP that needs to be included
      in the payload and no AVP, which needs to be at a fixed position,
      is included in a position different from this fixed position.

   o  Each AVP is decoded correctly.

   o  When an AUTH AVP is included, the AVP value matches the hash value
      computed against the received message.

   Invalid messages MUST be discarded in order to provide robustness
   against DoS attacks.  In addition, an error notification message MAY
   be returned to the sender.  See Section 5.8 for details.

5.6.  PaC Updating its IP Address

   A PaC's IP address used for PANA can change in certain situations,
   e.g., when the PaC moves from one IP link to another within the same
   PAA's realm.  In order to maintain the PANA session, the PAA needs to
   be notified about the change of PaC address.

   After the PaC has changed its IP address used for PANA, it MUST send
   a PANA-Update-Request message to the PAA.  The PAA MUST update the
   PANA session with the new PaC address carried in the Source Address
   field of the IP header and return a PANA-Update-Answer message.  If
   there is an established PANA SA, both PANA-Update-Request and
   PANA-Update-Answer messages MUST be protected with an AUTH AVP.

5.7.  Session Lifetime

   The authentication and authorization phase determines the PANA
   session lifetime when the network access authorization succeeds.  The



Forsberg, et al.          Expires June 9, 2007                 [Page 21]

Internet-Draft                    PANA                     December 2006


   Session-Lifetime AVP MAY be optionally included in the
   PANA-Bind-Request message to inform the PaC about the valid lifetime
   of the PANA session.  It MUST be ignored when included in other PANA
   messages.

   When the Session-Lifetime AVP is not included in the
   PANA-Bind-Request message then the PaC has no knowledge about a PANA
   session limitation and must therefore conclude that the session is
   not limited.

   The lifetime is a non-negotiable parameter that can be used by the
   PaC to manage PANA-related state.  The PaC does not have to perform
   any actions when the lifetime expires, other than purging local
   state.  The PAA SHOULD initiate the PANA re-authentication phase
   before the current session lifetime expires.

   The PaC and the PAA MAY use information obtained outside PANA (e.g.,
   lower-layer indications) to expedite the detection of a disconnected
   peer.  Availability and reliability of such indications MAY depend on
   a specific link-layer or network topology and are therefore only
   hints.  A PANA peer SHOULD use the PANA-Ping message exchange to
   verify that a peer is, in fact, no longer alive, unless information
   obtained outside PANA is being used to expedite the detection of a
   disconnected peer.

   The session lifetime parameter is not related to the transmission of
   PANA-Ping-Request messages.  These messages can be used for
   asynchronously verifying the liveness of the peer.  The decision to
   send a PANA-Ping-Request message is taken locally and does not
   require coordination between the peers.

5.8.  Error Handling

   A PANA-Error-Request message MAY be sent by either the PaC or the PAA
   when a badly formed PANA message is received or in case of other
   errors.  The receiver of this request MUST respond with a
   PANA-Error-Answer message.

   An adversary might craft erroneous PANA messages to launch a Denial
   of Service attack.  Unless the PaC or the PAA performs a
   rate-limitation of the generated PANA-Error-Request messages it may
   be overburdened by responding to bogus messages.  Note that a
   PANA-Error-Answer message that is sent in response to a
   PANA-Error-Request message does not require either the PaC or the PAA
   to create a state.

   If an error message is sent unprotected (i.e., without using an AUTH
   AVP) then the error message MUST be processed such that the receiver



Forsberg, et al.          Expires June 9, 2007                 [Page 22]

Internet-Draft                    PANA                     December 2006


   does not change its state.


















































Forsberg, et al.          Expires June 9, 2007                 [Page 23]

Internet-Draft                    PANA                     December 2006


6.  Header Format

   This section defines message formats for PANA protocol.

6.1.  IP and UDP Headers

   Any PANA message is unicast between the PaC and the PAA.

   When the PANA message is sent in response to a request, the UDP
   source and destination ports of the response message MUST be copied
   from the destination and source ports of the request message,
   respectively.

   For other PANA messages, the source port MUST be set to a value
   chosen by the sender and the destination port MUST be set to the
   assigned PANA port (To Be Assigned by IANA).

6.2.  PANA Message Header

   A summary of the PANA message header format is shown below.  The
   fields are transmitted in network byte order.


    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |    Version    |   Reserved    |        Message Length         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |             Flags             |         Message Type          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      Session Identifier                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                        Sequence Number                        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  AVPs ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-

   Version

      This Version field MUST be set to 1 to indicate PANA Version 1.

   Reserved

      This 8-bit field is reserved for future use, and MUST be set to
      zero, and ignored by the receiver.






Forsberg, et al.          Expires June 9, 2007                 [Page 24]

Internet-Draft                    PANA                     December 2006


   Message Length

      The Message Length field is two octets and indicates the length of
      the PANA message including the header fields.

   Flags

      The Flags field is two octets.  The following bits are assigned:

    0                   1
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |R r r r r r r r r r r r r r r r|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      R(equest)

         If set, the message is a request.  If cleared, the message is
         an answer.

      r(eserved)

         These flag bits are reserved for future use, and MUST be set to
         zero, and ignored by the receiver.

   Message Type

      The Message Type field is two octets, and is used in order to
      communicate the message type with the message.  The 16-bit address
      space is managed by IANA [ianaweb].

   Session Identifier

      This field contains a 32 bit session identifier.

   Sequence Number

      This field contains contains a 32 bit sequence number.

   AVPs

      AVPs are a method of encapsulating information relevant to the
      PANA message.  See section Section 6.3 for more information on
      AVPs.







Forsberg, et al.          Expires June 9, 2007                 [Page 25]

Internet-Draft                    PANA                     December 2006


6.3.  AVP Header

   Each AVP of type OctetString MUST be padded to align on a 32-bit
   boundary, while other AVP types align naturally.  A number of
   zero-valued bytes are added to the end of the AVP Data field till a
   word boundary is reached.  The length of the padding is not reflected
   in the AVP Length field [RFC3588].

   The fields in the AVP header are sent in network byte order.  The
   format of the header is:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           AVP Code            |           AVP Flags           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |          AVP Length           |            Reserved           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                         Vendor-Id (opt)                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |    Data ...
   +-+-+-+-+-+-+-+-+

   AVP Code

      The AVP Code, together with the optional Vendor ID field,
      identifies attribute that follows.  If the V-bit is not set, the
      Vendor ID is not present and the AVP Code refers to an IETF
      attribute.

   AVP Flags

      The AVP Flags field is two octets.  The following bits are
      assigned:

    0                   1
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |V M r r r r r r r r r r r r r r|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      V(endor)

         The 'V' bit, known as the Vendor-Specific bit, indicates
         whether the optional Vendor-Id field is present in the AVP
         header.  When set the AVP Code belongs to the specific vendor
         code address space.




Forsberg, et al.          Expires June 9, 2007                 [Page 26]

Internet-Draft                    PANA                     December 2006


      M(andatory)

         The 'M' Bit, known as the Mandatory bit, indicates whether
         support of the AVP is required.  If an AVP with the 'M' bit set
         is received by the PaC or PAA and either the AVP or its value
         is unrecognized, the message MUST be rejected and the receiver
         MUST send a PANA-Error-Request message.  If the AVP was
         unrecognized the PANA-Error-Request message result code MUST be
         PANA_AVP_UNSUPPORTED.  If the AVP value was unrecognized the
         PANA-Error-Request message result code MUST be
         PANA_INVALID_AVP_DATA.  In either case the PANA-Error-Request
         message MUST carry a Failed-AVP AVP containing the offending
         mandatory AVP.  AVPs with the 'M' bit cleared are informational
         only and a receiver that receives a message with such an AVP
         that is not recognized, or whose value is not recognized, MAY
         simply ignore the AVP.

      r(eserved)

         These flag bits are reserved for future use, and MUST be set to
         zero, and ignored by the receiver.

   AVP Length

      The AVP Length field is two octets, and indicates the number of
      octets in this AVP including the AVP Code, AVP Length, AVP Flags,
      and the AVP data.

   Reserved

      This two-octet field is reserved for future use, and MUST be set
      to zero, and ignored by the receiver.

   Vendor-Id

      The Vendor-Id field is present if the 'V' bit is set in the AVP
      Flags field.  The optional four-octet Vendor-Id field contains the
      IANA assigned "SMI Network Management Private Enterprise Codes"
      [ianaweb] value, encoded in network byte order.  Any vendor
      wishing to implement a vendor-specific PANA AVP MUST use their own
      Vendor-Id along with their privately managed AVP address space,
      guaranteeing that they will not collide with any other vendor's
      vendor-specific AVP(s), nor with future IETF applications.

   Data

      The Data field is zero or more octets and contains information
      specific to the Attribute.  The format and length of the Data



Forsberg, et al.          Expires June 9, 2007                 [Page 27]

Internet-Draft                    PANA                     December 2006


      field is determined by the AVP Code and AVP Length fields.

   Unless otherwise noted, AVPs defined in this document will have the
   following default AVP Flags field settings: The 'M' bit MUST be set.
   The 'V' bit MUST NOT be set.














































Forsberg, et al.          Expires June 9, 2007                 [Page 28]

Internet-Draft                    PANA                     December 2006


7.  PANA Messages

   Each Request/Answer message pair is assigned a Sequence Number, and
   the sub-type (i.e., request or answer) is identified via the 'R' bit
   in the Message Flags field of the PANA message header.

   Every PANA message MUST contain a message ID in its header's Message
   Type field, which is used to determine the action that is to be taken
   for a particular message.  Figure 8 lists all PANA messages defined
   in this document:

   Message-Name              Abbrev. ID PaC<->PAA  Ref.
   ----------------------------------------------------------
   PANA-Client-Initiation     PCI    1  -------->  7.1
   PANA-Start-Request         PSR    2  <--------  7.2
   PANA-Start-Answer          PSA    2  -------->  7.3
   PANA-Auth-Request          PAR    3  <------->  7.4
   PANA-Auth-Answer           PAN    3  <------->  7.5
   PANA-Reauth-Request        PRR    4  -------->  7.6
   PANA-Reauth-Answer         PRA    4  <--------  7.7
   PANA-Bind-Request          PBR    5  <--------  7.8
   PANA-Bind-Answer           PBA    5  -------->  7.9
   PANA-Ping-Request          PPR    6  <------->  7.10
   PANA-Ping-Answer           PPA    6  <------->  7.11
   PANA-Termination-Request   PTR    7  <------->  7.12
   PANA-Termination-Answer    PTA    7  <------->  7.13
   PANA-Error-Request         PER    8  <------->  7.14
   PANA-Error-Answer          PEA    8  <------->  7.15
   PANA-Update-Request        PUR    9  <------->  7.16
   PANA-Update-Answer         PUA    9  <------->  7.17
   -----------------------------------------------------------

                     Figure 8: Table of PANA Messages

   Every PANA message defined MUST include a corresponding ABNF
   [RFC2234] specification, which is used to define the AVPs that MUST
   or MAY be present.  The following format is used in the definition:

   message-def      = Message-Name "::=" PANA-message

   message-name     = PANA-name

   PANA-name        = ALPHA *(ALPHA / DIGIT / "-")

   PANA-message     = header  [ *fixed] [ *required] [ *optional]
                      [ *fixed]

   header           = "< PANA-Header: " Message-Type



Forsberg, et al.          Expires June 9, 2007                 [Page 29]

Internet-Draft                    PANA                     December 2006


                      [r-bit] ">"

   Message-Type     = 1*DIGIT
                      ; The Message Type assigned to the message

   r-bit            = ", REQ"
                      ; If present, the 'R' bit in the Message
                      ; Flags is set, indicating that the message
                      ; is a request, as opposed to an answer.

   fixed            = [qual] "<" avp-spec ">"
                      ; Defines the fixed position of an AVP.

   required         = [qual] "{" avp-spec "}"
                      ; The AVP MUST be present and can appear
                      ; anywhere in the message.

   optional         = [qual] "[" avp-name "]"
                      ; The avp-name in the 'optional' rule cannot
                      ; evaluate to any AVP Name which is included
                      ; in a fixed or required rule.  The AVP can
                      ; appear anywhere in the message.

   qual             = [min] "*" [max]
                      ; See ABNF conventions, RFC 2234 Section 6.6.
                      ; The absence of any qualifiers depends on whether
                      ; it precedes a fixed, required, or optional
                      ; rule.  If a fixed or required rule has no
                      ; qualifier, then exactly one such AVP MUST
                      ; be present.  If an optional rule has no
                      ; qualifier, then 0 or 1 such AVP may be
                      ; present.
                      ;
                      ; NOTE:  "[" and "]" have a different meaning
                      ; than in ABNF (see the optional rule, above).
                      ; These braces cannot be used to express
                      ; optional fixed rules (such as an optional
                      ; AUTH at the end).  To do this, the convention
                      ; is '0*1fixed'.

   min              = 1*DIGIT
                      ; The minimum number of times the element may
                      ; be present.  The default value is zero.

   max              = 1*DIGIT
                      ; The maximum number of times the element may
                      ; be present.  The default value is infinity.  A
                      ; value of zero implies the AVP MUST NOT be



Forsberg, et al.          Expires June 9, 2007                 [Page 30]

Internet-Draft                    PANA                     December 2006


                      ; present.

   avp-spec         = PANA-name
                      ; The avp-spec has to be an AVP Name, defined
                      ; in the base or extended PANA protocol
                      ; specifications.

   avp-name         = avp-spec / "AVP"
                      ; The string "AVP" stands for *any* arbitrary
                      ; AVP Name, which does not conflict with the
                      ; required or fixed position AVPs defined in
                      ; the message definition.

   Example-Request ::= < "PANA-Header: 9999999, REQ >
                       { Result-Code }
                    *  [ AVP ]
                   0*1 < AUTH >

7.1.  PANA-Client-Initiation (PCI)

   The PANA-Client-Initiation (PCI) message is used for PaC-initiated
   handshake.  The Sequence Number and Session Identifier fields in this
   message MUST be set to zero (0).

   PANA-Client-Initiation ::= < PANA-Header: 1 >
                    *  [ AVP ]

7.2.  PANA-Start-Request (PSR)

   The PANA-Start-Request (PSR) message is sent by the PAA to the PaC to
   start PANA authentication.  The PAA sets the Sequence Number field to
   an initial random value and sets the Session Identifier field to a
   newly assigned value.

   PANA-Start-Request ::= < PANA-Header: 2, REQ >
                       [ EAP-Payload ]
                       [ Algorithm ]
                    *  [ AVP ]

7.3.  PANA-Start-Answer (PSA)

   The PANA-Start-Answer (PSA) message is sent by the PaC to the PAA in
   response to a PANA-Start-Request message.  This message completes the
   handshake to start PANA authentication.

   PANA-Start-Answer ::= < PANA-Header: 2 >
                       [ EAP-Payload ]
                    *  [ AVP ]



Forsberg, et al.          Expires June 9, 2007                 [Page 31]

Internet-Draft                    PANA                     December 2006


7.4.  PANA-Auth-Request (PAR)

   The PANA-Auth-Request (PAR) message is either sent by the PAA or the
   PaC.  Its main task is to carry an EAP-Payload AVP.

   PANA-Auth-Request ::= < PANA-Header: 3, REQ >
                       < EAP-Payload >
                       [ Nonce ]
                    *  [ AVP ]
                   0*1 < AUTH >

7.5.  PANA-Auth-Answer (PAN)

   The PANA-Auth-Answer (PAN) message is sent by either the PaC or the
   PAA in response to a PANA-Auth-Request message.  It MAY carry an
   EAP-Payload AVP.

   PANA-Auth-Answer ::= < PANA-Header: 3 >
                       [ Nonce ]
                       [ EAP-Payload ]
                    *  [ AVP ]
                   0*1 < AUTH >

7.6.  PANA-Reauth-Request (PRR)

   The PANA-Reauth-Request (PRR) message is sent by the PaC to the PAA
   to re-initiate EAP authentication.

   PANA-Reauth-Request ::= < PANA-Header: 4, REQ >
                    *  [ AVP ]
                   0*1 < AUTH >

7.7.  PANA-Reauth-Answer (PRA)

   The PANA-Reauth-Answer (PRA) message is sent by the PAA to the PaC in
   response to a PANA-Reauth-Request message.

   PANA-Reauth-Answer ::= < PANA-Header: 4 >
                    *  [ AVP ]
                   0*1 < AUTH >

7.8.  PANA-Bind-Request (PBR)

   The PANA-Bind-Request (PBR) message is sent by the PAA to the PaC to
   deliver the result of PANA authentication.






Forsberg, et al.          Expires June 9, 2007                 [Page 32]

Internet-Draft                    PANA                     December 2006


   PANA-Bind-Request ::= < PANA-Header: 5, REQ >
                       { Result-Code }
                       [ EAP-Payload ]
                       [ Session-Lifetime ]
                       [ Key-Id ]
                       [ Algorithm ]
                    *  [ AVP ]
                   0*1 < AUTH >

7.9.  PANA-Bind-Answer (PBA)

   The PANA-Bind-Answer (PBA) message is sent by the PaC to the PAA in
   response to a PANA-Bind-Request message.

   PANA-Bind-Answer ::= < PANA-Header: 5 >
                       [ Key-Id ]
                    *  [ AVP ]
                   0*1 < AUTH >

7.10.  PANA-Ping-Request (PPR)

   The PANA-Ping-Request (PPR) message is either sent by the PaC or the
   PAA for performing liveness test.

   PANA-Ping-Request ::= < PANA-Header: 6, REQ >
                    *  [ AVP ]
                   0*1 < AUTH >

7.11.  PANA-Ping-Answer (PPA)

   The PANA-Ping-Answer (PPA) message is sent in response to a
   PANA-Ping-Request.

   PANA-Ping-Answer ::= < PANA-Header: 6 >
                    *  [ AVP ]
                   0*1 < AUTH >

7.12.  PANA-Termination-Request (PTR)

   The PANA-Termination-Request (PTR) message is sent either by the PaC
   or the PAA to terminate a PANA session.

   PANA-Termination-Request ::= < PANA-Header: 7, REQ >
                       < Termination-Cause >
                    *  [ AVP ]
                   0*1 < AUTH >





Forsberg, et al.          Expires June 9, 2007                 [Page 33]

Internet-Draft                    PANA                     December 2006


7.13.  PANA-Termination-Answer (PTA)

   The PANA-Termination-Answer (PTA) message is sent either by the PaC
   or the PAA in response to PANA-Termination-Request.

   PANA-Termination-Answer ::= < PANA-Header: 7 >
                    *  [ AVP ]
                   0*1 < AUTH >

7.14.  PANA-Error-Request (PER)

   The PANA-Error-Request (PER) message is sent either by the PaC or the
   PAA to report an error with the last received PANA message.  This
   message MUST contain one Failed-Message-Header AVP which carries the
   content of the PANA message header of the erroneous message.

   PANA-Error-Request ::= < PANA-Header: 8, REQ >
                        < Result-Code >
                        { Failed-Message-Header }
                     *  [ Failed-AVP ]
                     *  [ AVP ]
                    0*1 < AUTH >

7.15.  PANA-Error-Answer (PEA)

   The PANA-Error-Answer (PEA) message is sent in response to a
   PANA-Error-Request.

   PANA-Error-Answer ::= < PANA-Header: 8 >
                     *  [ AVP ]
                    0*1 < AUTH >

7.16.  PANA-Update-Request (PUR)

   The PANA-Update-Request (PUR) message is sent either by the PaC or
   the PAA to deliver attribute updates.  In the scope of this
   specification only the IP address the PaC can be updated via this
   message.

   PANA-Update-Request ::= < PANA-Header: 9, REQ >
                    *  [ AVP ]
                   0*1 < AUTH >

7.17.  PANA-Update-Answer (PUA)

   The PANA-Update-Answer (PUA) message is sent by the PAA (PaC) to the
   PaC (PAA) in response to a PANA-Update-Request from the PaC (PAA).




Forsberg, et al.          Expires June 9, 2007                 [Page 34]

Internet-Draft                    PANA                     December 2006


   PANA-Update-Answer ::= < PANA-Header: 9 >
                    *  [ AVP ]
                   0*1 < AUTH >
















































Forsberg, et al.          Expires June 9, 2007                 [Page 35]

Internet-Draft                    PANA                     December 2006


8.  AVPs in PANA

   This document uses AVP Data Format such as 'OctetString' and
   'Unsigned32' as defined in Section 4.2 of [RFC3588].  The definitions
   of these data formats are not repeated in this document.

   The following tables lists the AVPs used in this document, and
   specifies in which PANA messages they MAY, or MAY NOT be present.

   The table uses the following symbols:

   0     The AVP MUST NOT be present in the message.

   0+    Zero or more instances of the AVP MAY be present in the
         message.

   0-1   Zero or one instance of the AVP MAY be present in the message.
         It is considered an error if there are more than one instance
         of the AVP.

   1     One instance of the AVP MUST be present in the message.

   1+    At least one instance of the AVP MUST be present in the
         message.


                         +-------------------------------------------+
                         |               Message Type                |
                         +---+---+---+---+---+---+---+---+---+---+---+
   Attribute Name        |PCI|PSR|PSA|PAR|PAN|PRR|PRA|PBR|PBA|PPR|PPA|
   ----------------------+---+---+---+---+---+---+---+---+---+---+---+
   Algorithm             | 0 |0-1| 0 | 0 | 0 | 0 | 0 |0-1| 0 | 0 | 0 |
   AUTH                  | 0 | 0 | 0 |0-1|0-1|0-1|0-1|0-1|0-1|0-1|0-1|
   EAP-Payload           | 0 |0-1|0-1| 1 |0-1| 0 | 0 |0-1| 0 | 0 | 0 |
   Failed-AVP            | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
   Failed-Message-Header | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
   Key-Id                | 0 | 0 | 0 | 0 | 0 | 0 | 0 |0-1|0-1| 0 | 0 |
   Nonce                 | 0 | 0 | 0 |0-1|0-1| 0 | 0 | 0 | 0 | 0 | 0 |
   Result-Code           | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 0 | 0 |
   Session-Lifetime      | 0 | 0 | 0 | 0 | 0 | 0 | 0 |0-1| 0 | 0 | 0 |
   Termination-Cause     | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
   ----------------------+---+---+---+---+---+---+---+---+---+---+---+

                   Figure 9: AVP Occurrence Table (1/2)







Forsberg, et al.          Expires June 9, 2007                 [Page 36]

Internet-Draft                    PANA                     December 2006


                         +-----------------------+
                         |     Message Type      |
                         +---+---+---+---+---+---+
   Attribute Name        |PTR|PTA|PER|PEA|PUR|PUA|
   ----------------------+---+---+---+---+---+---+
   Algorithm             | 0 | 0 | 0 | 0 | 0 | 0 |
   AUTH                  |0-1|0-1|0-1|0-1|0-1|0-1|
   EAP-Payload           | 0 | 0 | 0 | 0 | 0 | 0 |
   Failed-AVP            | 0 | 0 | 0+| 0 | 0 | 0 |
   Failed-Message-Header | 0 | 0 | 1 | 0 | 0 | 0 |
   Key-Id                | 0 | 0 | 0 | 0 | 0 | 0 |
   Nonce                 | 0 | 0 | 0 | 0 | 0 | 0 |
   Result-Code           | 0 | 0 | 1 | 0 | 0 | 0 |
   Session-Lifetime      | 0 | 0 | 0 | 0 | 0 | 0 |
   Termination-Cause     | 1 | 0 | 0 | 0 | 0 | 0 |
   ----------------------+---+---+---+---+---+---+

                   Figure 10: AVP Occurrence Table (2/2)

8.1.  Algorithm AVP

   The Algorithm AVP (AVP Code 1) is used for conveying the
   pseudo-random function to derive PANA_AUTH_KEY as well as the
   integrity algorithm to compute an AUTH AVP.  The AVP data is of type
   Unsigned32.

   The first 16-bit of the AVP data contains an IKEv2 Transform ID of
   Transform Type 2 [RFC4306] corresponding to the key derivation
   function.

   The last 16-bit of the AVP data contains an IKEv2 Transform ID of
   Transform Type 3 [RFC4306] for the integrity algorithm.

   All PANA implementations MUST support PRF_HMAC_SHA1 (2) [RFC2104] for
   the key derivation algorithm and AUTH_HMAC_SHA1_160 (7) [RFC4595]
   corresponding to the integrity algorithm.

8.2.  AUTH AVP

   The AUTH AVP (AVP Code 2) is used to integrity protect PANA messages.
   The AVP data payload contains the Message Authentication Code encoded
   in network byte order.  The AVP length varies depending on the
   integrity algorithm specified in an Algorithm AVP.

8.3.  EAP-Payload AVP

   The EAP-Payload AVP (AVP Code 3) is used for encapsulating the actual
   EAP message that is being exchanged between the EAP peer and the EAP



Forsberg, et al.          Expires June 9, 2007                 [Page 37]

Internet-Draft                    PANA                     December 2006


   authenticator.  The AVP data is of type OctetString.

8.4.  Failed-AVP AVP

   The Failed-AVP AVP (AVP Code 4) provides debugging information in
   cases where a message is rejected or not fully processed due to
   erroneous information in a specific AVP.  The AVP data is of type
   Grouped.  The format of the Failed-AVP AVP using the ABNF grammar
   defined in [RFC3588] for Grouped AVP is as follows.

           <Failed-AVP> ::= < AVP Header: 4 >
                         1* {AVP}

   In case of a failed grouped AVP, the Failed-AVP contains the whole
   grouped AVP.  In case of a failed AVP inside a grouped AVP, the
   Failed-AVP contains the single offending AVP.

8.5.  Failed-Message-Header AVP

   The Failed-Message-Header AVP (AVP Code 5) provides debugging
   information in cases where a message is rejected or not fully
   processed due to erroneous information in the message.  The AVP data
   is of type OctetString.  The AVP data contains the 16-octet header of
   the message that caused the error.

8.6.  Key-Id AVP

   The Key-Id AVP (AVP Code 6) is of type Integer32, and contains an MSK
   identifier.  The MSK identifier is assigned by PAA and MUST be unique
   within the PANA session.

8.7.  Nonce AVP

   The Nonce AVP (AVP Code 7) carries a randomly chosen value that is
   used in cryptographic key computations.  The recommendations in
   [RFC4086] apply with regard to generation of random values.  The AVP
   data is of type OctetString and it contains a randomly generated
   value in opaque format.  The data length MUST be between 8 and 256
   octets inclusive.

   The length of the nonces are determined based on the available
   pseudo-random functions (PRFs) and the degree of trust placed into
   the two PaC and the PAA to compute random values.  The length of the
   random value for the nonce is determined whether

   1.  The PaC and the PAA each are likely to be able to compute a
       random nonce (according to [RFC4086]).  The length of the nonce
       has to be 1/2 the length of the PRF key (e.g., 10 octets in the



Forsberg, et al.          Expires June 9, 2007                 [Page 38]

Internet-Draft                    PANA                     December 2006


       case of HMAC-SHA1).

   2.  The PaC and the PAA each are not trusted with regard to the
       computation a random nonce (according to [RFC4086]).  The length
       of the nonce has to have the full length of the PRF key (e.g., 20
       octets in the case of HMAC-SHA1).

   Furthermore, the strongest available PRF available for PANA has to be
   considered in this computation.  Currently, only a single PRF (namely
   HMAC-SHA1) is available and therefore the maximum output length is 20
   octets).  The recommended maximum length of the nonce value is
   therefore currently 20 octets.

8.8.  Result-Code AVP

   The Result-Code AVP (AVP Code 8) is of type Unsigned32 and indicates
   whether an EAP authentication was completed successfully or whether
   an error occurred.  Result-Code AVP values are described in the
   subsequent sections.

8.8.1.  Authentication Results Codes

   These result code values inform the PaC about the authentication and
   authorization result.  The authentication result and authorization
   result can be different as described below, but only one result is
   returned to the PaC.  These codes are used with PANA-Bind-Request
   message.

   PANA_SUCCESS                               0

      Both authentication and authorization processes are successful.

   PANA_AUTHENTICATION_REJECTED               1

      Authentication has failed.  When this error is returned, it is
      assumed that authorization is automatically failed.

   PANA_AUTHORIZATION_REJECTED                2

      The authorization process has failed.  This error could occur when
      authorization is rejected by a AAA server or rejected locally by a
      PAA, even if the authentication procedure has succeeded.

8.8.2.  Protocol Error Result Codes

   These codes are used with PANA-Error-Request messages.  Unless stated
   otherwise, they can be generated by both the PaC and the PAA.




Forsberg, et al.          Expires June 9, 2007                 [Page 39]

Internet-Draft                    PANA                     December 2006


   PANA_MESSAGE_UNSUPPORTED                1001

      Message type not recognized or supported.

   PANA_UNABLE_TO_DELIVER                  1002

      The PAA was unable to deliver the EAP payload to the
      authentication server.  Only the PAA can generate this code.

   PANA_INVALID_HDR_BITS                   1003

      A message was received whose bits in the PANA message header were
      either set to an invalid combination, or to a value that is
      inconsistent with the message type definition.

   PANA_INVALID_AVP_FLAGS                  1004

      A message was received that included an AVP whose flag bits are
      set to an unrecognized value, or that is inconsistent with the
      AVP's definition.

   PANA_AVP_UNSUPPORTED                    1005

      The received message contained an AVP that is not recognized or
      supported and was marked with the Mandatory bit.  A PANA message
      with this error MUST contain one or more Failed-AVP AVP containing
      the AVPs that caused the failure.

   PANA_INVALID_AVP_DATA                   1006

      The message contained an AVP with an invalid value in its data
      portion.  A PANA message indicating this error MUST include the
      offending AVPs within a Failed-AVP AVP.

   PANA_MISSING_AVP                        1007

      The message did not contain an AVP that is required by the message
      type definition.  If this value is sent in the Result-Code AVP, a
      Failed-AVP AVP SHOULD be included in the message.  The Failed-AVP
      AVP MUST contain an example of the missing AVP complete with the
      Vendor-Id if applicable.  The value field of the missing AVP
      should be of correct minimum length and contain zeroes.

   PANA_RESOURCES_EXCEEDED                 1008

      A message was received that cannot be authorized because the
      client has already expended allowed resources.  An example of this
      error condition is a client that is restricted to one PANA session



Forsberg, et al.          Expires June 9, 2007                 [Page 40]

Internet-Draft                    PANA                     December 2006


      and attempts to establish a second session.  Only the PAA can
      generate this code.

   PANA_CONTRADICTING_AVPS                 1009

      The PAA has detected AVPs in the message that contradicted each
      other, and is not willing to provide service to the client.  One
      or more Failed-AVP AVPs MUST be present, containing the AVPs that
      contradicted each other.  Only the PAA can generate this code.

   PANA_AVP_NOT_ALLOWED                    1010

      A message was received with an AVP that MUST NOT be present.  The
      Failed-AVP AVP MUST be included and contain a copy of the
      offending AVP.

   PANA_AVP_OCCURS_TOO_MANY_TIMES          1011

      A message was received that included an AVP that appeared more
      often than permitted in the message definition.  The Failed-AVP
      AVP MUST be included and contain a copy of the first instance of
      the offending AVP that exceeded the maximum number of occurrences.

   PANA_UNSUPPORTED_VERSION                1012

      This error is returned when a message was received, whose version
      number is unsupported.

   PANA_UNABLE_TO_COMPLY                   1013

      This error is returned when a request is rejected for unspecified
      reasons.  For example, when an EAP authentication fails at an EAP
      pass-through authenticator without passing an EAP Failure message
      to the PAA, a Result-Code AVP with this error code is carried in
      the PANA-Error-Request message.

   PANA_INVALID_AVP_LENGTH 1014

      The message contained an AVP with an invalid length.  The
      PANA-Error-Request message indicating this error MUST include the
      offending AVPs within a Failed-AVP AVP.

   PANA_INVALID_MESSAGE_LENGTH             1015

      This error is returned when a message is received with an invalid
      message length.





Forsberg, et al.          Expires June 9, 2007                 [Page 41]

Internet-Draft                    PANA                     December 2006


8.9.  Session-Lifetime AVP

   The Session-Lifetime AVP (AVP Code 9) contains the number of seconds
   remaining before the current session is considered expired.  The AVP
   data is of type Unsigned32.

8.10.  Termination-Cause AVP

   The Termination-Cause AVP (AVP Code 10) is used for indicating the
   reason why a session is terminated by the requester.  The AVP data is
   of type Enumerated.  The following Termination-Cause data values are
   used with PANA.

   LOGOUT                   1  (PaC -> PAA)

      The client initiated a disconnect

   ADMINISTRATIVE           4  (PAA -> PaC)

      The client was not granted access, or was disconnected, due to
      administrative reasons.

   SESSION_TIMEOUT          8  (PAA -> PaC)

      The session has timed out, and service has been terminated.


























Forsberg, et al.          Expires June 9, 2007                 [Page 42]

Internet-Draft                    PANA                     December 2006


9.  Retransmission Timers

   The PANA protocol provides retransmissions for the
   PANA-Client-Initiation message and all request messages.

   PANA retransmission timers are based on the model used in DHCPv6
   [RFC3315].  Variables used here are also borrowed from this
   specification.  PANA is a request response like protocol.  The
   message exchange terminates when the request sender successfully
   receives the appropriate answer, or when a protected
   PANA-Error-Request message for the request is received, or when the
   message exchange is considered to have failed according to the
   retransmission mechanism described below.

   The retransmission behavior is controlled and described by the
   following variables:

         RT     Retransmission timeout

         IRT    Initial retransmission time

         MRC    Maximum retransmission count

         MRT    Maximum retransmission time

         MRD    Maximum retransmission duration

         RAND   Randomization factor

   With each message transmission or retransmission, the sender sets RT
   according to the rules given below.  If RT expires before the message
   exchange terminates, the sender recomputes RT and retransmits the
   message.

   Each of the computations of a new RT include a randomization factor
   (RAND), which is a random number chosen with a uniform distribution
   between -0.1 and +0.1.  The randomization factor is included to
   minimize synchronization of messages.

   The algorithm for choosing a random number does not need to be
   cryptographically sound.  The algorithm SHOULD produce a different
   sequence of random numbers from each invocation.

   RT for the first message transmission is based on IRT:

         RT = IRT + RAND*IRT

   RT for each subsequent message transmission is based on the previous



Forsberg, et al.          Expires June 9, 2007                 [Page 43]

Internet-Draft                    PANA                     December 2006


   value of RT:

         RT = 2*RTprev + RAND*RTprev

   MRT specifies an upper bound on the value of RT (disregarding the
   randomization added by the use of RAND).  If MRT has a value of 0,
   there is no upper limit on the value of RT.  Otherwise:

         if (RT > MRT)
            RT = MRT + RAND*MRT

   MRC specifies an upper bound on the number of times a sender may
   retransmit a message.  Unless MRC is zero, the message exchange fails
   once the sender has transmitted the message MRC times.

   MRD specifies an upper bound on the length of time a sender may
   retransmit a message.  Unless MRD is zero, the message exchange fails
   once MRD seconds have elapsed since the client first transmitted the
   message.

   If both MRC and MRD are non-zero, the message exchange fails whenever
   either of the conditions specified in the previous two paragraphs are
   met.

   If both MRC and MRD are zero, the client continues to transmit the
   message until it receives a response.

9.1.  Transmission and Retransmission Parameters

   This section presents a table of values used to describe the message
   retransmission behavior of PANA requests that are retransmitted
   (REQ_*) and PANA-Client-Initiation message (PCI_*).  The table shows
   default values.

           Parameter       Default   Description
           ------------------------------------------------
           PCI_IRT           1 sec   Initial PCI timeout.
           PCI_MRT         120 secs  Max PCI timeout value.
           PCI_MRC           0       Configurable.
           PCI_MRD           0       Configurable.

           REQ_IRT           1 sec   Initial Request timeout.
           REQ_MRT          30 secs  Max Request timeout value.
           REQ_MRC          10       Max Request retry attempts.
           REQ_MRD           0       Configurable.

   So for example the first RT for the PBR message is calculated using
   REQ_IRT as the IRT:



Forsberg, et al.          Expires June 9, 2007                 [Page 44]

Internet-Draft                    PANA                     December 2006


           RT = REQ_IRT + RAND*REQ_IRT


















































Forsberg, et al.          Expires June 9, 2007                 [Page 45]

Internet-Draft                    PANA                     December 2006


10.  IANA Considerations

   This section provides guidance to the Internet Assigned Numbers
   Authority (IANA) regarding registration of values related to the PANA
   protocol, in accordance with BCP 26 [IANA].  The following policies
   are used here with the meanings defined in BCP 26: "Private Use",
   "First Come First Served", "Expert Review", "Specification Required",
   "IETF Consensus", "Standards Action".

   This section explains the criteria to be used by the IANA for
   assignment of numbers within namespaces defined within this document.

   For registration requests where a Designated Expert should be
   consulted, the responsible IESG area director should appoint the
   Designated Expert.  For Designated Expert with Specification
   Required, the request is posted to the PANA WG mailing list (or, if
   it has been disbanded, a successor designated by the Area Director)
   for comment and review, and MUST include a pointer to a public
   specification.  Before a period of 30 days has passed, the Designated
   Expert will either approve or deny the registration request and
   publish a notice of the decision to the PANA WG mailing list or its
   successor.  A denial notice must be justified by an explanation and,
   in the cases where it is possible, concrete suggestions on how the
   request can be modified so as to become acceptable.

10.1.  PANA UDP Port Number

   PANA uses one well-known UDP port number (Section 4.1, Section 4.3
   and Section 6.1), which needs to be assigned by the IANA.

10.2.  PANA Message Header

   As defined in Section 6.2, the PANA message header contains two
   fields that requires IANA namespace management; the Version, Message
   Type and Flags fields.

10.2.1.  Version

   The Version namespace is used to identify PANA versions.  The Version
   values are assigned by Standards Action [IANA].  This document
   defines the Version 1.

10.2.2.  Message Type

   The Message Type namespace is used to identify PANA messages.  Values
   0-65,519 are for permanent, standard message types, allocated by IETF
   Consensus [IANA].  This document defines the Message Types 1-9.  See
   Section 7.1 through Section 7.17 for the assignment of the namespace



Forsberg, et al.          Expires June 9, 2007                 [Page 46]

Internet-Draft                    PANA                     December 2006


   in this specification.

   The values 65,520 and 65,535 (hexadecimal values 0xfff0 - 0xffff) are
   reserved for experimental messages.  As these codes are only for
   experimental and testing purposes, no guarantee is made for
   interoperability between the communicating PaC and PAA using
   experimental commands, as outlined in [IANA-EXP].

10.2.3.  Flags

   There are 16 bits in the Flags field of the PANA message header.
   This document assigns bit 0 ('R'equest).  The remaining bits MUST
   only be assigned via a Standards Action [IANA].

10.3.  AVP Header

   As defined in Section 6.3, the AVP header contains three fields that
   requires IANA namespace management; the AVP Code, AVP Flags and
   Vendor-Id fields where only the AVP Code and AVP Flags create new
   namespaces.

10.3.1.  AVP Code

   The 16-bit AVP Code namespace is used to identify attributes.  There
   are multiple namespaces.  Vendors can have their own AVP Codes
   namespace which will be identified by their Vendor-ID (also known as
   Enterprise-Number) and they control the assignments of their
   vendor-specific AVP codes within their own namespace.  The absence of
   a Vendor-ID identifies the IETF IANA controlled AVP Codes namespace.
   The AVP Codes and sometimes also possible values in an AVP are
   controlled and maintained by IANA.

   AVP Code 0 is not used.  This document defines the AVP Codes 1-10.
   See Section 8.1 through Section 8.10 for the assignment of the
   namespace in this specification.

   AVPs may be allocated following Designated Expert with Specification
   Required [IANA] or Standards Action.  AVPs with 'M' bit set MUST be
   allocated by Standards Action.

   Note that PANA defines a mechanism for Vendor-Specific AVPs, where
   the Vendor-Id field in the AVP header is set to a non-zero value.
   Vendor-Specific AVPs codes are for Private Use and should be
   encouraged instead of allocation of global attribute types, for
   functions specific only to one vendor's implementation of PANA, where
   no interoperability is deemed useful.  Where a Vendor-Specific AVP is
   implemented by more than one vendor, allocation of global AVPs should
   be encouraged instead.



Forsberg, et al.          Expires June 9, 2007                 [Page 47]

Internet-Draft                    PANA                     December 2006


10.3.2.  Flags

   There are 16 bits in the AVP Flags field of the AVP header, defined
   in Section 6.3.  This document assigns bit 0 ('V'endor Specific) and
   bit 1 ('M'andatory).  The remaining bits should only be assigned via
   a Standards Action .

10.4.  AVP Values

   Certain AVPs in PANA define a list of values with various meanings.
   For attributes other than those specified in this section, adding
   additional values to the list can be done on a First Come, First
   Served basis by IANA [IANA].

10.4.1.  Result-Code AVP Values

   As defined in Section 8.8.1 and Section 8.8.2 the Result-Code AVP
   (AVP Code 8) defines the values 0-3 and 1001-1015.

   All remaining values are available for assignment via IETF Consensus
   [IANA].

10.4.2.  Termination-Cause AVP Values

   As defined in Section 8.10, the Termination-Cause AVP (AVP Code 10)
   defines the values 1, 4 and 8.

   All remaining values are available for assignment via IETF Consensus
   [IANA].






















Forsberg, et al.          Expires June 9, 2007                 [Page 48]

Internet-Draft                    PANA                     December 2006


11.  Security Considerations

   The PANA protocol defines a UDP-based EAP encapsulation that runs
   between two IP-enabled nodes on the same IP link.  Various security
   threats that are relevant to a protocol of this nature are outlined
   in [RFC4016].  Security considerations stemming from the use of EAP
   and EAP methods are discussed in [RFC3748] [I-D.ietf-eap-keying].
   This section provides a discussion on the security-related issues
   that are related to PANA framework and protocol design.

   An important element in assessing security of PANA design and
   deployment in a network is the presence of lower-layer (physical and
   link-layer) security.  In the context of this document, lower-layers
   are said to be secure if they can prevent eavesdropping and spoofing
   of packets.  Examples of such networks are physically-secured DSL
   networks and 3GPP2 networks with cryptographically-secured cdma2000
   link-layer.  In these examples, the lower-layer security is enabled
   even before running the first PANA-based authentication.  In the
   absence of such a pre-established secure channel, one needs to be
   created in conjunction with PANA using a link-layer or network-layer
   cryptographic mechanism (e.g., IPsec).

11.1.  General Security Measures

   PANA provides multiple mechanisms to secure a PANA session.

   PANA messages carry sequence numbers, which are monotonically
   incremented by 1 with every new request message.  These numbers are
   randomly initialized at the beginning of the session, and verified
   against expected numbers upon receipt.  A message whose sequence
   number is different than the expected one is silently discarded.  In
   addition to accomplishing orderly delivery of EAP messages and
   duplicate elimination, this scheme also helps prevent an adversary
   spoof messages to disturb ongoing PANA and EAP sessions unless it can
   also eavesdrop to synchronize on the expected sequence number.
   Furthermore, impact of replay attacks is reduced as any stale message
   (i.e., a request or answer with an unexpected sequence number) and
   any duplicate answer are immediately discarded, and a duplicate
   request can trigger transmission of the cached answer (i.e., no need
   to process the request and generate a new answer).

   The PANA framework defines EP which is ideally located on a network
   device that can filter traffic from the PaCs before the traffic
   enters the Internet/intranet.  A set of filters can be used to
   discard unauthorized packets, such as a PANA-Start-Request message
   that is received from the segment of the access network where only
   the PaCs are supposed to be connected.




Forsberg, et al.          Expires June 9, 2007                 [Page 49]

Internet-Draft                    PANA                     December 2006


   The protocol also provides authentication and integrity protection to
   PANA messages when the used EAP method can generate cryptographic
   session keys.  A PANA SA is generated based on the MSK exported by
   the EAP method.  This SA is used for generating an AUTH AVP to
   protect the PANA message header and payload (including the complete
   EAP message).

   The cryptographic protection prevents an adversary from acting as a
   man-in-the-middle, injecting messages, replaying messages and
   modifying the content of the exchanged messages.  Any packet that
   fails to pass the AUTH verification is silently discarded.  The
   earliest this protection can be enabled is when the very first
   PANA-Bind-Request message that signals a successful authentication is
   generated.  Starting with these messages, any subsequent PANA message
   until the session gets torn down can be cryptographically protected.

   The lifetime of the PANA SA is set to PANA session lifetime which is
   bounded by the authorization lifetime granted by the authentication
   server.  An implementation MAY add a tolerance period to that value.
   Unless the PANA session is extended by executing another EAP
   authentication, the PANA SA is removed when the current session
   expires.

   The ability to use cryptographic protection within PANA is determined
   by the used EAP method, which is generally dictated by the deployment
   environment.  Insecure lower-layers necessitate use of key-generating
   EAP methods.  In networks where lower-layers are already secured,
   cryptographic protection of PANA messages is not necessary.

11.2.  Handshake

   The handshake phase is vulnerable to spoofing attacks as these
   messages are not authenticated and integrity protected.  In order to
   prevent very basic denial-of service attacks an adversary should not
   be able to cause state creation by sending PANA-Client-Initiation
   messages to the PAA.  This protection is achieved by allowing the
   responder (PAA) to create as less amount of state as possible in the
   first round of message exchange.  However, it is difficult to prevent
   all spoofing attacks in the handshake phase entirely.

   In networks where lower-layers are not secured prior to running PANA,
   the capability discovery enabled through inclusion of an Algorithm
   AVP in a PANA-Start-Request message is susceptible to spoofing
   leading to denial-of service attacks.  Therefore, usage of this AVP
   during the handshake phase in such insecure networks is NOT
   RECOMMENDED.  The same AVP is delivered via an integrity-protected
   PANA-Bind-Request upon successful authentication.




Forsberg, et al.          Expires June 9, 2007                 [Page 50]

Internet-Draft                    PANA                     December 2006


11.3.  EAP Methods

   Eavesdropping EAP messages might cause problems when the EAP method
   is weak and enables dictionary or replay attacks or even allows an
   adversary to learn the long-term password directly.  Furthermore, if
   the optional EAP Response/Identity payload is used then it allows the
   adversary to learn the identity of the PaC.  In such a case a privacy
   problem is prevalent.

   To prevent these threats, [I-D.ietf-pana-framework] suggests using
   proper EAP methods for particular environments.  Depending on the
   deployment environment an EAP authentication method which supports
   user identity confidentiality, protection against dictionary attacks
   and session key establishment must be used.  It is therefore the
   responsibility of the network operators and users to choose a proper
   EAP method.

11.4.  Cryptographic Keys

   When the EAP method exports an MSK, this key is used to produce a
   PANA SA with PANA_AUTH_KEY with a distinct key ID.  The PANA_AUTH_KEY
   is unique to the PANA session, and takes PANA-based nonce values into
   computation to cryptographically separate itself from the MSK.

   The PANA_AUTH_KEY is solely used for authentication and integrity
   protection of the PANA messages within the designated session.

   The PANA SA lifetime is bounded by the MSK lifetime.  Another
   execution of EAP method yields in a new MSK, and updates the PANA SA,
   PANA_AUTH_KEY and key ID.

11.5.  Per-packet Ciphering

   Networks that are not secured at the lower-layers prior to running
   PANA can rely on enabling per-packet data traffic ciphering upon
   successful PANA SA establishment.  The PANA framework allows
   generation of cryptographic keys from the PANA SA and use the keys
   with a secure association protocol to enable per-packet cryptographic
   protection such as link-layer or IPsec-based ciphering
   [I-D.ietf-pana-ipsec].  These mechanisms ultimately establish a
   cryptographic binding between the data traffic generated by and for a
   client and the authenticated identity of the client.  Data traffic
   must be minimally data origin authenticated, replay and integrity
   protected, and optionally encrypted.  How cryptographic keys are
   generated from the PANA SA and used with a secure association
   protocol is outside the scope of this document.





Forsberg, et al.          Expires June 9, 2007                 [Page 51]

Internet-Draft                    PANA                     December 2006


11.6.  PAA-to-EP Communication

   The PANA framework allows separation of PAA from EP.  SNMPv3
   [I-D.ietf-pana-snmp] MAY be used between the PAA and EP for
   provisioning authorized PaC information on the EP.  This exchange
   MUST be always physically or cryptographically protected for
   authentication, integrity and replay protection.

11.7.  Liveness Test

   A PANA session is associated with a session lifetime.  The session is
   terminated unless it is refreshed by a new round of EAP
   authentication before it expires.  Therefore, at the latest a
   disconnected client can be detected when its session expires.  A
   disconnect may also be detected earlier by using PANA ping messages.
   A request message can be generated by either PaC or PAA at any time
   and the peer must respond with an answer message.  A successful
   round-trip of this exchange is a simple verification that the peer is
   alive.

   This test can be engaged when there is a possibility that the peer
   might have disconnected (e.g., after the discontinuation of data
   traffic for an extended period of time).  Periodic use of this
   exchange as a keep-alive requires additional care as it might result
   in congestion and hence false alarms.

   This exchange is cryptographically protected when a PANA SA is
   available in order to prevent threats associated with the abuse of
   this functionality.

   Any valid PANA answer message received in response to a recently sent
   request message can be taken as an indication of peer's liveness.
   The PaC or PAA MAY forgo sending an explicit PANA-Ping-Request if a
   recent exchange has already confirmed that the peer is alive.

11.8.  IP Address Spoofing

   PANA does not provide any means to prove ownership of the IP address
   presented by the PaC.  Hence, an authorized PaC can launch a redirect
   attack by spoofing a victim's IP address.  This problem and its
   solution are outside the scope of PANA.

11.9.  Early Termination of a Session

   The PANA protocol supports the ability for both the PaC and the PAA
   to transmit a tear-down message before the session lifetime expires.
   This message causes state removal, a stop of the accounting procedure
   and removes the installed per-PaC state on the EP(s).  This message



Forsberg, et al.          Expires June 9, 2007                 [Page 52]

Internet-Draft                    PANA                     December 2006


   is cryptographically protected when PANA SA is present.


















































Forsberg, et al.          Expires June 9, 2007                 [Page 53]

Internet-Draft                    PANA                     December 2006


12.  Acknowledgments

   We would like to thank Mark Townsley, Jari Arkko, Mohan
   Parthasarathy, Julien Bournelle, Rafael Marin Lopez, Pasi Eronen,
   Randy Turner, Erik Nordmark, Lionel Morand, Avi Lior, Susan Thomson,
   Giaretta Gerardo, Joseph Salowey, Sasikanth Bharadwaj, Spencer
   Dawkins, Tom Yu, Bernard Aboba and all members of the PANA working
   group for their valuable comments to this document.











































Forsberg, et al.          Expires June 9, 2007                 [Page 54]

Internet-Draft                    PANA                     December 2006


13.  References

13.1.  Normative References

   [RFC2104]  Krawczyk, H., Bellare, M., and R. Canetti, "HMAC: Keyed-
              Hashing for Message Authentication", RFC 2104,
              February 1997.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, March 1997.

   [RFC2234]  Crocker, D., Ed. and P. Overell, "Augmented BNF for Syntax
              Specifications: ABNF", RFC 2234, November 1997.

   [RFC3588]  Calhoun, P., Loughney, J., Guttman, E., Zorn, G., and J.
              Arkko, "Diameter Base Protocol", RFC 3588, September 2003.

   [RFC3748]  Aboba, B., Blunk, L., Vollbrecht, J., Carlson, J., and H.
              Levkowetz, "Extensible Authentication Protocol (EAP)",
              RFC 3748, June 2004.

   [RFC4086]  Eastlake, D., Schiller, J., and S. Crocker, "Randomness
              Requirements for Security", BCP 106, RFC 4086, June 2005.

   [RFC4595]  Maino, F. and D. Black, "Use of IKEv2 in the Fibre Channel
              Security Association Management Protocol", RFC 4595,
              July 2006.

   [I-D.ietf-dhc-paa-option]
              Morand, L., "DHCP options for PANA Authentication Agents",
              draft-ietf-dhc-paa-option-04 (work in progress),
              September 2006.

   [IANA]     Narten, T. and H. Alvestrand, "Guidelines for Writing an
              IANA Considerations Section in RFCs",  BCP 26, RFC 2434,
              October 1998.

13.2.  Informative References

   [RFC3315]  Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,
              and M. Carney, "Dynamic Host Configuration Protocol for
              IPv6 (DHCPv6)", RFC 3315, July 2003.

   [RFC4016]  Parthasarathy, M., "Protocol for Carrying Authentication
              and Network Access (PANA) Threat Analysis and Security
              Requirements", RFC 4016, March 2005.

   [RFC4058]  Yegin, A., Ohba, Y., Penno, R., Tsirtsis, G., and C. Wang,



Forsberg, et al.          Expires June 9, 2007                 [Page 55]

Internet-Draft                    PANA                     December 2006


              "Protocol for Carrying Authentication for Network Access
              (PANA) Requirements", RFC 4058, May 2005.

   [RFC4137]  Vollbrecht, J., Eronen, P., Petroni, N., and Y. Ohba,
              "State Machines for Extensible Authentication Protocol
              (EAP) Peer and Authenticator", RFC 4137, August 2005.

   [RFC4306]  Kaufman, C., "Internet Key Exchange (IKEv2) Protocol",
              RFC 4306, December 2005.

   [I-D.ietf-eap-keying]
              Aboba, B., "Extensible Authentication Protocol (EAP) Key
              Management Framework", draft-ietf-eap-keying-15 (work in
              progress), October 2006.

   [I-D.ietf-pana-ipsec]
              Parthasarathy, M., "PANA Enabling IPsec based Access
              Control", draft-ietf-pana-ipsec-07 (work in progress),
              July 2005.

   [I-D.ietf-pana-framework]
              Jayaraman, P., "Protocol for Carrying Authentication for
              Network Access (PANA) Framework",
              draft-ietf-pana-framework-07 (work in progress),
              August 2006.

   [I-D.ietf-pana-snmp]
              Mghazli, Y., "SNMP usage for PAA-EP interface",
              draft-ietf-pana-snmp-06 (work in progress), June 2006.

   [ianaweb]  IANA, "Number assignment",  http://www.iana.org.

   [IANA-EXP]
              Narten, T., "Assigning Experimental and Testing Numbers
              Considered Useful",  BCP 82, RFC 3692, January 2004.
















Forsberg, et al.          Expires June 9, 2007                 [Page 56]

Internet-Draft                    PANA                     December 2006


Authors' Addresses

   Dan Forsberg
   Nokia Research Center
   P.O. Box 407
   FIN-00045 NOKIA GROUP
   Finland

   Phone: +358 50 4839470
   Email: dan.forsberg@nokia.com


   Yoshihiro Ohba
   Toshiba America Research, Inc.
   1 Telcordia Drive
   Piscataway, NJ  08854
   USA

   Phone: +1 732 699 5305
   Email: yohba@tari.toshiba.com


   Basavaraj Patil
   Nokia
   6000 Connection Dr.
   Irving, TX  75039
   USA

   Phone: +1 972-894-6709
   Email: Basavaraj.Patil@nokia.com


   Hannes Tschofenig
   Siemens Corporate Technology
   Otto-Hahn-Ring 6
   81739 Munich
   Germany

   Email: Hannes.Tschofenig@siemens.com












Forsberg, et al.          Expires June 9, 2007                 [Page 57]

Internet-Draft                    PANA                     December 2006


   Alper E. Yegin
   Samsung Advanced Institute of Technology
   Istanbul,
   Turkey

   Phone: +90 538 719 0181
   Email: alper01.yegin@partner.samsung.com












































Forsberg, et al.          Expires June 9, 2007                 [Page 58]

Internet-Draft                    PANA                     December 2006


Full Copyright Statement

   Copyright (C) The Internet Society (2006).

   This document is subject to the rights, licenses and restrictions
   contained in BCP 78, and except as set forth therein, the authors
   retain all their rights.

   This document and the information contained herein are provided on an
   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS
   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET
   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED
   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.


Intellectual Property

   The IETF takes no position regarding the validity or scope of any
   Intellectual Property Rights or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; nor does it represent that it has
   made any independent effort to identify any such rights.  Information
   on the procedures with respect to rights in RFC documents can be
   found in BCP 78 and BCP 79.

   Copies of IPR disclosures made to the IETF Secretariat and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementers or users of this
   specification can be obtained from the IETF on-line IPR repository at
   http://www.ietf.org/ipr.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to implement
   this standard.  Please address the information to the IETF at
   ietf-ipr@ietf.org.


Acknowledgment

   Funding for the RFC Editor function is provided by the IETF
   Administrative Support Activity (IASA).





Forsberg, et al.          Expires June 9, 2007                 [Page 59]

