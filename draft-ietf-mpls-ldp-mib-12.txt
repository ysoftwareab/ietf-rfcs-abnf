
Network Working Group                                       J. Cucchiara
Internet-Draft                                                     Artel
Expires December 2003                                       H. Sjostrand
                                                            IP Unplugged
                                                              J. Luciani
                                                              Consultant
                                                               June 2003

                   Definitions of Managed Objects for
  the Multiprotocol Label Switching, Label Distribution Protocol (LDP)

                    <draft-ietf-mpls-ldp-mib-12.txt>

Status of this Memo

   This document is an Internet-Draft and is in full conformance with
   all provisions of Section 10 of RFC 2026.  Internet-Drafts are
   working documents of the Internet Engineering Task Force (IETF), its
   areas, and its working groups.  Note that other groups may also
   distribute working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress".

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html

   Distribution of this document is unlimited.  Please send comments to
   the Multiprotocol Label Switching (mpls) Working Group, mpls@uu.net.

Copyright Notice

   Copyright (C) The Internet Society (2003).  All Rights Reserved.

Abstract

   This memo defines a portion of the Management Information Base (MIB)
   for use with network management protocols in the Internet community.
   In particular, it describes managed objects for the Multiprotocol
   Label Switching, Label Distribution Protocol (LDP).



Expires December 2003                                           [Page 1]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   Table of Contents

   1 Introduction .................................................    3
   2 The Internet-Standard Management Framework ...................    3
   3 Structure of the MIB Modules .................................    4
   3.1 Overview ...................................................    4
   3.2 Future Considerations ......................................    4
   3.3 Interface Indexing .........................................    5
   3.4 Differences from the LDP Specification .....................    5
   3.5 The MPLS-LDP-STD-MIB Module ................................    6
   3.5.1 LDP Scalar Objects .......................................    6
   3.5.2 The LDP Entity Table .....................................    6
   3.5.2.1 Changing Values After Session Establishment ............    7
   3.5.3 The LDP Entity Statistics Table ..........................    8
   3.5.4 The LDP Peer Table .......................................    8
   3.5.5 The LDP Session Table ....................................    9
   3.5.6 The LDP Session Statistics Table .........................    9
   3.5.7 The LDP Hello Adjacency Table ............................    9
   3.5.8 The LDP LSP Table ........................................    9
   3.5.9 The FEC Table ............................................   10
   3.5.10 The LDP Session Peer Address Table ......................   10
   3.6 LDP Notifications ..........................................   10
   3.7 LDP Notification Frequency .................................   11
   4 MPLS Label Distribution Protocol MIB Definitions .............   11
   4.1 The MPLS-LDP-ATM-STD-MIB Module ............................   65
   4.1.1 The LDP Entity ATM Table .................................   65
   4.1.2 The LDP Entity ATM Label Range Table .....................   65
   4.1.3 The LDP ATM Session Table ................................   65
   4.2 The MPLS-LDP-FRAME-RELAY-STD-MIB Module ....................   82
   4.2.1 The LDP Entity Frame Relay  Table ........................   82
   4.2.2 The LDP Entity Frame Relay Label Range Table .............   83
   4.2.3 The LDP Frame Relay Session Table ........................   83
   4.3 The MPLS-LDP-GENERIC-STD-MIB Module ........................   97
   5 Revision History .............................................  105
   5.1 Changes from <draft-ietf-mpls-ldp-mib-11.txt> ..............  105
   5.2 Changes from <draft-ietf-mpls-ldp-mib-10.txt> ..............  105
   5.3 Changes from <draft-ietf-mpls-ldp-mib-09.txt> ..............  105
   5.3.1 Changes based on MIB Doctor Review Comments ..............  106
   5.4 Changes from <draft-ietf-mpls-ldp-mib-08.txt> ..............  110
   5.5 Changes from <draft-ietf-mpls-ldp-mib-07.txt> ..............  113
   5.6 Changes from <draft-ietf-mpls-ldp-mib-06.txt> ..............  114
   5.7 Changes from <draft-ietf-mpls-ldp-mib-05.txt> ..............  114
   5.8 Changes from <draft-ietf-mpls-ldp-mib-04.txt> ..............  116
   5.9 Changes from <draft-ietf-mpls-ldp-mib-03.txt> ..............  118
   5.10 Changes from <draft-ietf-mpls-ldp-mib-02.txt> .............  120
   5.11 Changes from <draft-ietf-mpls-ldp-mib-01.txt> .............  121


Expires December 2003                                           [Page 2]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   5.12 Changes from <draft-ietf-mpls-ldp-mib-00.txt> .............  122
   6 Acknowledgments ..............................................  124
   7 Normative References .........................................  125
   8 Informative References .......................................  127
   9 Security Considerations ......................................  127
   9.1 Security Considerations for MPLS-LDP-STD-MIB ...............  127
   9.2 Security Considerations for MPLS-LDP-ATM-STD-MIB ...........  128
   9.3 Security Considerations for MPLS-LDP-FRAME-RELAY-STD-MIB ...  129
   9.4 Security Considerations for MPLS-LDP-GENERIC-STD-MIB .......  130
   9.5 Additional Security Considerations .........................  130
   10 IANA Considerations .........................................  131
   10.1 IANA Considerations for MPLS-LDP-STD-MIB ..................  131
   10.2 IANA Considerations for MPLS-LDP-ATM-STD-MIB ..............  131
   10.3 IANA Considerations for MPLS-LDP-FRAME-RELAY-STD-MIB ......  131
   10.4 IANA Considerations for MPLS-LDP-GENERIC-STD-MIB ..........  132
   11 Intellectual Property Notice ................................  132
   12 Authors' Addresses ..........................................  132
   13 Full Copyright Statement ....................................  133






























Expires December 2003                                           [Page 3]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


1.  Introduction

   This document defines 4 MIB Modules which together support the
   configuration and monitoring of the Label Distribution Protocol
   (LDP).  The Label Distribution Protocol (LDP) [RFC3036] is one type
   of Multiprotocol Label Switching (MPLS) protocols described in
   [RFC3031] and [RFC3032].  Utilizing all 4 MIB Modules allows an
   operator to configure LDP sessions using 3 different Layer 2 media.
   The Layer 2 media supported by the MIB Modules are Ethernet, ATM and
   Frame Relay as described in [RFC3036], [RFC3034] and [RFC3035].

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].


2.  The Internet-Standard Management Framework

   For a detailed overview of the documents that describe the current
   Internet-Standard Management Framework, please refer to section 7 of
   RFC 3410 [RFC3410].

   Managed objects are accessed via a virtual information store, termed
   the Management Information Base or MIB.  MIB objects are generally
   accessed through the Simple Network Management Protocol (SNMP).
   Objects in the MIB are defined using the mechanisms defined in the
   Structure of Management Information (SMI).  This memo specifies a MIB
   module that is compliant to the SMIv2, which is described in STD 58,
   RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580
   [RFC2580].


















Expires December 2003                                           [Page 4]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


3.  Structure of the MIB Modules

   This section describes the structure of the LDP MIB Modules.


3.1.  Overview

   There are 4 MIB Modules in this document.  These MIB Modules are the
   MPLS-LDP-STD-MIB, the MPLS-LDP-GENERIC-STD-MIB, the MPLS-LDP-ATM-STD-
   MIB and the MPLS-LDP-FRAME-RELAY-STD-MIB.  The MPLS-LDP-STD-MIB
   defines objects which are common to all LDP implementations.  The
   MPLS-LDP-GENERIC-STD-MIB defines Layer 2 Per Platform Label Space
   objects for use with the MPLS-LDP-STD-MIB.  The MPLS-LDP-ATM-STD-MIB
   defines Layer 2 Asynchronous Transfer Mode (ATM) objects for use with
   the MPLS-LDP-STD-MIB.  The MPLS-LDP-FRAME-RELAY-STD-MIB defines Layer
   2 FRAME-RELAY objects for use with the MPLS-LDP-STD-MIB.

   The MPLS-LDP-STD-MIB Module MUST be implemented and at least one of
   the Layer 2 MIB Modules MUST be implemented by an Agent developer on
   an Label Switching Router (LSR) or Label Edge Router (LER).  As an
   example, if an Label Switching Router (LSR) or Label Edge Router
   (LER) implementation intends to support LDP utilizing a Layer 2 of
   Ethernet, then the MPLS-LDP-STD-MIB and the MPLS-LDP-GENERIC-STD-MIB
   Modules MUST implemented.  If an LSR/LER implementation intends to
   support LDP utilizing a Layer 2 of ATM, then the MPLS-LDP-STD-MIB
   Module and the MPLS-LDP-ATM-MIB Module MUST be implemented.  If an
   LSR/LER implementation intends to support LDP utilizing a Layer 2 of
   FRAME-RELAY, then the MPLS-LDP-STD-MIB Module and the MPLS-LDP-FRAME-
   RELAY-STD-MIB Module MUST be implemented.  An LDP implementation that
   utilizes all three Layer 2 media (Ethernet, Frame-Relay, ATM) MUST
   support all 4 MIB Modules.  Each of the Modules will be discussed in
   detail in the following sections.

   There are 2 compliance statements for each MIB Module.  One
   compliance statement is for full compliance which allows both
   configuration and monitoring via SNMP.  The other compliance
   statement is for read-only compliance which allows only monitoring
   via SNMP.


3.2.  Future Considerations

   The LDP Specification [RFC3036] does not specify the use of VPNs or
   multicast for LDP, and thus, objects related to these areas have not
   been included.



Expires December 2003                                           [Page 5]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   [RFC2684] does not describe VP merge capability and so this feature
   has not been included.

   These areas need to be specified in the LDP Specification or other
   specifications prior to being added in this or any other MIB
   document.


3.3.  Interface Indexing

   Interface Indexes as specified in [RFC2863] are used in these MIB
   Modules.  The descriptions of the ifIndexes denote which ifIndex is
   being used.  The use of ifIndex is for actual existing connections.


3.4.  Differences from the LDP Specification

   Currently, there are 3 differences between this specification and the
   LDP Specification.  As described in the Introduction, this document
   is almost entirely based on the LDP specification.  The differences
   are documented here.

   The first difference is that the LDP Entity Table contains some
   DEFVAL clauses which are not specified explicitly in the LDP
   Specification.  These values, although not documented in the LDP
   Specification, are widely used by existing LDP MIB implementations
   and thus, have been adopted within this MPLS-LDP-STD-MIB module.
   Please note, they can certainly be changed during row creation or a
   subsequent SET request.

   A second difference is the mplsLdpEntityConfGenericLRTable in the
   MPLS-LDP-GENERIC-STD-MIB Module.  This table, although provided as a
   way to reserve a range of generic labels, does not exist in the LDP
   Specification.  It was added to the MIB due to a request from the
   working group and because this table was considered useful for
   reserving a range of generic labels.

   The third difference is documented by the TEXTUAL-CONVENTION,
   MplsAtmVcIdentifier which is in the MPLS-TC-MIB [MPLSTCMIB].  This TC
   was added to restrict vci values to be greater than 31 as described
   in RFC 3035 [RFC3035].







Expires December 2003                                           [Page 6]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


3.5.  The MPLS-LDP-STD-MIB Module

   This MIB Module contains objects which are common to all LDP
   implementations.  This MIB Module MUST always be implemented along
   with one or more of the Layer 2 MIB Modules.

   This table allows the Label Edge Router (LER) or the Label Switching
   Router (LSR) to initiate and/or receive requests to establish LDP
   sessions.  As the LDP protocol distributes labels and establishes
   sessions with Peers most of the tables in this module are populated
   by the agent as instructed by the LDP protocol.  The exception is the
   mplsFecTable and the mplsLdpLspFecTable which can be configured by
   the operator to specify Forwarding Equivalence Class information for
   an LSP.

   Some scalars and each table in the MPLS-LDP-STD-MIB Module is
   described in the following subsections.


3.5.1.  LDP Scalar Objects

   There are several scalar objects in the LDP MIB module.  The
   mplsLdpLsrId is a read-only scalar object which reports Lable
   Switching Router's (LSR's) Identifier.  This MUST be a globally
   unique value, such as the 32-bit router ID assigned to the LSR.

   The mplsLdpLsrLoopDetectionCapable scalar object denotes whether the
   LSR is capable of supporting loop detection and if so, which form of
   loop detection.

   There are two LastChange scalar objects, mplsLdpEntityLastChange and
   mplsLdpPeerLastChange.  These objects give an indication of there was
   a change in the number of entries in the table, or if any of the
   values in the respective tables changed.  Please see the object's
   description for more details.

   The mplsLdpEntityIndexNext scalar object is described in the next
   section.


3.5.2.  The LDP Entity Table

   The MPLS-LDP-STD-MIB provides objects to configure/set-up potential
   LDP sessions on a specific LSR/LER.  The mplsLdpEntityTable is used
   to configure information which is used by the LDP protocol to setup
   potential LDP Sessions.


Expires December 2003                                           [Page 7]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   Each entry/row in this table represents a single LDP Entity.  There
   is no maximum number of LDP Entities specified.  However, there is an
   mplsLdpEntityIndexNext object which should be retrieved by the
   command generator prior to creating an LDP Entity.  If the
   mplsLdpEntityIndexNext object is zero, this indicates that the
   LSR/LER is not able to create another LDP Entity at that time.


3.5.2.1.  Changing Values After Session Establishment

   One way to manually modify a session's parameters is by using SNMP to
   change the MIB objects related to that session.  Please note, special
   care should be taken if MIB objects which are used in the MPLS LDP
   Session Initialization need to be modified.  If the modification of
   any of these MIB variables takes place anytime after the start of
   session intialization, then the entire session must be halted.  Any
   information learned by that session must be discarded.  The objects
   should then be modified, and session initialization started.
   Assuming that the configuration was done correctly, then a new
   session will be created.

   For example, assume that an operator wishes to change the
   configuration of a Label Range which is used by a Session that has
   already been established.  The operator should change the
   mplsLdpEntityAdminStatus to "disable(2)".  Setting the
   mplsLdpEntityAdminStatus to "disable(2)" will cause the session to be
   torn down (i.e. this will signal to LDP that it should send out tear
   down messages for that session).  Also, all information related to
   that session should be removed from this MIB by the Agent.  This
   includes Peer information (i.e. relevant row in the mplsPeerTable)
   and Session statistics (i.e. relevant row in the
   mplsLdpSessionTable).  Also, if the MPLS-LSR-STD-MIB module [LSRMIB]
   is implemented and the optional Mapping Table objects are
   implemented, then all information related to the LSPs in this session
   should be removed from these MIB modules. [For more information
   please see the section on "The Mapping Tables".]  At this point, the
   operator could modify the Label Range.  Lastly, the operator should
   set the mplsLdpEntityAdminStatus to "enable(1)".  At this point
   session initialization should occur.  The LDP Entity goes through the
   Session Initialization in order to communicate the new Label Ranges
   to the Peer and establish new LSPs.







Expires December 2003                                           [Page 8]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


3.5.3.  The LDP Entity Statistics Table

   The mplsLpdEntityStatsTable is a read-only table which contains
   statistical information related to failed attempts to establish
   sessions.  Each row in this table AUGMENTS an mplsLdpEntityEntry.
   This table could be used to give insight into how to reconfigure
   values so that a session could be successfully established.  For
   example, if the mplsLdpEntityStatsSessionRejectedLRErrors Counter
   object was increasing, then this would indicate that the Label Range
   (LR) may need to be adjusted.


3.5.4.  The LDP Peer Table

   The mplsLdpPeerTable is a read-only table which contains information
   about LDP Peers known to LDP Entities.  In other words, the Peer
   information is learned by LDP through initialization or discovery.
   This table should be populated by the agent as directed by the LDP
   protocol.

   A row in this table is related to one or more rows in the Hello
   Adjacency Table and related to a single row in the Session Table.
   The values in the Peer table are specific to a Peer and may or may
   not be the same values used in the session.  The reason is that the
   Peer and Entity negotiate certain values.  The Entity's values are
   configured in the mplsLdpEntityTable and the Peer's values are
   learned (and placed into the mplsLdpPeerTable).  The
   mplsLdpSessionTable shows the values used in establishing the
   session.

   One example, of when the Peer's values and the Session's values may
   differ is with the Peer's Path Limit information.  The Peer's Path
   Limit information is learned from the session initialization phase.
   The actual value for the Path Vector Limit is the Peer's value and
   may not be the same value that appears in the session.  There could
   be a mismatch in this value between the Entity and the Peer. In the
   event of a mismatch, then the session will use the Path Limit set by
   the Entity (and not the Peer).

   The Peer Table information was placed in a separate table from the
   Session information to allow for a more comprehensive and coherent
   MIB model.






Expires December 2003                                           [Page 9]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


3.5.5.  The LDP Session Table

   The LDP Session Table is a read-only table.  Each entry in this table
   represents a single session between an LDP Entity and a Peer. The
   mplsLdpSessionEntry AUGMENTS the mplsLdpPeerEntry.

   The information in this table is learned during session
   establishment.  NOTE: rows in this table will appear during session
   intialization.


3.5.6.  The LDP Session Statistics Table

   The mplsLdpSessionStatsTable is a read-only table which contains
   statistical information on sessions.  This table AUGMENTS the
   mplsLdpPeerTable.


3.5.7.  The LDP Hello Adjacency Table

   This is a table of all adjacencies between all LDP Entities and all
   LDP Peers.  A Session may have one or more adjacencies.  A session
   should not have zero adjacencies, because this indicates that the
   session has lost contact with the Peer.  A session which has zero
   Hello Adjacencies should be removed.


3.5.8.  The LDP LSP Table

   The Label Information Base (LIB) contains information about labels
   learned by the LSR.  The LIB for LDP, CR-LDP and MPLS-RSVP (i.e. all
   currently defined MPLS protocols) is represented in the LSR MIB
   [LSRMIB].  The LIB is represented by the LSR MIB's mplsXCTable (mpls
   Cross Connect Table), mplsInSegmentTable (mpls In Segment Table) and
   the mplsOutSegmentTable (mpls Out Segment Table).  The mplsXCTable
   models the cross-connection of the incoming label with a specific
   outgoing label.  The mplsInSegmentTable stores the incoming label's
   information, and the mplsOutSegmentTable stores the outgoing label's
   information.

   The LDP Session that created the LSP and the LSP's (incoming label,
   outgoing label) pair along with other information is contained in the
   MPLS-LSR-STD-MIB module's mplsXCTable, the mplsInSegmentTable and the
   mplsOutSegmentTable.

   In order to utilize the MPLS-LSR-STD-MIB module's mplsXCTable,


Expires December 2003                                          [Page 10]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   mplsInSegmentTable and mplsOutSegmentTable for LDP LSPs, there needs
   to be a mechanism to associate LDP sessions with LDP LSPs created as
   a result of those LDP sessions.  The mplsInSegmentLdpLspTable and
   mplsOutSegmentLdpLspTable in this MIB contain information to find the
   LDP LSP entries in the mplsInSegmentTable, mplsOutSegmentTable and
   the mplsXCTable.

   These two tables, the mplsInSegmentLdpLspTable and
   mplsOutSegmentLdpLspTable, have been made optional in the conformance
   section of the MIB.  They only need to be supported if the LSR MIBs
   mplsInSegmentTable, mplsOutSegmentTable and mplsXCTable are
   implemented.

   As discussed in the section, "Changing Values after Session
   Establishment", if a session is torn down, then all the information
   related to this session, must be removed from the both LDP MIB and,
   if implemented, from the LSR MIB.


3.5.9.  The FEC Table

   The FEC Table is a table which contains FEC (Forwarding Equivalence
   Class) information.  Each entry/row represents a single FEC Element.
   There is also an LDP LSP FEC Table, mplsLdpLspFecTable, which
   associates FECs with the LSPs.


3.5.10.  The LDP Session Peer Address Table

   The MPLS LDP Session Peer Address Table is a table which extends the
   mplsLdpSessionTable.  This table is a read-only table which stores
   Addresses learned after session initialization via Address Message
   advertisement.


3.6.  LDP Notifications

   Currently, there are several notifications which are specific for
   LDP.  These are described in this section.  There are no objects
   which enable or disable notifications from being generated.  RFC 2573
   [RFC2573] contains MIB modules which can be implemented that will
   enable or disable these notifications from being generated.

   The mplsLdpInitSessionThresholdExceeded notification indicates to the
   operator that there may be a misconfigured mplsLdpEntityEntry because
   the session associated with this Entity is not being established, and


Expires December 2003                                          [Page 11]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   the Entity keeps trying to establish the session.  A side effect of
   this situation is that a row in the mplsLdpSessionTable may not be
   reaching the operational state as indicated by the
   mplsLdpSessionState object.  If the value of
   mplsLdpEntityInitSessionThreshold is 0 (zero) then this is equal to
   specifying the value of infinity for the threshold, and the
   mplsLdpInitSessionThresholdExceeded notification will never be sent.

   The mplsLdpPathVectorLimitMismatch notification is generated when
   there is a mismatch in the Path Vector Limits between the Entity and
   Peer during session initialization.  The session uses the value which
   is configured as the Entity's Path Vector Limit.  However, a
   notification should be generated to indicate that a mismatch
   occurred.  For further details, please see Section 3.5.3 of the LDP
   Specification [RFC3036].

   The mplsLdpSessionUp and mplsLdpSessionDown notifications are
   generated when there is an appropriate change in the
   mplsLdpSessionState object, e.g. when sessions change state (Up to
   Down for the mplsLdpSessionDown notification, or Down to Up for the
   mplsLdpSessionUp notification).  There was discussion about combining
   these two notifications into a single notification, however, some NMS
   applications can utilize two different notifications, rather than
   having to parse the varbind list of a single notification.  For
   example, the SessionDown is matched to a SessionUp notification more
   easily by some NMS applications, than having to parse a Varbind list
   in a SessionChange type of notification.


3.7.  LDP Notification Frequency

   LDP Notifications are expected to be few in number when LDP is
   ubiquitously deployed in a relatively stable network.  A notification
   receiver, e.g. an NMS, that receives these notifications should not
   be overwhelmed by the frequency of LDP notifications.  If this
   assertion proves to be inaccurate, then a throttling object to
   throttle these notifications may be added to future versions of the
   MPLS-LDP-STD-MIB.


4.  MPLS Label Distribution Protocol MIB Definitions

     MPLS-LDP-STD-MIB DEFINITIONS ::= BEGIN

     IMPORTS
         OBJECT-TYPE, MODULE-IDENTITY, NOTIFICATION-TYPE,


Expires December 2003                                          [Page 12]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         Integer32, Counter32, Unsigned32
             FROM SNMPv2-SMI
         MODULE-COMPLIANCE, OBJECT-GROUP, NOTIFICATION-GROUP
             FROM SNMPv2-CONF

         RowStatus, TimeInterval, TruthValue,
         TimeStamp, StorageType
             FROM SNMPv2-TC

         InetAddressPrefixLength,
         InetAddressType,
         InetAddress,
         InetPortNumber
             FROM INET-ADDRESS-MIB

         IndexInteger,
         IndexIntegerNextFree
             FROM DIFFSERV-MIB

         mplsStdMIB,
         MplsLabelDistributionMethod,
         MplsLdpIdentifier,
         MplsLdpLabelType,
         MplsLspType,
         MplsLsrIdentifier,
         MplsRetentionMode
             FROM MPLS-TC-STD-MIB


         MplsIndexType
             FROM MPLS-LSR-STD-MIB;


     mplsLdpStdMIB MODULE-IDENTITY
         LAST-UPDATED "200306281200Z"  -- 28 June 2003
         ORGANIZATION "Multiprotocol Label Switching (mpls)
                       Working Group"
         CONTACT-INFO

             "Joan Cucchiara (jcucchiara@artel.com)
              Artel

              Hans Sjostrand (hans@ipunplugged.com)
              ipUnplugged

              James V. Luciani (james_luciani@mindspring.com)


Expires December 2003                                          [Page 13]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


              Consultant

              Working Group Chairs:
              George Swallow,   email: swallow@cisco.com
              Loa Andersson,    email: loa@pi.se

              MPLS Working Group, email: mpls@uu.net"

         DESCRIPTION
             "Copyright (C) The Internet Society (2003).  This
             version of this MIB module is part of RFCXXX; see
             the RFC itself for full legal notices.

             This MIB contains managed object definitions for the
             'Multiprotocol Label Switching, Label Distribution
             Protocol, LDP' document."

         REVISION "200306281200Z"  -- 28 June 2003
         DESCRIPTION
            "Initial version published as part of RFC XXXX."

         -- Please see the IANA Considerations Section.
         -- The requested mplsStdMIB subId is 4, e.g.
         --   ::= { mplsStdMIB 4 }

         ::= { mplsStdMIB XXX } -- to be assigned by IANA

     --****************************************************************

     mplsLdpNotifications OBJECT IDENTIFIER ::= { mplsLdpStdMIB 0 }
     mplsLdpObjects       OBJECT IDENTIFIER ::= { mplsLdpStdMIB 1 }
     mplsLdpConformance   OBJECT IDENTIFIER ::= { mplsLdpStdMIB 2 }

     --****************************************************************
     -- MPLS LDP Objects
     --****************************************************************

     mplsLdpLsrObjects    OBJECT IDENTIFIER ::= { mplsLdpObjects 1 }

     mplsLdpEntityObjects OBJECT IDENTIFIER ::= { mplsLdpObjects 2 }

     --
     -- The MPLS Label Distribution Protocol's
     -- Label Switching Router Objects
     --



Expires December 2003                                          [Page 14]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     mplsLdpLsrId OBJECT-TYPE
         SYNTAX      MplsLsrIdentifier
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The Label Switching Router's Identifier."
         ::= { mplsLdpLsrObjects 1 }

     mplsLdpLsrLoopDetectionCapable OBJECT-TYPE
         SYNTAX      INTEGER {
                                none(1),
                                other(2),
                                hopCount(3),
                                pathVector(4),
                                hopCountAndPathVector(5)
                             }
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "A indication of whether this
             Label Switching Router supports
             loop detection.

             none(1) -- Loop Detection is not supported
                        on this LSR.

             other(2) -- Loop Detection is supported but
                         by a method other than those
                         listed below.

             hopCount(3) -- Loop Detection is supported by
                            Hop Count only.

             pathVector(4) -- Loop Detection is supported by
                              Path Vector only.

             hopCountAndPathVector(5) -- Loop Detection is
                                  supported by both Hop Count
                                  And Path Vector.

             Since Loop Detection is determined during
             Session Initialization, an individual session
             may not be running with loop detection.  This
             object simply gives an indication of whether or not the
             LSR has the ability to support Loop Detection and
             which types."


Expires December 2003                                          [Page 15]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         ::= { mplsLdpLsrObjects 2 }


     --
     -- The MPLS Label Distribution Protocol Entity Objects
     --


     mplsLdpEntityLastChange OBJECT-TYPE
         SYNTAX  TimeStamp
         MAX-ACCESS read-only
         STATUS current
         DESCRIPTION
             "The value of sysUpTime at the time of the most
             recent addition or deletion of an entry
             to/from the mplsLdpEntityTable/mplsLdpEntityStatsTable, or
             the most recent change in value of any objects in the
             mplsLdpEntityTable.

             If no such changes have occurred since the last
             re-initialization of the local management subsystem,
             then this object contains a zero value."
         ::= { mplsLdpEntityObjects 1 }

     mplsLdpEntityIndexNext  OBJECT-TYPE
         SYNTAX      IndexIntegerNextFree
         MAX-ACCESS     read-only
         STATUS         current
         DESCRIPTION
             "This object contains an appropriate value to
             be used for mplsLdpEntityIndex when creating
             entries in the mplsLdpEntityTable. The value
             0 indicates that no unassigned entries are
             available."
        ::= { mplsLdpEntityObjects 2 }


     mplsLdpEntityTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsLdpEntityEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "This table contains information about the
             MPLS Label Distribution Protocol Entities which
             exist on this Label Switching Router (LSR)
             or Label Edge Router (LER)."


Expires December 2003                                          [Page 16]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         ::= { mplsLdpEntityObjects 3 }

     mplsLdpEntityEntry OBJECT-TYPE
         SYNTAX      MplsLdpEntityEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An entry in this table represents an LDP entity.
             An entry can be created by a network administrator
             or by an SNMP agent as instructed by LDP."
         INDEX       {  mplsLdpEntityLdpId, mplsLdpEntityIndex  }
         ::= { mplsLdpEntityTable 1 }

     MplsLdpEntityEntry ::= SEQUENCE {
         mplsLdpEntityLdpId                  MplsLdpIdentifier,
         mplsLdpEntityIndex                  IndexInteger,
         mplsLdpEntityProtocolVersion        Unsigned32,
         mplsLdpEntityAdminStatus            INTEGER,
         mplsLdpEntityOperStatus             INTEGER,
         mplsLdpEntityTcpDscPort             InetPortNumber,
         mplsLdpEntityUdpDscPort             InetPortNumber,
         mplsLdpEntityMaxPduLength           Unsigned32,
         mplsLdpEntityKeepAliveHoldTimer     Unsigned32,
         mplsLdpEntityHelloHoldTimer         Unsigned32,
         mplsLdpEntityInitSessionThreshold   Integer32,
         mplsLdpEntityLabelDistMethod        MplsLabelDistributionMethod,
         mplsLdpEntityLabelRetentionMode     MplsRetentionMode,
         mplsLdpEntityPathVectorLimit        Integer32,
         mplsLdpEntityHopCountLimit          Integer32,
         mplsLdpEntityTransportAddrKind      INTEGER,
         mplsLdpEntityTargetPeer             TruthValue,
         mplsLdpEntityTargetPeerAddrType     InetAddressType,
         mplsLdpEntityTargetPeerAddr         InetAddress,
         mplsLdpEntityLabelType              MplsLdpLabelType,
         mplsLdpEntityDiscontinuityTime      TimeStamp,
         mplsLdpEntityStorageType            StorageType,
         mplsLdpEntityRowStatus              RowStatus
     }


     mplsLdpEntityLdpId OBJECT-TYPE
         SYNTAX      MplsLdpIdentifier
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "The LDP identifier."


Expires December 2003                                          [Page 17]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         REFERENCE
             "RFC3036, LDP Specification, Section on LDP Identifiers."
         ::= { mplsLdpEntityEntry 1 }

     mplsLdpEntityIndex OBJECT-TYPE
         SYNTAX      IndexInteger
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "This index is used as a secondary index to uniquely
             identify this row.  Before creating a row in this table,
             the 'mplsLdpEntityIndexNext' object should be retrieved.
             That value should be used for the value of this index
             when creating a row in this table.  NOTE:  if a value
             of zero (0) is retrieved, that indicates that no rows
             can be created in this table at this time.

             A secondary index (this object) is meaningful to some
             but not all, LDP implementations.  For example
             an LDP implementation which uses PPP would
             use this index to differentiate PPP sub-links.

             Another way to use this index is to give this the
             value of ifIndex.  However, this is dependant
             on the implementation."
         ::= { mplsLdpEntityEntry 2 }

     mplsLdpEntityProtocolVersion OBJECT-TYPE
         SYNTAX      Unsigned32(1..65535)
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
            "The version number of the LDP protocol which will be
            used in the session initialization message.

            Section 3.5.3 in the LDP Specification specifies
            that the version of the LDP protocol is negotiated during
            session establishment. The value of this object
            represents the value that is sent in the initialization
            message."
         REFERENCE
            "RFC3036, LDP Specification, Section 3.5.3 Initialization
            Message."
         DEFVAL { 1 }
         ::= { mplsLdpEntityEntry 3 }



Expires December 2003                                          [Page 18]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     mplsLdpEntityAdminStatus OBJECT-TYPE
         SYNTAX      INTEGER {
                       enable(1),
                       disable(2)
                     }
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The administrative status of this LDP Entity.
             If this object is changed from 'enable' to 'disable'
             and this entity has already attempted to establish
             contact with a Peer, then all contact with that
             Peer is lost and all information from that Peer
             needs to be removed from the MIB. (This implies
             that the network management subsystem should clean
             up any related entry in the mplsLdpPeerTable.  This
             further implies that a 'tear-down' for that session
             is issued and the session and all information related
             to that session cease to exist).

             At this point the operator is able to change values
             which are related to this entity.

             When the admin status is set back to 'enable', then
             this Entity will attempt to establish a new session
             with the Peer."
         DEFVAL  { enable }
         ::= { mplsLdpEntityEntry 4 }


     mplsLdpEntityOperStatus OBJECT-TYPE
         SYNTAX      INTEGER {
                       unknown(1),
                       enabled(2),
                       disabled(3)
                     }
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The operational status of this LDP Entity.

             The value of unknown(1) indicates that the
             operational status cannot be determined at
             this time.  The value of unknown should be
             a transient condition before changing
             to enabled(2) or disabled(3)."


Expires December 2003                                          [Page 19]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         ::= { mplsLdpEntityEntry 5 }

     mplsLdpEntityTcpDscPort OBJECT-TYPE
         SYNTAX      InetPortNumber
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The TCP Discovery Port for
             LDP.  The default value is the well-known
             value of this port."
         REFERENCE
             "RFC3036, LDP Specification, Section 2.4.1,
             Basic Discovery Mechanism, Section 2.4.2,
             Extended Discovery Mechanism, Section
             3.10, Well-known Numbers, and Section 3.10.1.
             UDP and TCP Ports."
         DEFVAL { 646 }
         ::= { mplsLdpEntityEntry 6 }

     mplsLdpEntityUdpDscPort OBJECT-TYPE
         SYNTAX      InetPortNumber
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The UDP Discovery Port for
             LDP.  The default value is the
             well-known value for this port."
         REFERENCE
             "RFC3036, LDP Specification, Section 2.4.1,
             Basic Discovery Mechanism, Section 2.4.2,
             Extended Discovery Mechanism, Section
             3.10, Well-known Numbers, and Section 3.10.1.
             UDP and TCP Ports."
         DEFVAL { 646 }
         ::= { mplsLdpEntityEntry 7 }

     mplsLdpEntityMaxPduLength OBJECT-TYPE
         SYNTAX      Unsigned32 (256..65535)
         UNITS       "octets"
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
            "The maximum PDU Length that is sent in
            the Common Session Parameters of an Initialization
            Message. According to the LDP Specification [RFC3036]
            a value of 255 or less specifies the


Expires December 2003                                          [Page 20]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


            default maximum length of 4096 octets, this is why
            the value of this object starts at 256.  The operator
            should explicitly choose the default value (i.e. 4096),
            or some other value.

            The receiving LSR MUST calculate the maximum PDU
            length for the session by using the smaller of its and
            its peer's proposals for Max PDU Length."
         REFERENCE
            "RFC3036, LDP Specification, Section 3.5.3.
            Initialization Message."
         DEFVAL { 4096 }
         ::= { mplsLdpEntityEntry 8 }

     mplsLdpEntityKeepAliveHoldTimer OBJECT-TYPE
         SYNTAX      Unsigned32 (1..65535)
         UNITS       "seconds"
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The 16-bit integer value which is the proposed keep
             alive hold timer for this LDP Entity."
         DEFVAL { 40 }
         ::= { mplsLdpEntityEntry 9 }

     mplsLdpEntityHelloHoldTimer OBJECT-TYPE
         SYNTAX      Unsigned32 (0..65535)
         UNITS       "seconds"
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The 16-bit integer value which is the proposed Hello
             hold timer for this LDP Entity. The Hello Hold time
             in seconds.

             An LSR maintains a record of Hellos received
             from potential peers.  This object represents
             the Hold Time in the Common Hello Parameters TLV of
             the Hello Message.

             A value of 0 is a default value and should be
             interpretted in conjunction with the
             mplsLdpEntityTargetPeer object.

             If the value of this object is 0: if the value of the
             mplsLdpEntityTargetPeer object is false(2), then this


Expires December 2003                                          [Page 21]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             specifies that the Hold Time's actual default value is
             15 seconds (i.e. the default Hold time for Link Hellos
             is 15 seconds).  Otherwise if the value of the
             mplsLdpEntityTargetPeer object is true(1), then this
             specifies that the Hold Time's actual default value is
             45 seconds (i.e. the default Hold time for Targeted
             Hellos is 45 seconds).

             A value of 65535 means infinite (i.e. wait forever).

             All other values represent the amount of time in
             seconds to wait for a Hello Message.  Setting the
             hold time to a value smaller than 15 is not
             recommended, although not forbidden according
             to RFC3036."
         REFERENCE
             "RFC3036, LDP Specification, Section 3.5.2.,
             Hello Message."
         DEFVAL { 0 }
         ::= { mplsLdpEntityEntry 10 }

     mplsLdpEntityInitSessionThreshold OBJECT-TYPE
         SYNTAX      Integer32(0..100)
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "When attempting to establish a session with
             a given Peer, the given LDP Entity should
             send out the SNMP notification,
             'mplsLdpInitSessionThresholdExceeded', when
             the number of Session Initialization messages
             sent exceeds this threshold.

             The notification is used to notify an
             operator when this Entity and its Peer are
             possibily engaged in an endless sequence
             of messages as each NAKs the other's
             Initialization messages with Error Notification
             messages.  Setting this threshold which triggers
             the notification is one way to notify the
             operator.  The notification should be generated
             each time this threshold is exceeded and
             for every subsequent Initialization message
             which is NAK'd with an Error Notification
             message after this threshold is exceeded.



Expires December 2003                                          [Page 22]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             A value of 0 (zero) for this object
             indicates that the threshold is infinity, thus
             the SNMP notification will never be generated."
         REFERENCE
             "RFC3036, LDP Specification,
             Section 2.5.3 Session Initialization."
         DEFVAL { 8 }
         ::= { mplsLdpEntityEntry 11 }


     mplsLdpEntityLabelDistMethod OBJECT-TYPE
         SYNTAX      MplsLabelDistributionMethod
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "For any given LDP session, the method of
             label distribution must be specified."
         ::= { mplsLdpEntityEntry 12 }

     mplsLdpEntityLabelRetentionMode OBJECT-TYPE
         SYNTAX      MplsRetentionMode
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The LDP Entity can be configured to use either
             conservative or liberal label retention mode.

             If the value of this object is conservative(1)
             then advertized label mappings are retained
             only if they will be used to forward packets,
             i.e. if label came from a valid next hop.

             If the value of this object is liberal(2)
             then all advertized label mappings are retained
             whether they are from a valid next hop or not."
         ::= { mplsLdpEntityEntry 13 }

     mplsLdpEntityPathVectorLimit OBJECT-TYPE
         SYNTAX      Integer32 (0..255)
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "If the value of this object is 0 (zero) then
             Loop Dection for Path Vectors is disabled.

             Otherwise, if this object has a value greater than


Expires December 2003                                          [Page 23]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             zero, then Loop Dection for Path Vectors is enabled,
             and the Path Vector Limit is this value.
             Also, the value of the object,
             'mplsLdpLsrLoopDetectionCapable', must be set to
             either 'pathVector(4)' or 'hopCountAndPathVector(5)',
             if this object has a value greater than 0 (zero),
             otherwise it is ignored."
         REFERENCE
            "RFC3036, LDP Specification, Section 2.8 Loop Dection,
            Section 3.4.5 Path Vector TLV."
         ::= { mplsLdpEntityEntry 14 }

     mplsLdpEntityHopCountLimit OBJECT-TYPE
         SYNTAX       Integer32 (0..255)
         MAX-ACCESS   read-create
         STATUS       current
         DESCRIPTION
             "If the value of this object is 0 (zero),
             then Loop Detection using Hop Counters is
             disabled.

             If the value of this object is greater than
             0 (zero) then Loop Detection using Hop
             Counters is enabled, and this object
             specifies this Entity's maximum allowable
             value for the Hop Count.
             Also, the value of the object
             mplsLdpLsrLoopDetectionCapable must be set
             to either 'hopCount(3)' or
             'hopCountAndPathVector(5)' if this object
             has a value greater than 0 (zero), otherwise
             it is ignored."
         DEFVAL { 0 }
         ::= { mplsLdpEntityEntry 15 }

     mplsLdpEntityTransportAddrKind OBJECT-TYPE
         SYNTAX     INTEGER {
                               interface(1),
                               loopback(2)
                            }
         MAX-ACCESS read-create
         STATUS     current
         DESCRIPTION
             "This specifies whether the loopback or interface
             address is to be used as the transport address
             in the transport address TLV of the


Expires December 2003                                          [Page 24]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             hello message.

             If the value is interface(1), then the IP
             address of the interface from which hello
             messages are sent is used as the transport
             address in the hello message.

             Otherwise, if the value is loopback(2), then the IP
             address of the loopback interface is used as the
             transport address in the hello message."
         DEFVAL { loopback }
         ::= { mplsLdpEntityEntry 16 }

     mplsLdpEntityTargetPeer OBJECT-TYPE
         SYNTAX      TruthValue
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "If this LDP entity uses targeted peer then set
             this to true."
         DEFVAL { false }
         ::= { mplsLdpEntityEntry 17 }

     mplsLdpEntityTargetPeerAddrType OBJECT-TYPE
         SYNTAX      InetAddressType
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The type of the internetwork layer address used for
             the Extended Discovery.  This object indicates how
             the value of mplsLdpEntityTargetPeerAddr is to
             be interpreted."
         ::= { mplsLdpEntityEntry 18 }

     mplsLdpEntityTargetPeerAddr OBJECT-TYPE
         SYNTAX      InetAddress
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The value of the internetwork layer address
             used for the Extended Discovery.  The value of
             mplsLdpEntityTargetPeerAddrType specifies how
             this address is to be intepreted."
        ::= { mplsLdpEntityEntry 19 }

     mplsLdpEntityLabelType OBJECT-TYPE


Expires December 2003                                          [Page 25]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         SYNTAX      MplsLdpLabelType
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "Specifies the optional parameters for the LDP
             Initialization Message.

             If the value is generic(1) then no
             optional parameters will be sent in
             the LDP Initialization message associated
             with this Entity.

             If the value is atmParameters(2) then
             a row must be created in the
             mplsLdpEntityAtmTable, which
             corresponds to this entry.

             If the value is frameRelayParameters(3) then
             a row must be created in the
             mplsLdpEntityFrameRelayTable, which
             corresponds to this entry."
         REFERENCE
             "RFC3036, LDP Specification, Section 3.5.3.,
             Initialization Message."
         ::= { mplsLdpEntityEntry 20 }


     mplsLdpEntityDiscontinuityTime OBJECT-TYPE
         SYNTAX      TimeStamp
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The value of sysUpTime on the most recent occasion
             at which any one or more of this entity's counters
             suffered a discontinuity.  The relevant counters
             are the specific instances associated with this
             entity of any Counter32 object contained
             in the 'mplsLdpEntityStatsTable'.  If no such
             discontinuities have occurred since the last
             re-initialization of the local management
             subsystem, then this object contains a zero
             value."
         ::= { mplsLdpEntityEntry 21 }

     mplsLdpEntityStorageType  OBJECT-TYPE
         SYNTAX      StorageType


Expires December 2003                                          [Page 26]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The storage type for this conceptual row.
             Conceptual rows having the value 'permanent(4)'
             need not allow write-access to any columnar
             objects in the row."
         DEFVAL{ nonVolatile }
         ::= { mplsLdpEntityEntry 22 }

     mplsLdpEntityRowStatus OBJECT-TYPE
         SYNTAX      RowStatus
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The status of this conceptual row.  All writable
              objects in this row may be modified at any
              time, however, as described in detail in
              the section entitled, 'Changing Values After
              Session Establishment', and again described
              in the DESCRIPTION clause of the
              mplsLdpEntityAdminStatus object, if a session
              has been initiated with a Peer, changing objects
              in this table will wreak havoc with the session
              and interrupt traffic.  To repeat again:
              the recommended procedure is to
              set the mplsLdpEntityAdminStatus to down, thereby
              explicitly causing a session to be torn down. Then,
              change objects in this entry, then set
              the mplsLdpEntityAdminStatus to enable,
              which enables a new session to be initiated."
         ::= { mplsLdpEntityEntry 23 }


     --
     -- The MPLS LDP Entity Statistics Table
     --

     mplsLdpEntityStatsTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsLdpEntityStatsEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "This table is a read-only table which augments
             the mplsLdpEntityTable.  The purpose of this
             table is to keep statistical information about


Expires December 2003                                          [Page 27]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             the LDP Entities on the LSR."
         ::= { mplsLdpEntityObjects 4 }

     mplsLdpEntityStatsEntry OBJECT-TYPE
         SYNTAX      MplsLdpEntityStatsEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "A row in this table contains statistical information
             about an LDP Entity.  Some counters contained in a
             row are for fatal errors received during a former
             LDP Session associated with this entry.  For example,
             an LDP PDU received on a TCP connection during an
             LDP Session contains a fatal error.  That
             error is counted here, because the
             session is terminated.

             If the error is NOT fatal (i.e. the Session
             remains), then the error is counted in the
             mplsLdpSessionStatsEntry."
         AUGMENTS       {   mplsLdpEntityEntry  }
         ::= { mplsLdpEntityStatsTable 1 }

     MplsLdpEntityStatsEntry ::= SEQUENCE {
         mplsLdpEntityStatsSessionAttempts               Counter32,
         mplsLdpEntityStatsSessionRejectedNoHelloErrors  Counter32,
         mplsLdpEntityStatsSessionRejectedAdErrors       Counter32,
         mplsLdpEntityStatsSessionRejectedMaxPduErrors   Counter32,
         mplsLdpEntityStatsSessionRejectedLRErrors       Counter32,
         mplsLdpEntityStatsBadLdpIdentifierErrors        Counter32,
         mplsLdpEntityStatsBadPduLengthErrors            Counter32,
         mplsLdpEntityStatsBadMessageLengthErrors        Counter32,
         mplsLdpEntityStatsBadTlvLengthErrors            Counter32,
         mplsLdpEntityStatsMalformedTlvValueErrors       Counter32,
         mplsLdpEntityStatsKeepAliveTimerExpErrors       Counter32,
         mplsLdpEntityStatsShutdownReceivedNotifications Counter32,
         mplsLdpEntityStatsShutdownSentNotifications     Counter32
     }

     mplsLdpEntityStatsSessionAttempts OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "A count of the Session Initialization messages
             which were sent or received by this LDP Entity and


Expires December 2003                                          [Page 28]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             were NAK'd.   In other words, this counter counts
             the number of session initializations that failed.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         ::= { mplsLdpEntityStatsEntry 1 }


     mplsLdpEntityStatsSessionRejectedNoHelloErrors OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "A count of the Session Rejected/No Hello Error
             Notification Messages sent or received by
             this LDP Entity.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         ::= { mplsLdpEntityStatsEntry 2 }

     mplsLdpEntityStatsSessionRejectedAdErrors OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "A count of the Session Rejected/Parameters
             Advertisement Mode Error Notification Messages sent
             or received by this LDP Entity.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         ::= { mplsLdpEntityStatsEntry 3 }

     mplsLdpEntityStatsSessionRejectedMaxPduErrors OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "A count of the Session Rejected/Parameters


Expires December 2003                                          [Page 29]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             Max Pdu Length Error Notification Messages sent
             or received by this LDP Entity.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         ::= { mplsLdpEntityStatsEntry 4 }

     mplsLdpEntityStatsSessionRejectedLRErrors OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "A count of the Session Rejected/Parameters
             Label Range Notification Messages sent
             or received by this LDP Entity.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         ::= { mplsLdpEntityStatsEntry 5 }


     mplsLdpEntityStatsBadLdpIdentifierErrors OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "This object counts the number of Bad LDP Identifier
             Fatal Errors detected by the session(s)
             (past and present) associated with this LDP Entity.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         REFERENCE
            "RFC3036, LDP Specification, Section 3.5.1.2."
         ::= { mplsLdpEntityStatsEntry 6 }

     mplsLdpEntityStatsBadPduLengthErrors OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current


Expires December 2003                                          [Page 30]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         DESCRIPTION
             "This object counts the number of Bad PDU Length
             Fatal Errors detected by the session(s)
             (past and present) associated with this LDP Entity.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         REFERENCE
            "RFC3036, LDP Specification, Section 3.5.1.2."
         ::= { mplsLdpEntityStatsEntry 7 }

     mplsLdpEntityStatsBadMessageLengthErrors OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "This object counts the number of Bad Message
             Length Fatal Errors detected by the session(s)
             (past and present) associated with this LDP Entity.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         REFERENCE
            "RFC3036, LDP Specification, Section 3.5.1.2."
         ::= { mplsLdpEntityStatsEntry 8 }

     mplsLdpEntityStatsBadTlvLengthErrors OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "This object counts the number of Bad TLV
             Length Fatal Errors detected by the session(s)
             (past and present) associated with this LDP Entity.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         REFERENCE
            "RFC3036, LDP Specification, Section 3.5.1.2."
         ::= { mplsLdpEntityStatsEntry 9 }


Expires December 2003                                          [Page 31]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     mplsLdpEntityStatsMalformedTlvValueErrors OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "This object counts the number of Malformed TLV
             Value Fatal Errors detected by the session(s)
             (past and present) associated with this
             LDP Entity.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         REFERENCE
            "RFC3036, LDP Specification, Section 3.5.1.2."
         ::= { mplsLdpEntityStatsEntry 10 }

     mplsLdpEntityStatsKeepAliveTimerExpErrors OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "This object counts the number of Session Keep Alive
             Timer Expired Errors detected by the session(s)
             (past and present) associated with this LDP Entity.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         REFERENCE
            "RFC3036, LDP Specification, Section 3.5.1.2."
         ::= { mplsLdpEntityStatsEntry 11 }

     mplsLdpEntityStatsShutdownReceivedNotifications OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "This object counts the number of Shutdown Notfications
             received related to session(s) (past and present)
             associated with this LDP Entity.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at


Expires December 2003                                          [Page 32]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         ::= { mplsLdpEntityStatsEntry 12 }

     mplsLdpEntityStatsShutdownSentNotifications OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "This object counts the number of Shutdown Notfications
             sent related to session(s) (past and present) associated
             with this LDP Entity.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpEntityDiscontinuityTime."
         ::= { mplsLdpEntityStatsEntry 13 }


     --
     -- The MPLS LDP Peer Table
     --

     mplsLdpSessionObjects OBJECT IDENTIFIER ::= { mplsLdpObjects 3 }


     mplsLdpPeerLastChange OBJECT-TYPE
         SYNTAX  TimeStamp
         MAX-ACCESS read-only
         STATUS current
         DESCRIPTION
             "The value of sysUpTime at the time of the most
             recent addition or deletion to/from the
             mplsLdpPeerTable/mplsLdpSessionTable."
         ::= { mplsLdpSessionObjects 1 }

     mplsLdpPeerTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsLdpPeerEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "Information about LDP peers known by Entities in
             the mplsLdpEntityTable.  The information in this table
             is based on information from the Entity-Peer interaction
             during session initialization but is not appropriate


Expires December 2003                                          [Page 33]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             for the mplsLdpSessionTable, because objects in this
             table may or may not be used in session establishment."
         ::= { mplsLdpSessionObjects 2 }

     mplsLdpPeerEntry OBJECT-TYPE
         SYNTAX      MplsLdpPeerEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "Information about a single Peer which is related
             to a Session.  This table is augmented by
             the mplsLdpSessionTable."
         INDEX       { mplsLdpEntityLdpId,
                       mplsLdpEntityIndex,
                       mplsLdpPeerLdpId }
         ::= { mplsLdpPeerTable 1 }

     MplsLdpPeerEntry ::= SEQUENCE {
         mplsLdpPeerLdpId                MplsLdpIdentifier,
         mplsLdpPeerLabelDistMethod      MplsLabelDistributionMethod,
         mplsLdpPeerPathVectorLimit      Integer32,
         mplsLdpPeerTransportAddrType    InetAddressType,
         mplsLdpPeerTransportAddr        InetAddress
     }

     mplsLdpPeerLdpId OBJECT-TYPE
         SYNTAX      MplsLdpIdentifier
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "The LDP identifier of this LDP Peer."
         ::= { mplsLdpPeerEntry 1 }

     mplsLdpPeerLabelDistMethod OBJECT-TYPE
         SYNTAX      MplsLabelDistributionMethod
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "For any given LDP session, the method of
             label distribution must be specified."
         ::= { mplsLdpPeerEntry 2 }

     mplsLdpPeerPathVectorLimit OBJECT-TYPE
         SYNTAX      Integer32 (0..255)
         MAX-ACCESS  read-only
         STATUS      current


Expires December 2003                                          [Page 34]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         DESCRIPTION
             "If the value of this object is 0 (zero) then
             Loop Dection for Path Vectors for this Peer
             is disabled.

             Otherwise, if this object has a value greater than
             zero, then Loop Dection for Path  Vectors for this
             Peer is enabled and the Path Vector Limit is this value."
         REFERENCE
            "RFC3036, LDP Specification, Section 2.8 Loop Dection,
            Section 3.4.5 Path Vector TLV."
         ::= { mplsLdpPeerEntry 3 }

     mplsLdpPeerTransportAddrType OBJECT-TYPE
         SYNTAX      InetAddressType
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The type of the Internet address for the
             mplsLdpPeerTransportAddr object.  The LDP
             specification describes this as being either
             an IPv4 Transport Address or IPv6 Transport
             Address which is used in opening the LDP session's
             TCP connection, or if the optional TLV is not
             present, then this is the IPv4/IPv6 source
             address for the UPD packet carrying the Hellos.

             This object specifies how the value of the
             mplsLdpPeerTransportAddr object should be
             interpreted."
         REFERENCE
            "RFC3036, LDP Specification, Section 2.5.2
            Transport Connection Establishment and
            Section 3.5.2.1 Hello Message Procedures."
         ::= { mplsLdpPeerEntry 4 }


     mplsLdpPeerTransportAddr OBJECT-TYPE
         SYNTAX      InetAddress
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The Internet address advertised by the peer
             in the Hello Message or the Hello source address.

             The type of this address is specified by the


Expires December 2003                                          [Page 35]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             value of the mplsLdpPeerTransportAddrType
             object."
         REFERENCE
            "RFC3036, LDP Specification, Section 2.5.2
            Transport Connection Establishment and
            Section 3.5.2.1 Hello Message Procedures."
         ::= { mplsLdpPeerEntry 5 }


     --
     -- The MPLS LDP Sessions Table
     --

     mplsLdpSessionTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsLdpSessionEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "A table of Sessions between the LDP Entities
             and LDP Peers.  This table AUGMENTS the
             mplsLdpPeerTable.  Each row in this table
             represents a single session."
         ::= { mplsLdpSessionObjects 3 }

     mplsLdpSessionEntry OBJECT-TYPE
         SYNTAX      MplsLdpSessionEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An entry in this table represents information on a
             single session between an LDP Entity and LDP Peer.
             The information contained in a row is read-only.

             Please note:  the Path Vector Limit for the
             Session is the value which is configured in
             the corresponding mplsLdpEntityEntry. The
             Peer's Path Vector Limit is in the
             mplsLdpPeerPathVectorLimit object in the
             mplsLdpPeerTable.

             Values which may differ from those configured are
             noted in the objects of this table, the
             mplsLdpAtmSessionTable and the
             mplsLdpFrameRelaySessionTable. A value will
             differ if it was negotiated between the
             Entity and the Peer.  Values may or may not


Expires December 2003                                          [Page 36]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             be negotiated.  For example, if the values
             are the same then no negotiation takes place.
             If they are negotiated, then they may differ."
         AUGMENTS { mplsLdpPeerEntry }
         ::= { mplsLdpSessionTable 1 }

     MplsLdpSessionEntry ::= SEQUENCE {
         mplsLdpSessionStateLastChange       TimeStamp,
         mplsLdpSessionState                 INTEGER,
         mplsLdpSessionRole                  INTEGER,
         mplsLdpSessionProtocolVersion       Unsigned32,
         mplsLdpSessionKeepAliveHoldTimeRem  TimeInterval,
         mplsLdpSessionKeepAliveTime         Unsigned32,
         mplsLdpSessionMaxPduLength          Unsigned32,
         mplsLdpSessionDiscontinuityTime     TimeStamp
     }

     mplsLdpSessionStateLastChange OBJECT-TYPE
         SYNTAX TimeStamp
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The value of sysUpTime at the time this
             Session entered its current state as
             denoted by the mplsLdpSessionState
             object."
         ::= { mplsLdpSessionEntry 1 }

     mplsLdpSessionState OBJECT-TYPE
         SYNTAX      INTEGER {
                        nonexistent(1),
                        initialized(2),
                        openrec(3),
                        opensent(4),
                        operational(5)
                     }
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The current state of the session, all of the
             states 1 to 5 are based on the state machine
             for session negotiation behavior."
         REFERENCE
             "RFC3036, LDP Specification, Section 2.5.4,
             Initialization State Machine."
         ::= { mplsLdpSessionEntry 2 }


Expires December 2003                                          [Page 37]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     mplsLdpSessionRole OBJECT-TYPE
         SYNTAX      INTEGER {
                        unknown(1),
                        active(2),
                        passive(3)
                     }
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "During session establishment the LSR/LER takes either
             the active role or the passive role based on address
             comparisons.  This object indicates whether this LSR/LER
             was behaving in an active role or passive role during
             this session's establishment.

             The value of unknown(1), indicates that the role is not
             able to be determined at the present time."
         REFERENCE
             "RFC3036, LDP Specification, Section 2.5.3.,
             Session Initialization"
         ::= { mplsLdpSessionEntry 3 }

     mplsLdpSessionProtocolVersion OBJECT-TYPE
         SYNTAX      Unsigned32(1..65535)
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The version of the LDP Protocol which
             this session is using.  This is the version of
             the LDP protocol which has been negotiated
             during session initialization."
         REFERENCE
            "RFC3036, LDP Specification, Section 3.5.3,
            Initialization Message."
         ::= { mplsLdpSessionEntry 4 }

     mplsLdpSessionKeepAliveHoldTimeRem OBJECT-TYPE
         SYNTAX      TimeInterval
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The keep alive hold time remaining for
             this session."
         ::= { mplsLdpSessionEntry 5 }




Expires December 2003                                          [Page 38]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     mplsLdpSessionKeepAliveTime OBJECT-TYPE
         SYNTAX      Unsigned32 (1..65535)
         UNITS       "seconds"
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The negotiated KeepAlive Time which
             represents the amount of seconds between
             keep alive messages.  The
             mplsLdpEntityKeepAliveHoldTimer
             related to this Session is the
             value that was proposed as the
             KeepAlive Time for this session.

             This value is negotiated during
             session initialization between
             the entity's proposed value
             (i.e. the value configured in
             mplsLdpEntityKeepAliveHoldTimer)
             and the peer's proposed
             KeepAlive Hold Timer value.
             This value is the smaller
             of the two proposed values."
         REFERENCE
            "RFC3036, LDP Specification, Section 3.5.3,
            Initialization Message."
         ::= { mplsLdpSessionEntry 6 }

     mplsLdpSessionMaxPduLength OBJECT-TYPE
         SYNTAX      Unsigned32 (1..65535)
         UNITS       "octets"
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The value of maximum allowable length for LDP PDUs for
             this session.  This value may have been negotiated during
             the Session Initialization.  This object is related to
             the mplsLdpEntityMaxPduLength object.  The
             mplsLdpEntityMaxPduLength object specifies the requested
             LDP PDU length, and this object reflects the negotiated
             LDP PDU length between the Entity and
             the Peer."
         REFERENCE
            "RFC3036, LDP Specification, Section 3.5.3,
            Initialization Message."
         ::= { mplsLdpSessionEntry 7 }


Expires December 2003                                          [Page 39]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     mplsLdpSessionDiscontinuityTime OBJECT-TYPE
         SYNTAX      TimeStamp
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The value of sysUpTime on the most recent occasion
             at which any one or more of this session's counters
             suffered a discontinuity.  The relevant counters are
             the specific instances associated with this session
             of any Counter32 object contained in the
             mplsLdpSessionStatsTable.

             The initial value of this object is the value of
             sysUpTime when the entry was created in this table.

             Also, a command generator can distinguish when a session
             between a given Entity and Peer goes away and a new
             session is established.  This value would change and
             thus indicate to the command generator that this is a
             different session."
         ::= { mplsLdpSessionEntry 8 }


     --
     -- The MPLS LDP Session Statistics Table
     --


     mplsLdpSessionStatsTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsLdpSessionStatsEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "A table of statistics for Sessions between
             LDP Entities and LDP Peers.  This table AUGMENTS
             the mplsLdpPeerTable."
         ::= { mplsLdpSessionObjects 4 }

     mplsLdpSessionStatsEntry OBJECT-TYPE
         SYNTAX      MplsLdpSessionStatsEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An entry in this table represents statistical
             information on a single session between an LDP
             Entity and LDP Peer."


Expires December 2003                                          [Page 40]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         AUGMENTS       { mplsLdpPeerEntry }
         ::= { mplsLdpSessionStatsTable 1 }

     MplsLdpSessionStatsEntry ::= SEQUENCE {
         mplsLdpSessionStatsUnknownMesTypeErrors  Counter32,
         mplsLdpSessionStatsUnknownTlvErrors      Counter32
     }

     mplsLdpSessionStatsUnknownMesTypeErrors OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "This object counts the number of Unknown Message Type
             Errors detected by this LSR/LER during this session.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpSessionDiscontinuityTime."
         ::= { mplsLdpSessionStatsEntry 1 }

     mplsLdpSessionStatsUnknownTlvErrors OBJECT-TYPE
         SYNTAX      Counter32
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "This object counts the number of Unknown TLV Errors
             detected by this LSR/LER during this session.

             Discontinuities in the value of this counter can occur
             at re-initialization of the management system, and at
             other times as indicated by the value of
             mplsLdpSessionDiscontinuityTime."
         ::= { mplsLdpSessionStatsEntry 2 }


     --
     -- The MPLS LDP Hello Adjacency Table
     --

     mplsLdpHelloAdjacencyObjects OBJECT IDENTIFIER ::=
                                   { mplsLdpSessionObjects 5 }

     mplsLdpHelloAdjacencyTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsLdpHelloAdjacencyEntry


Expires December 2003                                          [Page 41]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "A table of Hello Adjacencies for Sessions."
         ::= { mplsLdpHelloAdjacencyObjects 1 }

     mplsLdpHelloAdjacencyEntry OBJECT-TYPE
         SYNTAX      MplsLdpHelloAdjacencyEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "Each row represents a single LDP Hello Adjacency.
             An LDP Session can have one or more Hello
             Adjacencies."
              INDEX       { mplsLdpEntityLdpId,
                            mplsLdpEntityIndex,
                            mplsLdpPeerLdpId,
                            mplsLdpHelloAdjacencyIndex }
         ::= { mplsLdpHelloAdjacencyTable 1 }

     MplsLdpHelloAdjacencyEntry ::= SEQUENCE {
         mplsLdpHelloAdjacencyIndex         Unsigned32,
         mplsLdpHelloAdjacencyHoldTimeRem   TimeInterval,
         mplsLdpHelloAdjacencyHoldTime      Unsigned32,
         mplsLdpHelloAdjacencyType          INTEGER
     }

     mplsLdpHelloAdjacencyIndex OBJECT-TYPE
         SYNTAX      Unsigned32 (1..4294967295)
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An identifier for this specific adjacency."
         ::= { mplsLdpHelloAdjacencyEntry 1 }

     mplsLdpHelloAdjacencyHoldTimeRem OBJECT-TYPE
         SYNTAX      TimeInterval
         UNITS       "seconds"
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "If the value of this object is 65535,
             this means that the hold time is infinite
             (i.e. wait forever).

             Otherwise, the time remaining for


Expires December 2003                                          [Page 42]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             this Hello Adjacency to receive its
             next Hello Message.

             This interval will change when the 'next'
             Hello Message which corresponds to this
             Hello Adjacency is received unless it
             is infinite."
         ::= { mplsLdpHelloAdjacencyEntry 2 }

     mplsLdpHelloAdjacencyHoldTime OBJECT-TYPE
         SYNTAX Unsigned32 (0..65535)
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The Hello hold time which is negotiated between
             the Entity and the Peer.  The entity associated
             with this Hello Adjacency issues a proposed
             Hello Hold Time value in the
             mplsLdpEntityHelloHoldTimer object.  The peer
             also proposes a value and this object represents
             the negotiated value.

             A value of 0 means the default,
             which is 15 seconds for Link Hellos
             and 45 seconds for Targeted Hellos.
             A value of 65535 indicates an
             infinite hold time."
         REFERENCE
            "RFC3036, LDP Specification, Section 3.5.2 Hello Message"
         ::= { mplsLdpHelloAdjacencyEntry 3 }

     mplsLdpHelloAdjacencyType OBJECT-TYPE
         SYNTAX      INTEGER {
                        link(1),
                        targeted(2)
                     }
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "This adjacency is the result of a 'link'
             hello if the value of this object is link(1).
             Otherwise, it is a result of a 'targeted'
             hello, targeted(2)."
         ::= { mplsLdpHelloAdjacencyEntry 4 }




Expires December 2003                                          [Page 43]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     --
     --  Session Label (LSP) Mapping to LSR MIB's
     --  In Segment LIB Information.
     --

     --
     -- NOTE: the next 2 tables map to the
     -- MPLS-LSR-STD-MIB's MplsInSegmentTable
     -- and MplsOutSegmentTable.  The
     -- cross-connect (XC) information is not
     -- represented here as it can be gleaned
     -- from the MPLS-LSR-STD-MIB.
     --


     mplsInSegmentLdpLspTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsInSegmentLdpLspEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "A table of LDP LSP's which
             map to the mplsInSegmentTable in the
             the MPLS-LSR-STD-MIB module."
         ::= { mplsLdpSessionObjects 6 }

     mplsInSegmentLdpLspEntry OBJECT-TYPE
         SYNTAX      MplsInSegmentLdpLspEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An entry in this table represents information
             on a single LDP LSP which is represented by
             a session's index triple (mplsLdpEntityLdpId,
             mplsLdpEntityIndex, mplsLdpPeerLdpId) AND the
             index for the mplsInSegmentTable
             (mplsInSegmentLdpLspLabelIndex) from the
             MPLS-LSR-STD-MIB.

             The information contained in a row is read-only."
         INDEX       { mplsLdpEntityLdpId,
                       mplsLdpEntityIndex,
                       mplsLdpPeerLdpId,
                       mplsInSegmentLdpLspIndex
                     }
         ::= { mplsInSegmentLdpLspTable 1 }



Expires December 2003                                          [Page 44]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     MplsInSegmentLdpLspEntry ::= SEQUENCE {
         mplsInSegmentLdpLspIndex                 MplsIndexType,
         mplsInSegmentLdpLspLabelType             MplsLdpLabelType,
         mplsInSegmentLdpLspType                  MplsLspType
     }

     mplsInSegmentLdpLspIndex OBJECT-TYPE
         SYNTAX        MplsIndexType
         MAX-ACCESS    not-accessible
         STATUS        current
         DESCRIPTION
             "This contains the same value as the
             mplsInSegmentIndex in the
             MPLS-LSR-STD-MIB's mplsInSegmentTable."
         ::= { mplsInSegmentLdpLspEntry 1 }

     mplsInSegmentLdpLspLabelType  OBJECT-TYPE
         SYNTAX        MplsLdpLabelType
         MAX-ACCESS    read-only
         STATUS        current
         DESCRIPTION
             "The Layer 2 Label Type."
         ::= { mplsInSegmentLdpLspEntry 2 }

     mplsInSegmentLdpLspType OBJECT-TYPE
         SYNTAX        MplsLspType
         MAX-ACCESS    read-only
         STATUS        current
         DESCRIPTION
             "The type of LSP connection."
         ::= { mplsInSegmentLdpLspEntry 3 }


     --
     --  Session Label (LSP) Mapping to LSR MIB's
     --  Out Segment LIB Information.
     --

     mplsOutSegmentLdpLspTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsOutSegmentLdpLspEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "A table of LDP LSP's which
             map to the mplsOutSegmentTable in the
             the MPLS-LSR-STD-MIB."


Expires December 2003                                          [Page 45]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         ::= { mplsLdpSessionObjects 7 }

     mplsOutSegmentLdpLspEntry OBJECT-TYPE
         SYNTAX      MplsOutSegmentLdpLspEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An entry in this table represents information
             on a single LDP LSP which is represented by
             a session's index triple (mplsLdpEntityLdpId,
             mplsLdpEntityIndex, mplsLdpPeerLdpId) AND the
             index (mplsOutSegmentLdpLspIndex)
             for the mplsOutSegmentTable.

             The information contained in a row is read-only."
         INDEX       { mplsLdpEntityLdpId,
                       mplsLdpEntityIndex,
                       mplsLdpPeerLdpId,
                       mplsOutSegmentLdpLspIndex
                     }
         ::= { mplsOutSegmentLdpLspTable 1 }

     MplsOutSegmentLdpLspEntry ::= SEQUENCE {
         mplsOutSegmentLdpLspIndex                 MplsIndexType,
         mplsOutSegmentLdpLspLabelType             MplsLdpLabelType,
         mplsOutSegmentLdpLspType                  MplsLspType
     }

     mplsOutSegmentLdpLspIndex OBJECT-TYPE
         SYNTAX       MplsIndexType
         MAX-ACCESS   not-accessible
         STATUS       current
         DESCRIPTION
             "This contains the same value as the
             mplsOutSegmentIndex in the
             MPLS-LSR-STD-MIB's mplsOutSegmentTable."
         ::= { mplsOutSegmentLdpLspEntry 1 }


     mplsOutSegmentLdpLspLabelType  OBJECT-TYPE
         SYNTAX        MplsLdpLabelType
         MAX-ACCESS    read-only
         STATUS        current
         DESCRIPTION
             "The Layer 2 Label Type."
         ::= { mplsOutSegmentLdpLspEntry 2 }


Expires December 2003                                          [Page 46]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     mplsOutSegmentLdpLspType OBJECT-TYPE
         SYNTAX        MplsLspType
         MAX-ACCESS    read-only
         STATUS        current
         DESCRIPTION
             "The type of LSP connection."
         ::= { mplsOutSegmentLdpLspEntry 3 }


     --
     -- Mpls FEC Table
     --

     mplsFecObjects OBJECT IDENTIFIER ::=
                                { mplsLdpSessionObjects 8 }


     mplsFecLastChange OBJECT-TYPE
         SYNTAX  TimeStamp
         MAX-ACCESS read-only
         STATUS current
         DESCRIPTION
             "The value of sysUpTime at the time of the most
             recent addition/deletion of an entry
             to/from the mplsLdpFectTable or
             the most recent change in values to any objects
             in the mplsLdpFecTable.

             If no such changes have occurred since the last
             re-initialization of the local management subsystem,
             then this object contains a zero value."
        ::= { mplsFecObjects 1 }


     mplsFecIndexNext  OBJECT-TYPE
         SYNTAX         IndexIntegerNextFree
         MAX-ACCESS     read-only
         STATUS         current
         DESCRIPTION
             "This object contains an appropriate value to
             be used for mplsFecIndex when creating
             entries in the mplsFecTable. The value
             0 indicates that no unassigned entries are
             available."
        ::= { mplsFecObjects 2 }



Expires December 2003                                          [Page 47]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     mplsFecTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsFecEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "This table represents the FEC
             (Forwarding Equivalence Class)
             Information associated with an LSP."
         ::= { mplsFecObjects 3 }

     mplsFecEntry OBJECT-TYPE
         SYNTAX      MplsFecEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "Each row represents a single FEC Element."
         INDEX       { mplsFecIndex }
         ::= { mplsFecTable 1 }

     MplsFecEntry ::= SEQUENCE {
         mplsFecIndex               IndexInteger,
         mplsFecType                INTEGER,
         mplsFecAddrType            InetAddressType,
         mplsFecAddr                InetAddress,
         mplsFecAddrPrefixLength    InetAddressPrefixLength,
         mplsFecStorageType         StorageType,
         mplsFecRowStatus           RowStatus
     }

     mplsFecIndex OBJECT-TYPE
         SYNTAX      IndexInteger
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "The index which uniquely identifies this entry."
         ::= { mplsFecEntry 1 }

     mplsFecType  OBJECT-TYPE
         SYNTAX      INTEGER {
                        prefix(1),
                        hostAddress(2)
                     }
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The type of the FEC.  If the value of this object


Expires December 2003                                          [Page 48]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             is 'prefix(1)' then the FEC type described by this
             row is an address prefix.

             If the value of this object is 'hostAddress(2)' then
             the FEC type described by this row is a host address."
         REFERENCE
             "RFC3036, Section 3.4.1. FEC TLV."
         ::= { mplsFecEntry 2 }


     mplsFecAddrType  OBJECT-TYPE
         SYNTAX      InetAddressType
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The value of this object is the type of the
             Internet address.  The value of this object,
             decides how the value of the mplsFecAddr object
             is interpreted."
         REFERENCE
             "RFC3036, Section 3.4.1. FEC TLV."
         ::= { mplsFecEntry 4 }

     mplsFecAddr     OBJECT-TYPE
         SYNTAX      InetAddress
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The value of this object is interpreted based
             on the value of the 'mplsFecAddrType' object.

             This address is then further interpretted as
             an being used with the address prefix,
             or as the host address.  This further interpretation
             is indicated by the 'mplsFecType' object.
             In other words, the FEC element is populated
             according to the Prefix FEC Element value encoding, or
             the Host Address FEC Element encoding."
         REFERENCE
             "RFC3036, Section 3.4.1 FEC TLV."
         ::= { mplsFecEntry 5 }

     mplsFecAddrPrefixLength  OBJECT-TYPE
         SYNTAX      InetAddressPrefixLength
         MAX-ACCESS  read-create
         STATUS      current


Expires December 2003                                          [Page 49]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         DESCRIPTION
             "If the value of the 'mplsFecType' is 'hostAddress(2)'
             then this object is undefined.

             If the value of 'mplsFecType' is 'prefix(1)'
             then the value of this object is the length in
             bits of the address prefix represented by
             'mplsFecAddr', or zero.  If the value of this
             object is zero, this indicates that the
             prefix matches all addresses.  In this case the
             address prefix MUST also be zero (i.e. 'mplsFecAddr'
             should have the value of zero.)"
         REFERENCE
             "RFC3036, Section 3.4.1. FEC TLV."
         DEFVAL { 0 }
         ::= { mplsFecEntry 3 }

     mplsFecStorageType  OBJECT-TYPE
         SYNTAX      StorageType
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The storage type for this conceptual row.
             Conceptual rows having the value 'permanent(4)'
             need not allow write-access to any columnar
             objects in the row."
         DEFVAL { nonVolatile }
         ::= { mplsFecEntry 6 }

     mplsFecRowStatus OBJECT-TYPE
         SYNTAX      RowStatus
         MAX-ACCESS  read-create
         STATUS      current
         DESCRIPTION
             "The status of this conceptual row.  If the value of this
             object is 'active(1)', then none of the writable objects of
             this entry can be modified, except to set this object
             to 'destroy(6)'.

             NOTE: if this row is being referenced by any entry in the
             mplsLdpLspFecTable, then a request to destroy this row, will
             result in an inconsistentValue error."
         ::= { mplsFecEntry 7 }


     --


Expires December 2003                                          [Page 50]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     --  LDP LSP FEC Table
     --


     mplsLdpLspFecLastChange OBJECT-TYPE
        SYNTAX TimeStamp
        MAX-ACCESS read-only
        STATUS current
        DESCRIPTION
             "The value of sysUpTime at the time of the most
             recent addition/deletion of an entry
             to/from the mplsLdpLspFecTable or
             the most recent change in values to any objects in the
             mplsLdpLspFecTable.

             If no such changes have occurred since the last
             re-initialization of the local management subsystem,
             then this object contains a zero value."
       ::= { mplsLdpSessionObjects 9 }


     mplsLdpLspFecTable OBJECT-TYPE
        SYNTAX      SEQUENCE OF MplsLdpLspFecEntry
        MAX-ACCESS  not-accessible
        STATUS      current
        DESCRIPTION
           "A table which shows the relationship between
           LDP LSPs and FECs.  Each row represents
           a single LDP LSP to FEC association."
       ::= { mplsLdpSessionObjects 10 }

     mplsLdpLspFecEntry OBJECT-TYPE
        SYNTAX     MplsLdpLspFecEntry
        MAX-ACCESS not-accessible
        STATUS     current
        DESCRIPTION
           "An entry represents a LDP LSP
           to FEC association."
        INDEX       { mplsLdpEntityLdpId,
                      mplsLdpEntityIndex,
                      mplsLdpPeerLdpId,
                      mplsLdpLspFecSegment,
                      mplsLdpLspFecSegmentIndex,
                      mplsLdpLspFecIndex
                     }
        ::= { mplsLdpLspFecTable 1 }


Expires December 2003                                          [Page 51]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     MplsLdpLspFecEntry ::= SEQUENCE {
        mplsLdpLspFecSegment       INTEGER,
        mplsLdpLspFecSegmentIndex  MplsIndexType,
        mplsLdpLspFecIndex         IndexInteger,
        mplsLdpLspFecStorageType   StorageType,
        mplsLdpLspFecRowStatus     RowStatus
     }

     mplsLdpLspFecSegment OBJECT-TYPE
         SYNTAX INTEGER {
                            inSegment(1),
                            outSegment(2)
                        }
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
            "If the value is inSegment(1), then this
            indicates that the following index,
            mplsLdpLspFecSegmentIndex, contains the same
            value as the mplsInSegmentLdpLspIndex.

            Otherwise, if the value of this object is
            outSegment(2),  then this
            indicates that following index,
            mplsLdpLspFecSegmentIndex, contains the same
            value as the mplsOutSegmentLdpLspIndex."
         ::= { mplsLdpLspFecEntry 1 }


     mplsLdpLspFecSegmentIndex OBJECT-TYPE
         SYNTAX      MplsIndexType
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
            "This index is interpretted by using the value
            of the mplsLdpLspFecSegment.

            If the mplsLdpLspFecSegment is inSegment(1),
            then this index has the same value as
            mplsInSegmentLdpLspIndex.

            If the mplsLdpLspFecSegment is outSegment(2),
            then this index has the same value as
            mplsOutSegmentLdpLspIndex."
         ::= { mplsLdpLspFecEntry 2 }



Expires December 2003                                          [Page 52]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     mplsLdpLspFecIndex   OBJECT-TYPE
         SYNTAX      IndexInteger
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "This index identifies the FEC entry in the
             mplsFecTable associated with this session.
             In other words, the value of this index
             is the same as the value of the mplsFecIndex
             that denotes the FEC associated with this
             Session."
         ::= { mplsLdpLspFecEntry 3 }


     mplsLdpLspFecStorageType  OBJECT-TYPE
        SYNTAX      StorageType
        MAX-ACCESS  read-create
        STATUS      current
        DESCRIPTION
            "The storage type for this conceptual row.
            Conceptual rows having the value 'permanent(4)'
            need not allow write-access to any columnar
            objects in the row."
        DEFVAL { nonVolatile }
        ::= { mplsLdpLspFecEntry 4 }

     mplsLdpLspFecRowStatus  OBJECT-TYPE
        SYNTAX     RowStatus
        MAX-ACCESS read-create
        STATUS     current
        DESCRIPTION
            "The status of this conceptual row.  If the
             value of this object is 'active(1)', then
             none of the writable objects of this entry
             can be modified.

             The Agent should delete this row when
             the session ceases to exist.  If an
             operator wants to associate the session with
             a different FEC, the recommended
             procedure is (as described in detail in the section
             entitled, 'Changing Values After Session
             Establishment', and again described in the
             DESCRIPTION clause of the
             mplsLdpEntityAdminStatus object)
             is to set the mplsLdpEntityAdminStatus to


Expires December 2003                                          [Page 53]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             down, thereby explicitly causing a session
             to be torn down. This will also
             cause this entry to be deleted.

             Then, set the mplsLdpEntityAdminStatus
             to enable which enables a new session to be initiated.
             Once the session is initiated, an entry may be added to this
             table to associate the new session with a FEC."
        ::= { mplsLdpLspFecEntry 5 }



     --
     -- Address Message/Address Withdraw Message Information
     --
     -- This information is associated with a specific Session
     -- because Label Address Messages are sent after session
     -- initialization has taken place.
     --

     mplsLdpSessionPeerAddrTable OBJECT-TYPE
         SYNTAX      SEQUENCE OF MplsLdpSessionPeerAddrEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "This table 'extends' the mplsLdpSessionTable.
             This table is used to store Label Address Information
             from Label Address Messages received by this LSR from
             Peers.  This table is read-only and should be updated
             when Label Withdraw Address Messages are received, i.e.
             Rows should be deleted as apropriate.

             NOTE:  since more than one address may be contained
             in a Label Address Message, this table 'sparse augments',
             the mplsLdpSessionTable's information."
         ::= { mplsLdpSessionObjects 11 }

     mplsLdpSessionPeerAddrEntry OBJECT-TYPE
         SYNTAX      MplsLdpSessionPeerAddrEntry
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An entry in this table represents information on
             a session's single next hop address which was
             advertised in an Address Message from the LDP peer.
             The information contained in a row is read-only."


Expires December 2003                                          [Page 54]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         INDEX       { mplsLdpEntityLdpId,
                       mplsLdpEntityIndex,
                       mplsLdpPeerLdpId,
                       mplsLdpSessionPeerAddrIndex
                     }
         ::= { mplsLdpSessionPeerAddrTable 1 }

     MplsLdpSessionPeerAddrEntry ::= SEQUENCE {
         mplsLdpSessionPeerAddrIndex       Unsigned32,
         mplsLdpSessionPeerNextHopAddrType InetAddressType,
         mplsLdpSessionPeerNextHopAddr     InetAddress
     }

     mplsLdpSessionPeerAddrIndex OBJECT-TYPE
         SYNTAX      Unsigned32 (1..4294967295)
         MAX-ACCESS  not-accessible
         STATUS      current
         DESCRIPTION
             "An index which uniquely identifies this entry within
             a given session."
         ::= { mplsLdpSessionPeerAddrEntry 1 }

     mplsLdpSessionPeerNextHopAddrType OBJECT-TYPE
         SYNTAX      InetAddressType
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The internetwork layer address type of this Next Hop
             Address as specified in the Label Address Message
             associated with this Session. The value of this
             object indicates how to interpret the value of
             mplsLdpSessionPeerNextHopAddr."
         ::= { mplsLdpSessionPeerAddrEntry 2 }

     mplsLdpSessionPeerNextHopAddr OBJECT-TYPE
         SYNTAX      InetAddress
         MAX-ACCESS  read-only
         STATUS      current
         DESCRIPTION
             "The next hop address.  The type of this address
             is specified by the value of the
             mplsLdpSessionPeerNextHopAddrType."
         REFERENCE
             "RFC3036, Section 2.7. LDP Identifiers
             and Next Hop Addresses"
         ::= { mplsLdpSessionPeerAddrEntry 3 }


Expires December 2003                                          [Page 55]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     ---
     --- Notifications
     ---

     mplsLdpInitSessionThresholdExceeded NOTIFICATION-TYPE
          OBJECTS     {
                        mplsLdpEntityInitSessionThreshold
                      }
          STATUS      current
          DESCRIPTION
             "This notification is generated when the value of
             the 'mplsLdpEntityInitSessionThreshold' object
             is not zero, and the number of Session
             Initialization messages exceeds the value
             of the 'mplsLdpEntityInitSessionThreshold' object."
          ::= { mplsLdpNotifications 1 }

     mplsLdpPathVectorLimitMismatch NOTIFICATION-TYPE
          OBJECTS     {
                        mplsLdpEntityPathVectorLimit,
                        mplsLdpPeerPathVectorLimit
                      }
          STATUS      current
          DESCRIPTION
             "This notification is sent when the
             'mplsLdpEntityPathVectorLimit' does NOT match
             the value of the 'mplsLdpPeerPathVectorLimit' for
             a specific Entity."
          REFERENCE
             "RFC3036, LDP Specification, Section 3.5.3."
          ::= { mplsLdpNotifications 2 }

     mplsLdpSessionUp NOTIFICATION-TYPE
          OBJECTS     {
                         mplsLdpSessionState,
                         mplsLdpSessionDiscontinuityTime,
                         mplsLdpSessionStatsUnknownMesTypeErrors,
                         mplsLdpSessionStatsUnknownTlvErrors
                      }
          STATUS      current
          DESCRIPTION
             "If this notification is sent when the
             value of 'mplsLdpSessionState' enters
             the 'operational(5)' state."
          ::= { mplsLdpNotifications 3 }



Expires December 2003                                          [Page 56]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     mplsLdpSessionDown NOTIFICATION-TYPE
          OBJECTS     {
                         mplsLdpSessionState,
                         mplsLdpSessionDiscontinuityTime,
                         mplsLdpSessionStatsUnknownMesTypeErrors,
                         mplsLdpSessionStatsUnknownTlvErrors

                      }
          STATUS      current
          DESCRIPTION
             "This notification is sent when the
             the value of 'mplsLdpSessionState' leaves
             the 'operational(5)' state."
          ::= { mplsLdpNotifications 4 }


     --****************************************************************
     -- Module Conformance Statement
     --****************************************************************


     mplsLdpGroups
         OBJECT IDENTIFIER ::= { mplsLdpConformance 1 }

     mplsLdpCompliances
         OBJECT IDENTIFIER ::= { mplsLdpConformance 2 }

     --
     -- Full Compliance
     --

     mplsLdpModuleFullCompliance MODULE-COMPLIANCE
         STATUS current
         DESCRIPTION
             "The Module is implemented with support
             for read-create and read-write.  In other
             words, both monitoring and configuration
             are available when using this MODULE-COMPLIANCE."

         MODULE -- this module
             MANDATORY-GROUPS    { mplsLdpGeneralGroup,
                                   mplsLdpNotificationsGroup
                                 }


         GROUP mplsLdpLspGroup


Expires December 2003                                          [Page 57]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         DESCRIPTION
             "This group must be supported if the LSR MIB is
             implemented, specifically the mplsInSegmentTable,
             the mplsOutSegmentTable or the mplsXCTable."

         OBJECT mplsLdpEntityTargetPeerAddrType
         SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2) }
         DESCRIPTION
            "An implementation is only required to support
            'unknown(0)', IPv4 and globally unique IPv6 addresses."


         OBJECT mplsLdpEntityTargetPeerAddr
         SYNTAX InetAddress (SIZE(0|4|16))
         DESCRIPTION
             "An implementation is only required to support IPv4 and
             globally unique IPv6 addresses."

         OBJECT mplsLdpEntityRowStatus
         SYNTAX RowStatus { active(1) }
         WRITE-SYNTAX RowStatus { createAndGo(4), destroy(6) }
         DESCRIPTION
             "Support for createAndWait and notInService is not
             required."

         OBJECT mplsFecAddrType
         SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2) }
         DESCRIPTION
            "An implementation is only required to support
            'unknown(0)', IPv4 and globally unique IPv6 addresses."

         OBJECT mplsFecAddr
         SYNTAX InetAddress (SIZE(0|4|16))
         DESCRIPTION
             "An implementation is only required to support IPv4 and
             globally unique IPv6 addresses."

         OBJECT mplsFecRowStatus
         SYNTAX RowStatus { active(1) }
         WRITE-SYNTAX RowStatus { createAndGo(4), destroy(6) }
         MIN-ACCESS   read-only
         DESCRIPTION
             "Support for createAndWait and notInService is not
             required. Also, the entries in this table may be
             created by the agent, so strictly speaking
             read-create functionality is not necessary, but


Expires December 2003                                          [Page 58]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


             may be nice to have."

         OBJECT mplsLdpLspFecRowStatus
         SYNTAX RowStatus { active(1) }
         WRITE-SYNTAX RowStatus { createAndGo(4), destroy(6) }
         MIN-ACCESS   read-only
         DESCRIPTION
             "Support for createAndWait and notInService is not
             required. Also, the entries in this table may be
             created by the agent, so strictly speaking
             read-create functionality is not necessary, but
             may be nice to have."

         OBJECT mplsLdpSessionPeerNextHopAddrType
         SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2) }
         DESCRIPTION
             "An implementation is only required to support
             'unknown(0)', IPv4 and globally unique IPv6 addresses."

         OBJECT mplsLdpSessionPeerNextHopAddr
         SYNTAX InetAddress (SIZE(0|4|16))
         DESCRIPTION
             "An implementation is only required to support IPv4
             and globally unique IPv6 addresses."


         ::= { mplsLdpCompliances 1 }

     --
     -- Read-Only Compliance
     --


     mplsLdpModuleReadOnlyCompliance MODULE-COMPLIANCE
         STATUS current
         DESCRIPTION
             "The Module is implemented with support
             for read-only.  In other words, only monitoring
             is available by implementing this MODULE-COMPLIANCE."

         MODULE -- this module
             MANDATORY-GROUPS    { mplsLdpGeneralGroup,
                                   mplsLdpNotificationsGroup
                                 }




Expires December 2003                                          [Page 59]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         GROUP mplsLdpLspGroup
         DESCRIPTION
             "This group must be supported if the LSR MIB is
             implemented, specifically the mplsInSegmentTable,
             the mplsOutSegmentTable or the mplsXCTable."

         OBJECT       mplsLdpEntityProtocolVersion
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityAdminStatus
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityTcpDscPort
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityUdpDscPort
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityMaxPduLength
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityKeepAliveHoldTimer
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityHelloHoldTimer
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityInitSessionThreshold
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."



Expires December 2003                                          [Page 60]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         OBJECT       mplsLdpEntityLabelDistMethod
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityLabelRetentionMode
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityPathVectorLimit
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityHopCountLimit
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityTransportAddrKind
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."


         OBJECT       mplsLdpEntityTargetPeer
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityTargetPeerAddrType
         SYNTAX       InetAddressType { unknown(0), ipv4(1), ipv6(2) }
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required.
            An implementation is only required to support
            'unknown(0)', IPv4 and globally unique IPv6 addresses."

         OBJECT       mplsLdpEntityTargetPeerAddr
         SYNTAX       InetAddress (SIZE(0|4|16))
         MIN-ACCESS   read-only
         DESCRIPTION
             "Write access is not required.
             An implementation is only required to support IPv4 and
             globally unique IPv6 addresses."


Expires December 2003                                          [Page 61]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         OBJECT       mplsLdpEntityLabelType
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsLdpEntityStorageType
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT mplsLdpEntityRowStatus
         SYNTAX RowStatus { active(1) }
         MIN-ACCESS   read-only
         DESCRIPTION
             "Write access is not required, and active is the
             only status that needs to be supported."

         OBJECT       mplsFecType
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsFecAddrPrefixLength
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT       mplsFecAddrType
         SYNTAX       InetAddressType { unknown(0), ipv4(1), ipv6(2) }
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required.
            An implementation is only required to support
            'unknown(0)', IPv4 and globally unique IPv6 addresses."


         OBJECT        mplsFecAddr
         SYNTAX        InetAddress (SIZE(0|4|16))
         MIN-ACCESS    read-only
         DESCRIPTION
             "Write access is not required.
             An implementation is only required to support IPv4 and
             globally unique IPv6 addresses."

         OBJECT       mplsFecStorageType
         MIN-ACCESS   read-only


Expires December 2003                                          [Page 62]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         DESCRIPTION
            "Write access is not required."

         OBJECT mplsFecRowStatus
         SYNTAX RowStatus { active(1) }
         MIN-ACCESS   read-only
         DESCRIPTION
             "Write access is not required, and active is the
             only status that needs to be supported."


         OBJECT       mplsLdpLspFecStorageType
         MIN-ACCESS   read-only
         DESCRIPTION
            "Write access is not required."

         OBJECT mplsLdpLspFecRowStatus
         SYNTAX RowStatus { active(1) }
         MIN-ACCESS   read-only
         DESCRIPTION
             "Write access is not required, and active is the
             only status that needs to be supported."

         OBJECT mplsLdpSessionPeerNextHopAddrType
         SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2) }
         DESCRIPTION
            "An implementation is only required to support
            'unknown(0)', IPv4 and globally unique IPv6 addresses."


         OBJECT mplsLdpSessionPeerNextHopAddr
         SYNTAX InetAddress (SIZE(0|4|16))
         DESCRIPTION
             "An implementation is only required to support IPv4
             and globally unique IPv6 addresses."

         ::= { mplsLdpCompliances 2 }


     -- units of conformance

     mplsLdpGeneralGroup OBJECT-GROUP
         OBJECTS {
         mplsLdpLsrId,
         mplsLdpLsrLoopDetectionCapable,
         mplsLdpEntityLastChange,


Expires December 2003                                          [Page 63]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         mplsLdpEntityIndexNext,
         mplsLdpEntityProtocolVersion,
         mplsLdpEntityAdminStatus,
         mplsLdpEntityOperStatus,
         mplsLdpEntityTcpDscPort,
         mplsLdpEntityUdpDscPort,
         mplsLdpEntityMaxPduLength,
         mplsLdpEntityKeepAliveHoldTimer,
         mplsLdpEntityHelloHoldTimer,
         mplsLdpEntityInitSessionThreshold,
         mplsLdpEntityLabelDistMethod,
         mplsLdpEntityLabelRetentionMode,
         mplsLdpEntityPathVectorLimit,
         mplsLdpEntityHopCountLimit,
         mplsLdpEntityTransportAddrKind,
         mplsLdpEntityTargetPeer,
         mplsLdpEntityTargetPeerAddrType,
         mplsLdpEntityTargetPeerAddr,
         mplsLdpEntityLabelType,
         mplsLdpEntityDiscontinuityTime,
         mplsLdpEntityStorageType,
         mplsLdpEntityRowStatus,
         mplsLdpEntityStatsSessionAttempts,
         mplsLdpEntityStatsSessionRejectedNoHelloErrors,
         mplsLdpEntityStatsSessionRejectedAdErrors,
         mplsLdpEntityStatsSessionRejectedMaxPduErrors,
         mplsLdpEntityStatsSessionRejectedLRErrors,
         mplsLdpEntityStatsBadLdpIdentifierErrors,
         mplsLdpEntityStatsBadPduLengthErrors,
         mplsLdpEntityStatsBadMessageLengthErrors,
         mplsLdpEntityStatsBadTlvLengthErrors,
         mplsLdpEntityStatsMalformedTlvValueErrors,
         mplsLdpEntityStatsKeepAliveTimerExpErrors,
         mplsLdpEntityStatsShutdownReceivedNotifications,
         mplsLdpEntityStatsShutdownSentNotifications,
         mplsLdpPeerLastChange,
         mplsLdpPeerLabelDistMethod,
         mplsLdpPeerPathVectorLimit,
         mplsLdpPeerTransportAddrType,
         mplsLdpPeerTransportAddr,
         mplsLdpHelloAdjacencyHoldTimeRem,
         mplsLdpHelloAdjacencyHoldTime,
         mplsLdpHelloAdjacencyType,
         mplsLdpSessionStateLastChange,
         mplsLdpSessionState,
         mplsLdpSessionRole,


Expires December 2003                                          [Page 64]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


         mplsLdpSessionProtocolVersion,
         mplsLdpSessionKeepAliveHoldTimeRem,
         mplsLdpSessionKeepAliveTime,
         mplsLdpSessionMaxPduLength,
         mplsLdpSessionDiscontinuityTime,
         mplsLdpSessionStatsUnknownMesTypeErrors,
         mplsLdpSessionStatsUnknownTlvErrors,
         mplsLdpSessionPeerNextHopAddrType,
         mplsLdpSessionPeerNextHopAddr,
         mplsFecLastChange,
         mplsFecIndexNext,
         mplsFecType,
         mplsFecAddrType,
         mplsFecAddr,
         mplsFecAddrPrefixLength,
         mplsFecStorageType,
         mplsFecRowStatus
         }
         STATUS    current
         DESCRIPTION
             "Objects that apply to all MPLS LDP implementations."
         ::= { mplsLdpGroups 1 }


     mplsLdpLspGroup OBJECT-GROUP
         OBJECTS {
         mplsInSegmentLdpLspLabelType,
         mplsInSegmentLdpLspType,
         mplsOutSegmentLdpLspLabelType,
         mplsOutSegmentLdpLspType,
         mplsLdpLspFecLastChange,
         mplsLdpLspFecStorageType,
         mplsLdpLspFecRowStatus
         }
         STATUS    current
         DESCRIPTION
             "These objects are for LDP implementations
             which interface to the Label Information Base (LIB)
             in the MPLS-LSR-STD-MIB.  The LIB is
             represented in the mplsInSegmentTable,
             mplsOutSegmentTable and mplsXCTable."
         ::= { mplsLdpGroups 2 }


     mplsLdpNotificationsGroup NOTIFICATION-GROUP
         NOTIFICATIONS { mplsLdpInitSessionThresholdExceeded,


Expires December 2003                                          [Page 65]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


                         mplsLdpPathVectorLimitMismatch,
                         mplsLdpSessionUp,
                         mplsLdpSessionDown
                            }
         STATUS   current
         DESCRIPTION
             "The notification for an MPLS LDP implemention."
         ::= { mplsLdpGroups 3 }


     END




4.1.  The MPLS-LDP-ATM-STD-MIB Module

   This MIB Module MUST be supported if LDP uses ATM as the Layer 2
   medium.  There are three tables in this MIB Module.  Two tables are
   for configuring LDP to use ATM.  These tables are the
   mplsLdpEntityAtmTable and the mplsLdpEntityAtmLRTable.  The third
   table is the mplsLdpAtmSessionTable which is a read-only table.


4.1.1.  The LDP Entity ATM Table

   The mplsLdpEntityAtmTable provides a way to configure information
   which would be contained in the "Optional Parameter" portion of an
   LDP PDU Initialization Message.


4.1.2.  The LDP Entity ATM Label Range Table

   The mplsLdpEntityAtmLRTable provides a way to configure information
   which would be contained in the "ATM Label Range Components" portion
   of an LDP PDU Intialization Message, see  [RFC3035] and [RFC3036].


4.1.3.  The LDP ATM Session Table

   The MPLS LDP ATM Session Table is a read-only table which contains
   session information specific to ATM.


   MPLS-LDP-ATM-STD-MIB DEFINITIONS ::= BEGIN



Expires December 2003                                          [Page 66]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   IMPORTS
       OBJECT-TYPE, MODULE-IDENTITY,
       Unsigned32
           FROM SNMPv2-SMI
       MODULE-COMPLIANCE, OBJECT-GROUP
           FROM SNMPv2-CONF

       RowStatus,
       StorageType
           FROM SNMPv2-TC

       InterfaceIndexOrZero
           FROM IF-MIB

       AtmVpIdentifier
           FROM ATM-TC-MIB

       mplsStdMIB,
       MplsAtmVcIdentifier
           FROM MPLS-TC-STD-MIB

       mplsLdpEntityLdpId,
       mplsLdpEntityIndex,
       mplsLdpPeerLdpId
           FROM MPLS-LDP-STD-MIB

       ;


   mplsLdpAtmStdMIB MODULE-IDENTITY
       LAST-UPDATED "200306281200Z"  -- 28 June 2003
       ORGANIZATION "Multiprotocol Label Switching (mpls)
                     Working Group"
       CONTACT-INFO
           "Joan Cucchiara (jcucchiara@artel.com)
            Artel

            Hans Sjostrand (hans@ipunplugged.com)
            ipUnplugged

            James V. Luciani (james_luciani@mindspring.com)
            Consultant

            Working Group Chairs:
            George Swallow,   email: swallow@cisco.com
            Loa Andersson,    email: loa@pi.se


Expires December 2003                                          [Page 67]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


            MPLS Working Group, email: mpls@uu.net
       "
       DESCRIPTION
           "Copyright (C) The Internet Society (2003).  This
           version of this MIB module is part of RFCXXX; see
           the RFC itself for full legal notices.

           This MIB contains managed object definitions for
           configuring and monitoring the Multiprotocol Label
           Switching (MPLS), Label Distribution Protocol (LDP),
           utilizing Asynchronous Transfer Mode (ATM) as the Layer 2
           media."
       REVISION "200306281200Z"  -- 28 June 2003
       DESCRIPTION
           "Initial version published as part of RFC XXXX."

       -- Please see the IANA Considerations Section
       -- the suggested mplsStdMIB subId is 5, e.g.
       --  ::= { mplsStdMIB 5 }

       ::= { mplsStdMIB XXX } -- to be assigned by IANA

   --****************************************************************


   mplsLdpAtmObjects       OBJECT IDENTIFIER
                               ::= { mplsLdpAtmStdMIB 1 }
   mplsLdpAtmConformance   OBJECT IDENTIFIER
                               ::= { mplsLdpAtmStdMIB 2 }

   --****************************************************************
   -- MPLS LDP ATM Objects
   --****************************************************************

   --
   -- Ldp Entity Objects for ATM
   --

   mplsLdpEntityAtmObjects  OBJECT IDENTIFIER ::=
                                 { mplsLdpAtmObjects 1 }

   mplsLdpEntityAtmTable  OBJECT-TYPE
       SYNTAX      SEQUENCE OF MplsLdpEntityAtmEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION


Expires December 2003                                          [Page 68]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


           "This table contains ATM specific information
           which could be used in the
           'Optional Parameters' and other ATM specific
           information.

           This table 'sparse augments' the mplsLdpEntityTable
           when ATM is the Layer 2 medium."
       ::= { mplsLdpEntityAtmObjects 1 }

   mplsLdpEntityAtmEntry OBJECT-TYPE
       SYNTAX      MplsLdpEntityAtmEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "An entry in this table represents the ATM parameters
           and ATM information for this LDP entity."
       INDEX       {  mplsLdpEntityLdpId,
                      mplsLdpEntityIndex
                   }
       ::= { mplsLdpEntityAtmTable 1 }


   MplsLdpEntityAtmEntry ::= SEQUENCE {
       mplsLdpEntityAtmIfIndexOrZero        InterfaceIndexOrZero,
       mplsLdpEntityAtmMergeCap             INTEGER,
       mplsLdpEntityAtmLRComponents         Unsigned32,
       mplsLdpEntityAtmVcDirectionality     INTEGER,
       mplsLdpEntityAtmLsrConnectivity      INTEGER,
       mplsLdpEntityAtmDefaultControlVpi    AtmVpIdentifier,
       mplsLdpEntityAtmDefaultControlVci    MplsAtmVcIdentifier,
       mplsLdpEntityAtmUnlabTrafVpi         AtmVpIdentifier,
       mplsLdpEntityAtmUnlabTrafVci         MplsAtmVcIdentifier,
       mplsLdpEntityAtmStorageType          StorageType,
       mplsLdpEntityAtmRowStatus            RowStatus
   }


   mplsLdpEntityAtmIfIndexOrZero  OBJECT-TYPE
       SYNTAX      InterfaceIndexOrZero
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
          "This value represents either the InterfaceIndex
          or 0 (zero).  The value of zero means that the
          InterfaceIndex is not known.



Expires December 2003                                          [Page 69]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


          However, if the InterfaceIndex is known, then it must
          be represented by this value.

          If an InterfaceIndex becomes known, then the
          network management entity (e.g. SNMP agent) responsible
          for this object MUST change the value from 0 (zero) to the
          value of the InterfaceIndex.  If an ATM Label is
          being used in forwarding data, then the value of this
          object MUST be the InterfaceIndex."
       ::= { mplsLdpEntityAtmEntry 1 }


   mplsLdpEntityAtmMergeCap OBJECT-TYPE
       SYNTAX      INTEGER {
                       notSupported(0),
                       vpMerge(1),
                       vcMerge(2),
                       vpAndVcMerge(3)
                   }
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "Denotes the Merge Capability of this Entity.
           This is the EXACT value for the ATM Session Parameter,
           field M (for ATM Merge Capabilities).  The ATM Session Parameter
           is an optional parameter in the Initialization Message.

           The description from rfc3036.txt is:

           'M, ATM Merge Capabilities
              Specifies the merge capabilities of an ATM switch.  The
              following values are supported in this version of the
              specification:

                     Value          Meaning

                       0            Merge not supported
                       1            VP Merge supported
                       2            VC Merge supported
                       3            VP & VC Merge supported

              If the merge capabilities of the LSRs differ, then:
              -  Non-merge and VC-merge LSRs may freely interoperate.

              -  The interoperability of VP-merge-capable switches with non-
                 VP-merge-capable switches is a subject for future study.


Expires December 2003                                          [Page 70]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


                 When the LSRs differ on the use of VP-merge, the session is
                 established, but VP merge is not used.'

              Please refer to the following reference for a complete
              description of this feature."
        REFERENCE
           "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
       ::= { mplsLdpEntityAtmEntry 2 }

   mplsLdpEntityAtmLRComponents OBJECT-TYPE
       SYNTAX      Unsigned32 (1..65535)
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
           "Number of Label Range Components in the Initialization
           message.  This also represents the number of entries
           in the mplsLdpEntityAtmLRTable which correspond
           to this entry.

           This is the EXACT value for the ATM Session Parameter,
           field N (for Number of label range components).  The ATM
           Session Parameter is an optional parameter in the Initialization
           Message.

           The description from rfc3036.txt is:

           'N, Number of label range components
              Specifies the number of ATM Label Range Components
              included in the TLV.'

            Please refer to the following reference for a complete
            description of this feature."
        REFERENCE
           "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
       ::= { mplsLdpEntityAtmEntry 3 }

   mplsLdpEntityAtmVcDirectionality OBJECT-TYPE
       SYNTAX      INTEGER {
                              bidirectional(0),
                              unidirectional(1)
                           }
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "If the value of this object is 'bidirectional(0)',
           a given VCI, within a given VPI, is used as a


Expires December 2003                                          [Page 71]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


           label for both directions independently.

           If the value of this object is 'unidirectional(1)',
           a given VCI within a VPI designates one direction.

           This is the EXACT value for the ATM Session Parameter,
           field D (for VC Directionality).  The ATM Session Parameter
           is an optional parameter in the Initialization Message.

           The description from rfc3036.txt is:


           'D, VC Directionality
              A value of 0 specifies bidirectional VC capability, meaning the
              LSR can (within a given VPI) support the use of a given VCI as
              a label for both link directions independently.  A value of 1
              specifies unidirectional VC capability, meaning (within a given
              VPI) a given VCI may appear in a label mapping for one
              direction on the link only.  When either or both of the peers
              specifies unidirectional VC capability, both LSRs use
              unidirectional VC label assignment for the link as follows.
              The LSRs compare their LDP Identifiers as unsigned integers.
              The LSR with the larger LDP Identifier may assign only odd-
              numbered VCIs in the VPI/VCI range as labels.  The system with
              the smaller LDP Identifier may assign only even-numbered VCIs
              in the VPI/VCI range as labels.'

              Please refer to the following reference for a complete
              description of this feature."
        REFERENCE
           "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
       ::= { mplsLdpEntityAtmEntry 4 }

   mplsLdpEntityAtmLsrConnectivity OBJECT-TYPE
       SYNTAX      INTEGER {
                      direct(1),
                      indirect(2)
                   }
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "The peer LSR may be connected indirectly by means of an
           ATM VP so that the VPI values may be different on either
           endpoint so the label MUST be encoded entirely within the
           VCI field."
       DEFVAL { direct }


Expires December 2003                                          [Page 72]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       ::= { mplsLdpEntityAtmEntry 5 }

   mplsLdpEntityAtmDefaultControlVpi OBJECT-TYPE
       SYNTAX      AtmVpIdentifier
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "The default VPI value for the non-MPLS connection.  The
           default value of this is 0 (zero) but other values may
           be configured.  This object allows a different value
           to be configured."
       DEFVAL { 0 }
       ::= { mplsLdpEntityAtmEntry 6 }

   mplsLdpEntityAtmDefaultControlVci OBJECT-TYPE
       SYNTAX      MplsAtmVcIdentifier
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "The Default VCI value for a non-MPLS connection.  The
           default value of this is 32 but other values may be
           configured.  This object allows a different value to
           be configured."
       DEFVAL { 32 }
       ::= { mplsLdpEntityAtmEntry 7 }

   mplsLdpEntityAtmUnlabTrafVpi OBJECT-TYPE
       SYNTAX      AtmVpIdentifier
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "VPI value of the VCC supporting unlabeled traffic.  This
           non-MPLS connection is used to carry unlabeled (IP)
           packets.  The default value is the same as the default
           value of the 'mplsLdpEntityAtmDefaultControlVpi', however
           another value may be configured."
       DEFVAL  { 0 }
       ::= { mplsLdpEntityAtmEntry 8 }

   mplsLdpEntityAtmUnlabTrafVci OBJECT-TYPE
       SYNTAX      MplsAtmVcIdentifier
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "VCI value of the VCC supporting unlabeled traffic.
           This non-MPLS connection is used to carry unlabeled (IP)


Expires December 2003                                          [Page 73]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


           packets. The default value is the same as the default
           value of the 'mplsLdpEntityAtmDefaultControlVci', however
           another value may be configured."
       DEFVAL  { 32 }
       ::= { mplsLdpEntityAtmEntry 9 }

   mplsLdpEntityAtmStorageType  OBJECT-TYPE
       SYNTAX      StorageType
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "The storage type for this conceptual row.
           Conceptual rows having the value 'permanent(4)'
           need not allow write-access to any columnar
           objects in the row."
       DEFVAL { nonVolatile }
       ::= { mplsLdpEntityAtmEntry 10 }

   mplsLdpEntityAtmRowStatus OBJECT-TYPE
       SYNTAX      RowStatus
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "The status of this conceptual row.  All writable
            objects in this row may be modified at any time,
            however, as described in detail in the section
            entitled, 'Changing Values After Session
            Establishment', and again described in the
            DESCRIPTION clause of the mplsLdpEntityAdminStatus
            object, if a session has been initiated with a Peer,
            changing objects in this table will wreak havoc
            with the session and interrupt traffic.  To repeat again:
            the recommended procedure is to set the
            mplsLdpEntityAdminStatus to down, thereby explicitly
            causing a session to be torn down. Then,
            change objects in this entry, then set the
            mplsLdpEntityAdminStatus to enable
            which enables a new session to be initiated."
       ::= { mplsLdpEntityAtmEntry 11 }

   --
   -- The MPLS LDP Entity ATM Label Range Table
   --

   mplsLdpEntityAtmLRTable OBJECT-TYPE
       SYNTAX SEQUENCE OF MplsLdpEntityAtmLREntry


Expires December 2003                                          [Page 74]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       MAX-ACCESS not-accessible
       STATUS current
       DESCRIPTION
           "The MPLS LDP Entity ATM Label Range (LR) Table.
           The purpose of this table is to provide a mechanism
           for configuring a contiguous range of vpi's
           with a contiguous range of vci's, or a 'label range'
           for LDP Entities.

           LDP Entities which use ATM must have at least one
           entry in this table.

           There must exist at least one entry in this
           table for every LDP Entity that has
           'mplsLdpEntityOptionalParameters' object with
           a value of 'atmSessionParameters'."
       ::= { mplsLdpEntityAtmObjects 2 }

   mplsLdpEntityAtmLREntry OBJECT-TYPE
       SYNTAX MplsLdpEntityAtmLREntry
       MAX-ACCESS not-accessible
       STATUS current
       DESCRIPTION
           "A row in the LDP Entity ATM Label
           Range Table.  One entry in this table contains
           information on a single range of labels
           represented by the configured Upper and Lower
           Bounds VPI/VCI pairs.  These are the same
           data used in the Initialization Message.

           NOTE:  The ranges for a specific LDP Entity
           are UNIQUE and non-overlapping.  For example,
           for a specific LDP Entity index, there could
           be one entry having LowerBound vpi/vci == 0/32, and
           UpperBound vpi/vci == 0/100, and a second entry
           for this same interface with LowerBound
           vpi/vci == 0/101 and UpperBound vpi/vci == 0/200.
           However, there could not be a third entry with
           LowerBound vpi/vci == 0/200 and
           UpperBound vpi/vci == 0/300 because this label
           range overlaps with the second entry (i.e. both
           entries now have 0/200).

           A row will not become active unless a unique and
           non-overlapping range is specified.



Expires December 2003                                          [Page 75]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


           At least one label range entry for a
           specific LDP Entity MUST
           include the default VPI/VCI  values denoted
           in the LDP Entity Table.

           A request to create a row with an overlapping
           range should result in an inconsistentValue
           error."
       INDEX       {  mplsLdpEntityLdpId,
                      mplsLdpEntityIndex,
                      mplsLdpEntityAtmLRMinVpi,
                      mplsLdpEntityAtmLRMinVci
                   }
       ::= { mplsLdpEntityAtmLRTable 1 }

   MplsLdpEntityAtmLREntry ::= SEQUENCE {
       mplsLdpEntityAtmLRMinVpi       AtmVpIdentifier,
       mplsLdpEntityAtmLRMinVci       MplsAtmVcIdentifier,
       mplsLdpEntityAtmLRMaxVpi       AtmVpIdentifier,
       mplsLdpEntityAtmLRMaxVci       MplsAtmVcIdentifier,
       mplsLdpEntityAtmLRStorageType  StorageType,
       mplsLdpEntityAtmLRRowStatus    RowStatus
   }

   mplsLdpEntityAtmLRMinVpi OBJECT-TYPE
       SYNTAX AtmVpIdentifier
       MAX-ACCESS not-accessible
       STATUS current
       DESCRIPTION
           "The minimum VPI number configured for this range.
           The value of zero is a valid value for the VPI portion
           of the label."
       ::= { mplsLdpEntityAtmLREntry 1 }

   mplsLdpEntityAtmLRMinVci OBJECT-TYPE
       SYNTAX MplsAtmVcIdentifier
       MAX-ACCESS not-accessible
       STATUS current
       DESCRIPTION
           "The minimum VCI number configured for this range."
       ::= { mplsLdpEntityAtmLREntry 2 }

   mplsLdpEntityAtmLRMaxVpi OBJECT-TYPE
       SYNTAX AtmVpIdentifier
       MAX-ACCESS read-create
       STATUS current


Expires December 2003                                          [Page 76]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       DESCRIPTION
           "The maximum VPI number configured for this range."
       ::= { mplsLdpEntityAtmLREntry 3 }

   mplsLdpEntityAtmLRMaxVci OBJECT-TYPE
       SYNTAX MplsAtmVcIdentifier
       MAX-ACCESS read-create
       STATUS current
       DESCRIPTION
           "The maximum VCI number configured for this range."
      ::= { mplsLdpEntityAtmLREntry 4 }

   mplsLdpEntityAtmLRStorageType  OBJECT-TYPE
       SYNTAX      StorageType
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "The storage type for this conceptual row.
           Conceptual rows having the value 'permanent(4)'
           need not allow write-access to any columnar
           objects in the row."
       DEFVAL { nonVolatile }
       ::= { mplsLdpEntityAtmLREntry 5 }

   mplsLdpEntityAtmLRRowStatus OBJECT-TYPE
       SYNTAX RowStatus
       MAX-ACCESS read-create
       STATUS current
       DESCRIPTION
           "The status of this conceptual row.  All writable
            objects in this row may be modified at any time,
            however, as described in detail in the section
            entitled, 'Changing Values After Session
            Establishment', and again described in the
            DESCRIPTION clause of the
            mplsLdpEntityAdminStatus object,
            if a session has been initiated with a Peer,
            changing objects in this table will
            wreak havoc with the session and interrupt traffic.
            To repeat again:  the recommended procedure
            is to set the mplsLdpEntityAdminStatus to
            down, thereby explicitly causing a session
            to be torn down. Then, change objects in this
            entry, then set the mplsLdpEntityAdminStatus
            to enable which enables a new session
            to be initiated."


Expires December 2003                                          [Page 77]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       ::= { mplsLdpEntityAtmLREntry 6 }

   --
   -- MPLS LDP ATM Session Information
   --

   mplsLdpAtmSessionObjects OBJECT IDENTIFIER ::=
                                  { mplsLdpAtmObjects 2 }

   mplsLdpAtmSessionTable OBJECT-TYPE
       SYNTAX      SEQUENCE OF MplsLdpAtmSessionEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "A table which relates sessions in the
           'mplsLdpSessionTable' and their label
           range intersections.  There could be one
           or more label range intersections between an
           LDP Entity and LDP Peer using ATM as the
           underlying  media.  Each row represents
           a single label range intersection.

           This table cannot use the 'AUGMENTS'
           clause because there is not necessarily
           a one-to-one mapping between this table
           and the mplsLdpSessionTable."
       ::= { mplsLdpAtmSessionObjects 1 }

   mplsLdpAtmSessionEntry OBJECT-TYPE
       SYNTAX      MplsLdpAtmSessionEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "An entry in this table represents information on a
           single label range intersection between an LDP Entity
           and LDP Peer.

           The information contained in a row is read-only."
       INDEX       { mplsLdpEntityLdpId,
                     mplsLdpEntityIndex,
                     mplsLdpPeerLdpId,
                     mplsLdpSessionAtmLRLowerBoundVpi,
                     mplsLdpSessionAtmLRLowerBoundVci

                   }
       ::= { mplsLdpAtmSessionTable 1 }


Expires December 2003                                          [Page 78]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   MplsLdpAtmSessionEntry ::= SEQUENCE {
       mplsLdpSessionAtmLRLowerBoundVpi     AtmVpIdentifier,
       mplsLdpSessionAtmLRLowerBoundVci     MplsAtmVcIdentifier,
       mplsLdpSessionAtmLRUpperBoundVpi     AtmVpIdentifier,
       mplsLdpSessionAtmLRUpperBoundVci     MplsAtmVcIdentifier
   }

   mplsLdpSessionAtmLRLowerBoundVpi OBJECT-TYPE
       SYNTAX AtmVpIdentifier
       MAX-ACCESS not-accessible
       STATUS current
       DESCRIPTION
           "The minimum VPI number for this range."
       ::= { mplsLdpAtmSessionEntry 1 }

   mplsLdpSessionAtmLRLowerBoundVci OBJECT-TYPE
       SYNTAX MplsAtmVcIdentifier
       MAX-ACCESS not-accessible
       STATUS current
       DESCRIPTION
           "The minimum VCI number for this range."
       ::= { mplsLdpAtmSessionEntry 2 }

   mplsLdpSessionAtmLRUpperBoundVpi OBJECT-TYPE
       SYNTAX AtmVpIdentifier
       MAX-ACCESS read-only
       STATUS current
       DESCRIPTION
           "The maximum VPI number for this range."
       ::= { mplsLdpAtmSessionEntry 3 }

   mplsLdpSessionAtmLRUpperBoundVci OBJECT-TYPE
       SYNTAX MplsAtmVcIdentifier
       MAX-ACCESS read-only
       STATUS current
       DESCRIPTION
           "The maximum VCI number for this range."
       ::= { mplsLdpAtmSessionEntry 4 }

   --**************************************************************
   -- Module Conformance Statement
   --**************************************************************

   mplsLdpAtmGroups
       OBJECT IDENTIFIER ::= { mplsLdpAtmConformance 1 }



Expires December 2003                                          [Page 79]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   mplsLdpAtmCompliances
       OBJECT IDENTIFIER ::= { mplsLdpAtmConformance 2 }

   --
   -- Full Compliance
   --

   mplsLdpAtmModuleFullCompliance MODULE-COMPLIANCE
       STATUS current
       DESCRIPTION
           "The Module is implemented with support for
           read-create and read-write.  In other words,
           both monitoring and configuration
           are available when using this MODULE-COMPLIANCE."
       MODULE -- this module
       MANDATORY-GROUPS    {
                              mplsLdpAtmGroup
                           }


       OBJECT       mplsLdpEntityAtmRowStatus
       SYNTAX       RowStatus { active(1) }
       WRITE-SYNTAX RowStatus { createAndGo(4), destroy(6) }
       DESCRIPTION
          "Support for createAndWait and notInService is not required."

       OBJECT       mplsLdpEntityAtmLRRowStatus
       SYNTAX       RowStatus { active(1) }
       WRITE-SYNTAX RowStatus { createAndGo(4), destroy(6) }
       DESCRIPTION
          "Support for createAndWait and notInService is not required."


       ::= { mplsLdpAtmCompliances 1 }


   --
   -- Read-Only Compliance
   --

   mplsLdpAtmModuleReadOnlyCompliance MODULE-COMPLIANCE
       STATUS current
       DESCRIPTION
           "The Module is implemented with support for
           read-only.  In other words, only monitoring
           is available by implementing this MODULE-COMPLIANCE."


Expires December 2003                                          [Page 80]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       MODULE -- this module
       MANDATORY-GROUPS    {
                              mplsLdpAtmGroup
                           }

       OBJECT       mplsLdpEntityAtmIfIndexOrZero
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityAtmMergeCap
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityAtmVcDirectionality
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityAtmLsrConnectivity
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityAtmDefaultControlVpi
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityAtmDefaultControlVci
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityAtmUnlabTrafVpi
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityAtmUnlabTrafVci
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityAtmStorageType


Expires December 2003                                          [Page 81]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."


       OBJECT       mplsLdpEntityAtmRowStatus
       SYNTAX       RowStatus { active(1) }
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required, and active is the
          only status that needs to be supported."

       OBJECT       mplsLdpEntityAtmLRMaxVpi
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityAtmLRMaxVci
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityAtmLRStorageType
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityAtmLRRowStatus
       SYNTAX       RowStatus { active(1) }
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required, and active is the
          only status that needs to be supported."

       ::= { mplsLdpAtmCompliances 2 }

   --
   -- units of conformance
   --

   mplsLdpAtmGroup OBJECT-GROUP
       OBJECTS {
       mplsLdpEntityAtmIfIndexOrZero,
       mplsLdpEntityAtmMergeCap,
       mplsLdpEntityAtmLRComponents,
       mplsLdpEntityAtmVcDirectionality,


Expires December 2003                                          [Page 82]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       mplsLdpEntityAtmLsrConnectivity,
       mplsLdpEntityAtmDefaultControlVpi,
       mplsLdpEntityAtmDefaultControlVci,
       mplsLdpEntityAtmUnlabTrafVpi,
       mplsLdpEntityAtmUnlabTrafVci,
       mplsLdpEntityAtmStorageType,
       mplsLdpEntityAtmRowStatus,
       mplsLdpEntityAtmLRMaxVpi,
       mplsLdpEntityAtmLRMaxVci,
       mplsLdpEntityAtmLRStorageType,
       mplsLdpEntityAtmLRRowStatus,
       mplsLdpSessionAtmLRUpperBoundVpi,
       mplsLdpSessionAtmLRUpperBoundVci

       }
       STATUS    current
       DESCRIPTION
           "Objects that apply to all MPLS LDP implementations
           using ATM as the Layer 2."
       ::= { mplsLdpAtmGroups 1 }


   END



4.2.  The MPLS-LDP-FRAME-RELAY-STD-MIB Module

   This MIB Module MUST be supported if LDP uses FRAME RELAY as the
   Layer 2 medium.  There are three tables in this MIB Module.  Two
   tables are to configure LDP for using Frame Relay.  These tables are
   the mplsLdpEntityFrameRelayTable and the
   mplsLdpEntityFrameRelayLRTable.  The third table,
   mplsLdpFrameRelaySessionTable, is a read-only table.


4.2.1.  The LDP Entity Frame Relay  Table

   The mplsLdpEntityFrameRelayTable provides a way to configure
   information which would be contained in the "Optional Parameter"
   portion of an LDP PDU Initialization Message.







Expires December 2003                                          [Page 83]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


4.2.2.  The LDP Entity Frame Relay Label Range Table

   The mplsLdpEntityFrameRelayLRTable provides a way to configure
   information which would be contained in the "Frame Relay Label Range
   Components" portion of an LDP PDU Intialization Message, see
   [RFC3034] and [RFC3036].


4.2.3.  The LDP Frame Relay Session Table

   The MPLS LDP Frame Relay Session Table is a read-only table which
   contains session information specific to Frame Relay.




   MPLS-LDP-FRAME-RELAY-STD-MIB DEFINITIONS ::= BEGIN


   IMPORTS
       OBJECT-TYPE,
       MODULE-IDENTITY,
       Unsigned32
           FROM SNMPv2-SMI
       MODULE-COMPLIANCE,
       OBJECT-GROUP
           FROM SNMPv2-CONF

       RowStatus,
       StorageType
           FROM SNMPv2-TC

       DLCI
           FROM FRAME-RELAY-DTE-MIB

       InterfaceIndexOrZero
           FROM IF-MIB

       mplsStdMIB
           FROM MPLS-TC-STD-MIB

       mplsLdpEntityLdpId,
       mplsLdpEntityIndex,
       mplsLdpPeerLdpId
           FROM MPLS-LDP-STD-MIB



Expires December 2003                                          [Page 84]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       ;


   mplsLdpFrameRelayStdMIB MODULE-IDENTITY
       LAST-UPDATED "200306281200Z"  -- 28 June 2003
       ORGANIZATION "Multiprotocol Label Switching (mpls)
                     Working Group"
       CONTACT-INFO
           "Joan Cucchiara (jcucchiara@artel.com)
            Artel

            Hans Sjostrand (hans@ipunplugged.com)
            ipUnplugged

            James V. Luciani (james_luciani@mindspring.com)
            Consultant

            Working Group Chairs:
            George Swallow,   email: swallow@cisco.com
            Loa Andersson,    email: loa@pi.se

            MPLS Working Group, email: mpls@uu.net
       "
       DESCRIPTION
           "Copyright (C) The Internet Society (2003).  This
           version of this MIB module is part of RFCXXX; see
           the RFC itself for full legal notices.

           This MIB contains managed object definitions for
           configuring and monitoring the Multiprotocol Label
           Switching (MPLS), Label Distribution Protocol (LDP),
           utilizing Frame Relay as the Layer 2 media."
       REVISION "200306281200Z"  -- 28 June 2003
       DESCRIPTION
           "Initial version published as part of RFC XXXX."

       -- Please see the IANA Considerations Section.
       -- The requested mplsStdMIB subId is 6, e.g.
       --   ::= { mplsStdMIB 6 }

       ::= { mplsStdMIB XXX } -- to be assigned by IANA

   --****************************************************************


   mplsLdpFrameRelayObjects  OBJECT IDENTIFIER


Expires December 2003                                          [Page 85]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


                              ::= { mplsLdpFrameRelayStdMIB 1 }

   mplsLdpFrameRelayConformance   OBJECT IDENTIFIER
                              ::= { mplsLdpFrameRelayStdMIB 2 }


   --****************************************************************
   -- MPLS LDP Frame Relay Objects
   --****************************************************************

   --
   -- Ldp Entity Objects for Frame Relay
   --

   mplsLdpEntityFrameRelayObjects OBJECT IDENTIFIER ::=
                                       { mplsLdpFrameRelayObjects 1 }

   mplsLdpEntityFrameRelayTable  OBJECT-TYPE
       SYNTAX      SEQUENCE OF MplsLdpEntityFrameRelayEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "This table contains Frame Relay specific
           information which could be used in the
           'Optional Parameters' and other Frame Relay
           Relay specific information.

           This table 'sparse augments' the mplsLdpEntityTable
           when Frame Relay is the Layer 2 medium."
       ::= { mplsLdpEntityFrameRelayObjects 1 }

   mplsLdpEntityFrameRelayEntry OBJECT-TYPE
       SYNTAX      MplsLdpEntityFrameRelayEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "An entry in this table represents the Frame Relay
           optional parameters associated with the LDP entity."
       INDEX       {  mplsLdpEntityLdpId,
                      mplsLdpEntityIndex
                   }
       ::= { mplsLdpEntityFrameRelayTable 1 }

   MplsLdpEntityFrameRelayEntry ::= SEQUENCE {
       mplsLdpEntityFrameRelayIfIndexOrZero        InterfaceIndexOrZero,
       mplsLdpEntityFrameRelayMergeCap             INTEGER,


Expires December 2003                                          [Page 86]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       mplsLdpEntityFrameRelayLRComponents         Unsigned32,
       mplsLdpEntityFrameRelayVcDirectionality     INTEGER,
       mplsLdpEntityFrameRelayStorageType          StorageType,
       mplsLdpEntityFrameRelayRowStatus            RowStatus
   }

   mplsLdpEntityFrameRelayIfIndexOrZero OBJECT-TYPE
       SYNTAX      InterfaceIndexOrZero
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
          "This value represents either the InterfaceIndex of
          the 'ifLayer' where the Frame Relay Labels 'owned' by this
          entry were created, or 0 (zero).  The value of zero
          means that the InterfaceIndex is not known.  For example,
          if the InterfaceIndex is created subsequent to the
          Frame Relay Label's creation, then it would not be known.
          However, if the InterfaceIndex is known, then it must
          be represented by this value.

          If an InterfaceIndex becomes known, then the
          network management entity (e.g. SNMP agent) responsible
          for this object MUST change the value from 0 (zero) to the
          value of the InterfaceIndex.  If an Frame Relay Label is
          being used in forwarding data, then the value of this
          object MUST be the InterfaceIndex."
       ::= { mplsLdpEntityFrameRelayEntry 1 }

   mplsLdpEntityFrameRelayMergeCap OBJECT-TYPE
       SYNTAX      INTEGER {
                       notSupported(0),
                       supported(1)
                   }
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "This represents whether or not the Frame Relay merge
           capability is supported.  This is the EXACT value for the
           Frame Relay Session Parameter, field M (for Frame Relay
           Merge Capabilities).  The Frame Relay Session Parameter
           is an optional parameter in the Initialization Message.

           The description from rfc3036.txt is:
           'M, Frame Relay Merge Capabilities
              Specifies the merge capabilities of a Frame Relay switch.  The
              following values are supported in this version of the


Expires December 2003                                          [Page 87]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


              specification:

                     Value          Meaning

                       0            Merge not supported
                       1            Merge supported

              Non-merge and merge Frame Relay LSRs may freely interoperate.'

              Please refer to the following reference for a complete
              description of this feature."
        REFERENCE
           "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
       ::= { mplsLdpEntityFrameRelayEntry 2 }

   mplsLdpEntityFrameRelayLRComponents OBJECT-TYPE
       SYNTAX      Unsigned32 (1..65535)
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
           "Number of Label Range Components in the Initialization
           message.  This also represents the number of entries
           in the mplsLdpEntityFrameRelayLRTable which correspond
           to this entry.

           This is the EXACT value for the Frame Relay Session Parameter,
           field N (for Number of label range components).  The Frame Relay
           Session Parameter is an optional parameter in
           the Initialization Message.

           The description from rfc3036.txt is:

           'N, Number of label range components
               Specifies the number of Frame Relay Label Range Components
               included in the TLV.'

            Please refer to the following reference for a complete
            description of this feature."
        REFERENCE
           "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
       ::= { mplsLdpEntityFrameRelayEntry 3 }


   mplsLdpEntityFrameRelayVcDirectionality OBJECT-TYPE
       SYNTAX      INTEGER {
                             bidirectional(0),


Expires December 2003                                          [Page 88]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


                             unidirection(1)
                           }
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "If the value of this object is 'bidirectional(0)', then
           the LSR supports the use of a given DLCI as a label for
           both directions independently.  If the value of
           this object is 'unidirectional(1)', then the LSR
           uses the given DLCI as a label in only one direction.

           This is the EXACT value for the Frame Relay Session Parameter,
           field D (for VC Directionality).  The Frame Relay Session Parameter
           is an optional parameter in the Initialization Message.

           The description from rfc3036.txt is:

           'D, VC Directionality
              A value of 0 specifies bidirectional VC capability, meaning the
              LSR can support the use of a given DLCI as a label for both
              link directions independently.  A value of 1 specifies
              unidirectional VC capability, meaning a given DLCI may appear
              in a label mapping for one direction on the link only.  When
              either or both of the peers specifies unidirectional VC
              capability, both LSRs use unidirectional VC label assignment
              for the link as follows.  The LSRs compare their LDP
              Identifiers as unsigned integers.  The LSR with the larger LDP
              Identifier may assign only odd-numbered DLCIs in the range as
              labels.  The system with the smaller LDP Identifier may assign
              only even-numbered DLCIs in the range as labels.'

              Please refer to the following reference for a complete
              description of this feature."
        REFERENCE
           "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
       ::= { mplsLdpEntityFrameRelayEntry 4 }


   mplsLdpEntityFrameRelayStorageType  OBJECT-TYPE
       SYNTAX      StorageType
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "The storage type for this conceptual row.
           Conceptual rows having the value 'permanent(4)'
           need not allow write-access to any columnar


Expires December 2003                                          [Page 89]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


           objects in the row."
       DEFVAL { nonVolatile }
       ::= { mplsLdpEntityFrameRelayEntry 5 }


   mplsLdpEntityFrameRelayRowStatus OBJECT-TYPE
       SYNTAX      RowStatus
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "The status of this conceptual row.  All writable
            objects in this row may be modified at any time,
            however, as described in detail in the section
            entitled, 'Changing Values After Session
            Establishment', and again described in the
            DESCRIPTION clause of the
            mplsLdpEntityAdminStatus object,
            if a session has been initiated with a Peer,
            changing objects in this table will
            wreak havoc with the session and interrupt
            traffic.  To repeat again:
            the recommended procedure is to set the
            mplsLdpEntityAdminStatus to
            down, thereby explicitly causing a
            session to be torn down. Then,
            change objects in this entry, then set
            the mplsLdpEntityAdminStatus
            to enable which enables a new session
            to be initiated."
       ::= { mplsLdpEntityFrameRelayEntry 6 }


   --
   -- Frame Relay Label Range Components
   --

   mplsLdpEntityFrameRelayLRTable  OBJECT-TYPE
       SYNTAX      SEQUENCE OF MplsLdpEntityFrameRelayLREntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "This table contains information about the
           Optional Parameters for the Frame Relay Session
           in the LDP Initialization Message, specifically
           it contains information about the Frame Relay
           Label Range Components.


Expires December 2003                                          [Page 90]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


           If the value of the object
           'mplsLdpEntityOptionalParameters' contains the
           value of 'frameRelaySessionParameters(3)' then
           there must be at least one corresponding entry
           in this table."
       ::= { mplsLdpEntityFrameRelayObjects 2 }

   mplsLdpEntityFrameRelayLREntry OBJECT-TYPE
       SYNTAX      MplsLdpEntityFrameRelayLREntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "An entry in this table represents the Frame Relay
           Label Range Component associated with the LDP entity."
       INDEX       {  mplsLdpEntityLdpId,
                      mplsLdpEntityIndex,
                      mplsLdpEntityFrameRelayLRMinDlci
                   }
       ::= { mplsLdpEntityFrameRelayLRTable 1 }

   MplsLdpEntityFrameRelayLREntry ::= SEQUENCE {
       mplsLdpEntityFrameRelayLRMinDlci                  DLCI,
       mplsLdpEntityFrameRelayLRMaxDlci                  DLCI,
       mplsLdpEntityFrameRelayLRLen                      INTEGER,
       mplsLdpEntityFrameRelayLRStorageType              StorageType,
       mplsLdpEntityFrameRelayLRRowStatus                RowStatus
   }

   mplsLdpEntityFrameRelayLRMinDlci OBJECT-TYPE
       SYNTAX      DLCI
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "The lower bound which is supported.  This value should
           be the same as that in the Frame Relay Label Range
           Component's Minimum DLCI field.  The value of zero
           is valid for the minimum DLCI field of the label."
       REFERENCE
           "RFC3034, Use of Label Switching on Frame Relay Networks
           Specification."
       ::= { mplsLdpEntityFrameRelayLREntry 1 }

   mplsLdpEntityFrameRelayLRMaxDlci OBJECT-TYPE
       SYNTAX      DLCI
       MAX-ACCESS  read-create
       STATUS      current


Expires December 2003                                          [Page 91]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       DESCRIPTION
           "The upper bound which is supported.  This value should
           be the same as that in the Frame Relay Label Range
           Component's Maximum DLCI field."
       ::= { mplsLdpEntityFrameRelayLREntry 2 }

   mplsLdpEntityFrameRelayLRLen OBJECT-TYPE
       SYNTAX      INTEGER {
                       tenDlciBits(0),
                       twentyThreeDlciBits(2)
                   }
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "This object specifies the length of the DLCI bits.

           This is the EXACT value for the Len field of the
           Frame Relay Label Range Component.

           The description from rfc3036.txt is:

           'Len
               This field specifies the number of bits of the DLCI.  The
               following values are supported:

                    Len    DLCI bits

                    0       10
                    2       23

               Len values 1 and 3 are reserved.'

            Please refer to the following reference for a complete
            description of this feature."
        REFERENCE
           "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
       ::= { mplsLdpEntityFrameRelayLREntry 3 }


   mplsLdpEntityFrameRelayLRStorageType  OBJECT-TYPE
       SYNTAX      StorageType
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "The storage type for this conceptual row.
           Conceptual rows having the value 'permanent(4)'


Expires December 2003                                          [Page 92]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


           need not allow write-access to any columnar
           objects in the row."
       DEFVAL { nonVolatile }
       ::= { mplsLdpEntityFrameRelayLREntry 4 }


   mplsLdpEntityFrameRelayLRRowStatus OBJECT-TYPE
       SYNTAX      RowStatus
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "The status of this conceptual row.  All writable
            objects in this row may be modified at any time,
            however, as described in detail in the section
            entitled, 'Changing Values After Session
            Establishment', and again described in the
            DESCRIPTION clause of the
            mplsLdpEntityAdminStatus object,
            if a session has been initiated with a Peer,
            changing objects in this table will
            wreak havoc with the session and interrupt
            traffic.  To repeat again:
            the recommended procedure is to set the
            mplsLdpEntityAdminStatus to down, thereby
            explicitly causing a session to be torn down. Then,
            change objects in this entry, then set the
            mplsLdpEntityAdminStatus to enable which enables
            a new session to be initiated."
       ::= { mplsLdpEntityFrameRelayLREntry 5 }


   --
   -- MPLS LDP Frame Relay Session Information
   --

   mplsLdpFrameRelaySessionObjects  OBJECT IDENTIFIER ::=
                              { mplsLdpFrameRelayObjects  2 }


   mplsLdpFrameRelaySessionTable OBJECT-TYPE
       SYNTAX      SEQUENCE OF MplsLdpFrameRelaySessionEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "A table of Frame Relay label range intersections
           between the LDP Entities and LDP Peers.


Expires December 2003                                          [Page 93]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


           Each row represents a single label range intersection.

           NOTE:  this table cannot use the 'AUGMENTS'
           clause because there is not necessarily a one-to-one
           mapping between this table and the mplsLdpSessionTable."
       ::= { mplsLdpFrameRelaySessionObjects 1 }

   mplsLdpFrameRelaySessionEntry OBJECT-TYPE
       SYNTAX      MplsLdpFrameRelaySessionEntry
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "An entry in this table represents information on a
           single label range intersection between an
           LDP Entity and LDP Peer.

           The information contained in a row is read-only."
       INDEX       { mplsLdpEntityLdpId,
                     mplsLdpEntityIndex,
                     mplsLdpPeerLdpId,
                     mplsLdpFrameRelaySessionMinDlci
                   }
       ::= { mplsLdpFrameRelaySessionTable 1 }

   MplsLdpFrameRelaySessionEntry ::= SEQUENCE {
       mplsLdpFrameRelaySessionMinDlci    DLCI,
       mplsLdpFrameRelaySessionMaxDlci    DLCI,
       mplsLdpFrameRelaySessionLen        INTEGER
   }


   mplsLdpFrameRelaySessionMinDlci OBJECT-TYPE
       SYNTAX      DLCI
       MAX-ACCESS  not-accessible
       STATUS      current
       DESCRIPTION
           "The lower bound of DLCIs which are supported.
           The value of zero is a valid value for the
           minimum DLCI field of the label."
       REFERENCE
           "RFC3034, Use of Label Switching on Frame Relay Networks
           Specification."
       ::= { mplsLdpFrameRelaySessionEntry 1 }

   mplsLdpFrameRelaySessionMaxDlci OBJECT-TYPE
       SYNTAX      DLCI


Expires December 2003                                          [Page 94]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
           "The upper bound of DLCIs which are supported."
       ::= { mplsLdpFrameRelaySessionEntry 2 }

   mplsLdpFrameRelaySessionLen OBJECT-TYPE
       SYNTAX      INTEGER {
                       tenDlciBits(0),
                       twentyThreeDlciBits(2)
                   }
       MAX-ACCESS  read-only
       STATUS      current
       DESCRIPTION
           "This object specifies the DLCI bits."
       ::= { mplsLdpFrameRelaySessionEntry 3 }


   --****************************************************************
   -- Module Conformance Statement
   --****************************************************************


   mplsLdpFrameRelayGroups
       OBJECT IDENTIFIER ::= { mplsLdpFrameRelayConformance 1 }

   mplsLdpFrameRelayCompliances
       OBJECT IDENTIFIER ::= { mplsLdpFrameRelayConformance 2 }

   --
   -- Full Compliance
   --

   mplsLdpFrameRelayModuleFullCompliance MODULE-COMPLIANCE
       STATUS current
       DESCRIPTION
           "The Module is implemented with support for
           read-create and read-write.  In other words,
           both monitoring and configuration
           are available when using this MODULE-COMPLIANCE."
       MODULE -- this module
           MANDATORY-GROUPS    {
                                  mplsLdpFrameRelayGroup
                               }

       OBJECT       mplsLdpEntityFrameRelayRowStatus


Expires December 2003                                          [Page 95]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       SYNTAX       RowStatus { active(1) }
       WRITE-SYNTAX RowStatus { createAndGo(4), destroy(6) }
       DESCRIPTION
          "Support for createAndWait and notInService is not required."

       OBJECT       mplsLdpEntityFrameRelayLRRowStatus
       SYNTAX       RowStatus { active(1) }
       WRITE-SYNTAX RowStatus { createAndGo(4), destroy(6) }
       DESCRIPTION
          "Support for createAndWait and notInService is not required."

       ::= { mplsLdpFrameRelayCompliances 1 }

   --
   -- Read-Only Compliance
   --

   mplsLdpFrameRelayModuleReadOnlyCompliance MODULE-COMPLIANCE
       STATUS current
       DESCRIPTION
           "The Module is implemented with support for
           read-only.  In other words, only monitoring
           is available by implementing this MODULE-COMPLIANCE."
       MODULE -- this module
           MANDATORY-GROUPS    {
                                  mplsLdpFrameRelayGroup
                               }

       OBJECT       mplsLdpEntityFrameRelayIfIndexOrZero
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityFrameRelayMergeCap
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityFrameRelayVcDirectionality
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityFrameRelayStorageType
       MIN-ACCESS   read-only
       DESCRIPTION


Expires December 2003                                          [Page 96]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


          "Write access is not required."

       OBJECT       mplsLdpEntityFrameRelayRowStatus
       SYNTAX       RowStatus { active(1) }
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required, and active is the
          only status that needs to be supported."

       OBJECT       mplsLdpEntityFrameRelayLRMaxDlci
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityFrameRelayLRLen
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityFrameRelayLRStorageType
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityFrameRelayLRRowStatus
       SYNTAX       RowStatus { active(1) }
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required, and active is the
          only status that needs to be supported."
       ::= { mplsLdpFrameRelayCompliances 2 }

   --
   -- units of conformance
   --

   mplsLdpFrameRelayGroup OBJECT-GROUP
       OBJECTS {
       mplsLdpEntityFrameRelayIfIndexOrZero,
       mplsLdpEntityFrameRelayMergeCap,
       mplsLdpEntityFrameRelayLRComponents,
       mplsLdpEntityFrameRelayVcDirectionality,
       mplsLdpEntityFrameRelayStorageType,
       mplsLdpEntityFrameRelayRowStatus,
       mplsLdpEntityFrameRelayLRMaxDlci,
       mplsLdpEntityFrameRelayLRLen,


Expires December 2003                                          [Page 97]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       mplsLdpEntityFrameRelayLRStorageType,
       mplsLdpEntityFrameRelayLRRowStatus,
       mplsLdpFrameRelaySessionMaxDlci,
       mplsLdpFrameRelaySessionLen
       }
       STATUS    current
       DESCRIPTION
           "Objects that apply to all MPLS LDP implementations
           using Frame Relay as the Layer 2."
       ::= { mplsLdpFrameRelayGroups 1 }



   END




4.3.  The MPLS-LDP-GENERIC-STD-MIB Module

   This MIB Module MUST be supported if LDP uses a Per Platform Label
   Space.  This MIB Module contains a Label Range (LR) table for
   configuring MPLS Generic Label Ranges.  This table is
   mplsLdpEntityGenericLRTable.  Although the LDP Specification does not
   provide a way for configuring Label Ranges for Generic Labels, the
   MIB does provide a way to reserve a range of generic labels because
   this was thought to be useful by the working group.



   MPLS-LDP-GENERIC-STD-MIB DEFINITIONS ::= BEGIN

   IMPORTS

       OBJECT-TYPE,
       MODULE-IDENTITY,
       Unsigned32
           FROM SNMPv2-SMI

       MODULE-COMPLIANCE,
       OBJECT-GROUP
           FROM SNMPv2-CONF

       RowStatus,
       StorageType
           FROM SNMPv2-TC


Expires December 2003                                          [Page 98]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       InterfaceIndexOrZero
           FROM IF-MIB

       mplsStdMIB
           FROM MPLS-TC-STD-MIB

       mplsLdpEntityLdpId,
       mplsLdpEntityIndex
           FROM MPLS-LDP-STD-MIB
       ;


   mplsLdpGenericStdMIB MODULE-IDENTITY
       LAST-UPDATED "200306281200Z"  -- 28 June 2003
       ORGANIZATION "Multiprotocol Label Switching (mpls)
                     Working Group"
       CONTACT-INFO
           "Joan Cucchiara (jcucchiara@artel.com)
            Artel

            Hans Sjostrand (hans@ipunplugged.com)
            ipUnplugged

            James V. Luciani (james_luciani@mindspring.com)
            Consultant

            Working Group Chairs:
            George Swallow,   email: swallow@cisco.com
            Loa Andersson,    email: loa@pi.se

            MPLS Working Group, email: mpls@uu.net
       "
       DESCRIPTION
           "Copyright (C) The Internet Society (2003).  This
           version of this MIB module is part of RFCXXX; see
           the RFC itself for full legal notices.

           This MIB contains managed object definitions for
           configuring and monitoring the Multiprotocol Label
           Switching (MPLS), Label Distribution Protocol (LDP),
           utilizing ethernet as the Layer 2 media."
       REVISION "200306281200Z"  -- 28 June 2003
       DESCRIPTION
           "Initial version published as part of RFC XXXX."

       -- Please see the IANA Considerations Section.


Expires December 2003                                          [Page 99]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       -- The requested mplsStdMIB subId is 7, e.g.
       --   ::= { mplsStdMIB 7 }

       ::= { mplsStdMIB XXX } -- to be assigned by IANA

   --****************************************************************


   mplsLdpGenericObjects
            OBJECT IDENTIFIER ::= { mplsLdpGenericStdMIB 1 }
   mplsLdpGenericConformance
            OBJECT IDENTIFIER ::= { mplsLdpGenericStdMIB 2 }

   --****************************************************************
   -- MPLS LDP GENERIC Objects
   --****************************************************************

   --
   -- Ldp Entity Objects for Generic Labels
   --



   mplsLdpEntityGenericObjects  OBJECT IDENTIFIER ::=
                                 { mplsLdpGenericObjects 1 }


   --
   -- The MPLS LDP Entity Generic Label Range Table
   --

   mplsLdpEntityGenericLRTable OBJECT-TYPE
       SYNTAX SEQUENCE OF MplsLdpEntityGenericLREntry
       MAX-ACCESS not-accessible
       STATUS current
       DESCRIPTION
           "The MPLS LDP Entity Generic Label Range (LR)
           Table.

           The purpose of this table is to provide a mechanism
           for configurating a contiguous range of generic labels,
           or a 'label range' for LDP Entities.

           LDP Entities which use Generic Labels must have at least
           one entry in this table.  In other words, this table
           'extends' the mpldLdpEntityTable for Generic Labels."


Expires December 2003                                         [Page 100]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       ::= { mplsLdpEntityGenericObjects 1 }

   mplsLdpEntityGenericLREntry OBJECT-TYPE
       SYNTAX MplsLdpEntityGenericLREntry
       MAX-ACCESS not-accessible
       STATUS current
       DESCRIPTION
           "A row in the LDP Entity Generic Label
           Range (LR) Table.  One entry in this table contains
           information on a single range of labels
           represented by the configured Upper and Lower
           Bounds pairs.  NOTE: there is NO corresponding
           LDP message which relates to the information
           in this table, however, this table does provide
           a way for a user to 'reserve' a generic label
           range.

           NOTE:  The ranges for a specific LDP Entity
           are UNIQUE and non-overlapping.

           A row will not be created unless a unique and
           non-overlapping range is specified."
       INDEX       {  mplsLdpEntityLdpId,
                      mplsLdpEntityIndex,
                      mplsLdpEntityGenericLRMin,
                      mplsLdpEntityGenericLRMax
                   }
       ::= { mplsLdpEntityGenericLRTable 1 }

   MplsLdpEntityGenericLREntry ::= SEQUENCE {
       mplsLdpEntityGenericLRMin           Unsigned32,
       mplsLdpEntityGenericLRMax           Unsigned32,
       mplsLdpEntityGenericLabelSpace      INTEGER,
       mplsLdpEntityGenericIfIndexOrZero   InterfaceIndexOrZero,
       mplsLdpEntityGenericLRStorageType   StorageType,
       mplsLdpEntityGenericLRRowStatus     RowStatus
   }

   mplsLdpEntityGenericLRMin OBJECT-TYPE
       SYNTAX     Unsigned32(0..1048575)
       MAX-ACCESS not-accessible
       STATUS     current
       DESCRIPTION
           "The minimum label configured for this range."
       ::= { mplsLdpEntityGenericLREntry 1 }



Expires December 2003                                         [Page 101]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   mplsLdpEntityGenericLRMax OBJECT-TYPE
       SYNTAX     Unsigned32(0..1048575)
       MAX-ACCESS not-accessible
       STATUS     current
       DESCRIPTION
           "The maximum label configured for this range."
       ::= { mplsLdpEntityGenericLREntry 2 }

   mplsLdpEntityGenericLabelSpace  OBJECT-TYPE
       SYNTAX      INTEGER {
                             perPlatform(1),
                             perInterface(2)
                            }
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
          "This value of this object is perPlatform(1), then
          this means that the label space type is
          per platform.

          If this object is perInterface(2), then this
          means that the label space type is per Interface."
       REFERENCE
           "RFC3036, LDP Specification, Section 2.2.1,
           Label Spaces."
       DEFVAL { perPlatform }
       ::= { mplsLdpEntityGenericLREntry 3 }


   mplsLdpEntityGenericIfIndexOrZero OBJECT-TYPE
       SYNTAX      InterfaceIndexOrZero
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
          "This value represents either the InterfaceIndex of
          the 'ifLayer' where these Generic Label would be created,
          or 0 (zero).  The value of zero means that the
          InterfaceIndex is not known.

          However, if the InterfaceIndex is known,
          then it must be represented by this value.

          If an InterfaceIndex becomes known, then the
          network management entity (e.g. SNMP agent) responsible
          for this object MUST change the value from 0 (zero) to the
          value of the InterfaceIndex."


Expires December 2003                                         [Page 102]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       ::= { mplsLdpEntityGenericLREntry 4 }

   mplsLdpEntityGenericLRStorageType  OBJECT-TYPE
       SYNTAX      StorageType
       MAX-ACCESS  read-create
       STATUS      current
       DESCRIPTION
           "The storage type for this conceptual row.
           Conceptual rows having the value 'permanent(4)'
           need not allow write-access to any columnar
           objects in the row."
       DEFVAL { nonVolatile }
       ::= { mplsLdpEntityGenericLREntry 5 }

   mplsLdpEntityGenericLRRowStatus OBJECT-TYPE
       SYNTAX RowStatus
       MAX-ACCESS read-create
       STATUS current
       DESCRIPTION
           "The status of this conceptual row.  All writable
            objects in this row may be modified at any time,
            however, as described in  detail in the section
            entitled, 'Changing Values After Session
            Establishment', and again described in the
            DESCRIPTION clause of the mplsLdpEntityAdminStatus object,
            if a session has been initiated with a Peer,
            changing objects in this table will
            wreak havoc with the session and interrupt traffic.
            To repeat again:  the recommended procedure is
            to set the mplsLdpEntityAdminStatus to
            down, thereby explicitly causing a
            session to be torn down. Then, change objects
            in this entry, then set the mplsLdpEntityAdminStatus
            to enable which enables a new session to be initiated.

            There must exist at least one entry in this
            table for every LDP Entity that has a
            generic label configured."
       ::= { mplsLdpEntityGenericLREntry 6 }


   --****************************************************************
   -- Module Conformance Statement
   --****************************************************************




Expires December 2003                                         [Page 103]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   mplsLdpGenericGroups
       OBJECT IDENTIFIER ::= { mplsLdpGenericConformance 1 }

   mplsLdpGenericCompliances
       OBJECT IDENTIFIER ::= { mplsLdpGenericConformance 2 }

   --
   -- Full Compliance
   --

   mplsLdpGenericModuleFullCompliance MODULE-COMPLIANCE
       STATUS current
       DESCRIPTION
           "The Module is implemented with support for
           read-create and read-write.  In other words,
           both monitoring and configuration
           are available when using this MODULE-COMPLIANCE."
       MODULE -- this module
           MANDATORY-GROUPS    {
                                  mplsLdpGenericGroup
                               }

       OBJECT       mplsLdpEntityGenericLRRowStatus
       SYNTAX       RowStatus { active(1) }
       WRITE-SYNTAX RowStatus { createAndGo(4), destroy(6) }
       DESCRIPTION
          "Support for createAndWait and notInService is not required."

       ::= { mplsLdpGenericCompliances 1 }

   --
   -- Read-Only Compliance
   --

   mplsLdpGenericModuleReadOnlyCompliance MODULE-COMPLIANCE
       STATUS current
       DESCRIPTION
           "The Module is implemented with support for
           read-only.  In other words, only monitoring
           is available by implementing this MODULE-COMPLIANCE."
       MODULE -- this module
           MANDATORY-GROUPS    {
                                  mplsLdpGenericGroup
                               }




Expires December 2003                                         [Page 104]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


       OBJECT       mplsLdpEntityGenericLabelSpace
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."


       OBJECT       mplsLdpEntityGenericIfIndexOrZero
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."

       OBJECT       mplsLdpEntityGenericLRStorageType
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required."


       OBJECT       mplsLdpEntityGenericLRRowStatus
       SYNTAX       RowStatus { active(1) }
       MIN-ACCESS   read-only
       DESCRIPTION
          "Write access is not required, and active is the
          only status that needs to be supported."

       ::= { mplsLdpGenericCompliances 2 }

   --
   -- units of conformance
   --

   mplsLdpGenericGroup OBJECT-GROUP
       OBJECTS {
       mplsLdpEntityGenericLabelSpace,
       mplsLdpEntityGenericIfIndexOrZero,
       mplsLdpEntityGenericLRStorageType,
       mplsLdpEntityGenericLRRowStatus
       }
       STATUS    current
       DESCRIPTION
           "Objects that apply to all MPLS LDP implementations
           using Generic Labels as the Layer 2."
       ::= { mplsLdpGenericGroups 1 }


   END



Expires December 2003                                         [Page 105]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


5.  Revision History

   NOTE TO RFC-Editor:  before publishing this document as an RFC,
   please remove this Revision History (change log) section.


5.1.  Changes from <draft-ietf-mpls-ldp-mib-11.txt>

   Updated with comments from the 3rd Last Call for this MIB which took
   place, Thursday, June 12 to June 24, 2003.

   Updated with last call comments from Adrian Farell posted to the MPLS
   Working Group email list on June 12, 2003.

   Updated the 2 outstanding issues from Bert's email May 9th which was
   posted to the MPLS Working Group.  These issues were not updated for
   version 10, so were addressed in version 11: 1) updated #3 from that
   email and 2) reviewed all the InetAddressType and InetAddress objects
   to make sure that descriptions were per rfc3291.


5.2.  Changes from <draft-ietf-mpls-ldp-mib-10.txt>

   Renamed the MIB module to include Std and also updated the IANA
   Considerations Section to use mplsStdMIB.

   Updated per Bert's email May 9th, with 2 exceptions: 1) did not yet
   update #3 from that email and 2) did not yet review all the
   InetAddressType and InetAddress objects to make sure that
   descriptions were per rfc3291.

   Changed Ses to Session for clarity.


5.3.  Changes from <draft-ietf-mpls-ldp-mib-09.txt>

   Added the new MIB boiler plate and associated MIB reference changes.

   Reworked the OID tree structure so that the Modules only have the
   mplsMIB subid dependency.  This was discussed in mpls wg email
   (discussion was mostly between Bert, Tom and Joan).

   Added IANA Considerations section.  This contains 4 subsections, one
   per MIB module.

   Updated and added new references as needed.


Expires December 2003                                         [Page 106]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   Changed mplsMIB subid values to agree with the latest "Multiprotocol
   Label Switching (MPLS) Management Overview" document, [MPLSMGMT].

   Moved MIB modules around so that they would appear in subId order.
   The Generic MIB module is shown last, since the subid is 7 (which is
   the last (and largest) subid requested by IANA.



5.3.1.  Changes based on MIB Doctor Review Comments

   The following changes are based on comments from the MIB DR Review.
   The comments are from email to the mpls working group dated, Dec 6,
   2002.  These comments are quoted and prefaced by "REQ: comment goes
   here", and then followed by our resolution.

   "REQ: - missing IPR section".  RSP: it has been added.

   "REQ: - Security considerations probably needs more work
     Security ADs want you to explain what the vulnerabilities/risks
     are and what to do against them.
     Also for read only objects, pls list each (group of) object(s)
     and explain what sensitivity attributes they have".  RSP: Done. We
   added subsections here since the Security template is MIB Module
   based and it seemed to us more clear to do a subsection per MIB
   Module.

   "REQ: - pls do the consistency checking for descriptors and all
   that".  RSP: believe this to be done.  Changed Gen to Generic
   everywhere, changed Fr to FrameRelay, changed RO to ReadOnly.
   Changed Sessions to Ses everywhere.  Reviewed tables to make sure
   they were prefixed consistently.  Added more references, used more
   TCs and other stuff.

   "REQ: - sect 3.5 1st sentence, s/would be/are/ ??".  RSP: done.

   "REQ: - sect 3.5 2nd para first sentence  s/initiation/initiate/ ".
   RSP: done.

   "REQ: - section 3.5.2 s/mpsl/mpls/".  RSP: done.

   "REQ: - mplsXxxIndexNext
     See my comments on FTN MIB and LSR MIB on these type of objects
     Best to use something aka rfc3289 ".    RSP: We have imported the
   IndexInteger and IndexIntegerNextFree TCs (from rfc3289.txt).  NOTE:
   we do not like the names of these TCs because they use the term


Expires December 2003                                         [Page 107]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   Integer when the values are Unsigned32.  Would prefer new TCs with
   IndexUnsigned32 and IndexUnsigned32NextFree.

   "REQ:- RowStatus and StorageType objects
     see my comments about similar objects in LSR MIB
     for StorageType might also want to add a DEFVAL ".    RSP: Added
   descriptive text to the RowStatus objects to specify which columns
   can be changed when row is active.  Added descriptive text to the
   StorageType objects to specify what happens when the StorageType is
   permanent.  Also added DEFVALs for the StorageType objects.

   "REQ: - mplsLdpNotifications ... { mplsLdpMib 2 }
     why not { mplsLdpMib 0} so that it is right away the prefix?
     I believe LSR MIB does it that way now. You may want to do
     it consistently for all notifications.
     I can live with either way, but prefer them to be shorter OIDs.".
   RSP: We changed this to follow what LSR MIB does (i.e.
   mplsLdpNotifications 0) for shorter OIDs..PP "REQ: -
   mplsXxxLastChange
     does that time stamp only get changed if an addition/deletion takes
     place? Not if something gets changed via a SNMP SET command?
     I think I'd prefer to also see changes (modifications) via SET.
     But in any event, be very explicit about if those are included or
     not.".    RSP:  All Last change object DESCRIPTIONs have been
   updated to be very specific.

   "REQ:- mplsLdpLspType
     All that stuff in the DESCRIPTION clause is just a repeat of the
     TC DESCRIPTION clause. Seems not needed to me. What if a value
     gets added later... how do you stay in sync?".    RSP: This has
   been fixed.

   "REQ: - mplsFecAddrLength
     Should that be of SYNTAX InetAddressPrefixLength as per RFC3291?".
   RSP: yes, fixed.

   "REQ: - mplsFecAddrFamily and mplsFecAddr
     These are strange. The DESCRIPTIONS are certainly not meeting the
     requirements as specified in RFC3291. At other places you do it
     correct, so you do understand what is required I think.". RSP:
   changed to have a better descriptions.  Should note that the TLVs in
   the LDP Specification use Address Family Numbers and are still
   referring to RFC1700.

   "REQ: - mplsLdpLspFecTable claims to be a read-only table.
     Yet you have a read-create RowStatus object in it.".    RSP: fixed.


Expires December 2003                                         [Page 108]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   "REQ: - mplsLdpSessionUp and mplsLdpSessionDown
     Is it not better to just have one notification, namely a
     mplsLdpSessionStateChange and then the mplsLdpSesState object will
     explain what the change is?".    RSP:  We prefer to leave it this
   way. There are some 3rd Party applications that try to resolve
   Notifications, so you see one for down, then resolve this by seeing
   another one for up.  Granted, these 3rd party apps could be coded to
   parse the varbind within the trap, but then this requires coding
   whereas having 2 distinct notifications is easier on the developer.
   Granted, this maybe makes the MIB design more cumbersome.  If this is
   a blocking issue, then we will change it.

   "REQ:- COMPLIANCE section. I hope that INT ADs are OK with making
   IPv6
     addresses optional. Is that cause current LDP only supports IPv4?
     If so you may want to add that as an explanation.".    RSP: IPv6
   was made mandatory, also supported in MPLS LDP Spec (rfc3036.txt).

   Continue with MIB Dr Comments for the MPLS-LDP-GENERIC-MIB.

   "REQ:- same on mplsXXXIndexNext and RowStatus and STorageType
   objects".    RSP: These hdescriptions have been updated.  It should
   be noted, that these should be EXACTLY the same as the
   mplsLdpEntityTable since the Label Range Tables extend the Entity
   Table.  "REQ:- this looks wierd:
       ::= { mplsMib 6 } -- to be assigned
     use cc instead of 6 if you want IANA to assign, and do tell
       -- to be assigned by IANA
     and write something about it in an IANA Considerations Section if
     this is what you want.".    RSP: Added more comments, and added an
   IANA Considerations Section.  "REQ:- mplsGenModuleROCompliance
     I would call it mplsGenModuleReadOnlyCompliance
     You have used ReadOnly and Full in other places/mib modules and
     it is good to be clear and consistent".    RSP: done.

   MIB Doctor Review comments for ATM.

   "REQ:- s/Moduel/Module/".    RSP: done.

   "REQ:- same on mplsXXXIndexNext and RowStatus and STorageType
   objects".    RSP: done.

   "REQ:- this looks wierd:
       ::= { mplsMib 4 } -- to be assigned
     use cc instead of 4 if you want IANA to assign, and do tell
       -- to be assigned by IANA


Expires December 2003                                         [Page 109]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


     and write something about it in an IANA Considerations Section if
     this is what you want.".    RSP: done.

   "REQ:- See earlier remark on Notifications (use zero instead of 2
   right away)".    RSP:Removed this branch because there aren't any
   notifications in this MIB module.

   "REQ:- There are still some INTEGER enumerations that start with zero
     It is not a BLOCKING problem... but if acceptable, pls make it
   start
     at 1 (as you have done vor various others of these enumerations)".
   RSP: We would rather leave these enums starting with zero. (There are
   2 of them in the ATM Module).  The reason for leaving them is because
   the value zero is what the protocol uses.  We have added REFERENCES
   to these objects and more info in the descriptions themselves.  We
   believe it is in the best interest of developers to start enums at
   zero.  The INET-ADDRESS-MIB uses the value zero, and since we are
   already required to use that MIB, there is precedence for zero in an
   enum where it makes sense.  We believe the value of zero makes sense
   for where it is being used in this MIB module.

   "REQ:- mplsXxxxROCompliance  -> better mplsXxxxReadOnlyCompliance".
   RSP: done.

   "REQ:- some formatting problems with DEFVAL lines being split on 2
   lines?".    RSP: fixed.

   MIB Doctor Review comments for FrameRelay

   "REQ:- consistency in descriptors (FrameRelay vs FR etc)".    RSP:
   done.  "REQ:- same on mplsXXXIndexNext and RowStatus and STorageType
   objects".    RSP: done.  "REQ:- this looks wierd:
       ::= { mplsMib 5 } -- to be assigned
     use cc instead of 5 if you want IANA to assign, and do tell
       -- to be assigned by IANA
     and write something about it in an IANA Considerations Section if
     this is what you want.".    RSP: done.  "REQ:- See earlier remark
   on Notifications (use zero instead of 2 right away)".    RSP:Removed
   this branch because there aren't any notifications in this MIB
   module.

   "REQ:- There are still some INTEGER enumerations that start with zero
     It is not a BLOCKING problem... but if acceptable, pls make it
   start
     at 1 (as you have done vor various others of these enumerations)".
   RSP: We would rather leave these enums starting with zero. (There are


Expires December 2003                                         [Page 110]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   4 of them in the Frame Relay Module).  The reason for leaving them is
   because the value zero is what the protocol uses.  We have added
   REFERENCES to these objects and more info in the descriptions
   themselves.  We believe it is in the best interest of developers to
   start enums at zero.  The INET-ADDRESS-MIB uses the value zero, and
   since we are already required to use that MIB, there is precedence
   for zero in an enum where it makes sense.  We believe the value of
   zero makes sense for where it is being used in this MIB module.

   "REQ:-    mplsLdpEntityFrLRComponents OBJECT-TYPE
          SYNTAX      Unsigned32 (1..65535)
          MAX-ACCESS  read-create
          STATUS      current
          DESCRIPTION
              "Number of Label Range Components in the Initialization
              message.  This also represents the number of entries
              in the mplsLdpEntityConfFrLRTable which correspond
              to this entry."
      Where is this mplsLdpEntityConfFrLRTable ??".    RSP: fixed.
   "REQ:- I see the xxxDlci index objects start at zero.
     Pls add to DESCRIPTION clauses why zero must be an index.".    RSP:
   Since we are using DLCI and the value of zero is valid for a DLCI.  A
   statement was added about this.  Also, used the DLCI TC from
   rfc2115.txt to make this more clear.  NOTE: the MPLS-LDP-ATM-MIB
   module uses an index of the VP which can also take on the value of
   zero.  A statement was added to this Index also.  "REQ:-
   mplsXxxxROCompliance  -> better mplsXxxxReadOnlyCompliance".    RSP:
   done.



5.4.  Changes from <draft-ietf-mpls-ldp-mib-08.txt>

   The following changes are from the IESG MIB review.

   Changed "Label Switch Router" to "Label Switching Router".

   Spelling errors fixed (unlabelled, atttempt, subsytem).

   Changed some of the enums to start at 1, instead of zero:
   mplsLdpPeerLoopDetectionForPV and mplsLdpEntityOperStatus.

   Added REFERENCE clauses.

   Added a timestamp object for mplsLdpSesState changes.



Expires December 2003                                         [Page 111]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   Changed NMS to command generator as defined in RFC2571.

   Added a lastChange objects: mplsLdpEntityLastChange and
   mplsLdpPeerLastChange.

   Added TEXTUAL-CONVENTIONS for MplsLabelDistributionMethod and
   MplsRetentionMode.  These TCs have been incorporated into draft-ietf-
   mpls-tc-mib-04.txt.

   Divided up the one MIB MODULE into 3 additional modules for a total
   of 4 MIB MODULES: 1) mplsLdpMIB, 2) mplsLdpGenericMIB which includes
   objects pertaining to Ethernet as the L2, 3) mplsLdpAtmMIB which
   includes objects pertaining to ATM as the L2, and 4)
   mplsLdpFrameRelayMIB which includes objects pertaining to Frame Relay
   as the L2.

   Also, reduced the number of objects by creating the mplsLdpLspTable
   and removing the Mapping tables.

   In section 3.1 changed "where each row in the table initiates" to
   "where each row in the table represents".

   Updated Reference Section and divided them into Normative vs.
   Informative.

   Removed the MplsGenAddress TC and used the INET-ADDRESS-MIB's
   InetAddress TC.  Objects using this TC are:
   mplsLdpEntityTargetPeerAddr, mplsFecAddr, and
   mplsLdpSesPeerNextHopAddr and are noted in the conformance statements
   supporting: unknown(0), ipv4(1), and ipv6(2).

   Removed AddressFamilyNumbers TC and used InetAddressType TC from the
   INET-ADDRESS-MIB.  One of the MIB compilers as a warning because
   apparently one is expected to use InetAddressType and InetAddress
   together (although, think this restriction is too restrictive). Also,
   removed the reference for the Address Family Numbers MIB.

   Changed the name TargPeer to TargetPeer.

   Removed the Enable/Disable trap objects:
   mplsLdpEntityPVLMisTrapEnable, and mplsLdpSesUpDownTrapEnable.  RFC
   2573 should be used to eable/disable traps.

   Removed the import for "transmission" and instead, imported "mplsMIB
   from the MPLS-TC-MIB".



Expires December 2003                                         [Page 112]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   Changed mplsLdpEntityPVL to mplsLdpEntityPathVectorLimit and updated
   the DESCRIPTION clause.  Also, the PVL abbreviation was expanded to
   PathVectorLimit for other objects.

   Combined the objects: mplsLdpPeerLoopDectionForPV and mplsLdpPeerPVL
   into one object: mplsLdpPeerPathVectorLimit and updated the
   DESCRIPTION clause.

   mplsLdpEntityTcpDscPort uses InetPortNumber TC from the INET-ADDRESS-
   MIB.  Likewise, mplsLdpEntityUdpDscPort uses the InetPortNumber TC
   from the INET-ADDRESS-MIB.  Also a REFERENCE clause was added.

   The mplsLdpEntityMaxPduLength object has the SYNTAX range changed to
   start at 256.  Also the DESCRIPTION clause was updated.

   The mplsLdpSesMaxPduLen object's name was changed to
   mplsLdpSesMaxPduLength and a UNITS clause was added, and the
   DESCRIPTION clause was updated.  This object is related to the
   mplsLdpEntityMaxPduLength object.

   The mplsLdpEntityKeepAliveHoldTimer and mplsLdpEntityHelloHoldTimer
   DESCRIPTION clause was changed from "The two octet value" to "The
   16-bit integer value".

   The mplsLdpEntityHelloHoldTimer object's DESCRIPTION clause was
   updated.

   A range of Integer32(0..100) was added to the SYNTAX clause of the
   mplsLdpEntityInitSesThreshold object.  Also, the DESCRIPTION clause
   of this object was updated.

   The mplsLdpEntityOptionalParameters object was renamed to
   mplsLdpEntityLabelType.

   Updated the mplsLdpEntityAdminStatus and mplsLdpEntityRowStatus
   objects.  RowStatus now reflects the status of the row, and Admin
   status controls enabling/disabling the entry.

   Updated the DESCRIPTION clauses for the objects in the
   mplsLdpEntityStatsTable to refer to the
   mplsLdpEntityDiscontinuityTime object.

   Changed StorType to StorageType.





Expires December 2003                                         [Page 113]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


5.5.  Changes from <draft-ietf-mpls-ldp-mib-07.txt>

   There were three types of changes:  the first change was that all the
   MPLS Textual Conventions from this MIB, the LSR and MPLS-TE MIBs were
   moved into a new document [MPLSTCMIB], "draft-ietf-mpls-tc-
   mib-00.txt".  The Textual Conventions are now IMPORTED from
   [MPLSTCMIB].  The second type of change was updates based on comments
   from the IESG.  These changes will be discussed below.  The third
   type of changes were based on minor editorial changes from the co-
   authors.

   The "Introduction" and "Structure of the MIB" sections were reworded
   since they were repetitive.

   The "Overview" was rearranged.

   References were added to "The LDP Entity ATM Objects" and "The LDP
   Entity Frame Relay Objects" Sections.

   The Working Group mailing list and Chairs were added to the CONTACT-
   INFO.

   Updated the DESCRIPTION clause for the "mplsLdpEntityLdpId" object.

   Updated the mplsLdpEntityProtocolVersion to include a range
   (1..65535).

   Updated the "References" Section.

   Running the MIB through the smilint MIB compiler showed that some
   object names were longer than 32 characters, these were shortened to
   32 characters or fewer.

   The following changes were from the co-authors.

   Other minor editorial changes such as fixing typographical errors,
   and removing MIB comments which are no longer meaningful.

   Page 17 (also page 46) the description was enhanced to describe the
   version field in the LDP header from RFC3036.

   Removed WellKnown from the tcp and upd port names.  It's the ports
   that get set, and the default value is the well known (actually the
   registered) port number.

   mplsLdpEntityInitSesTrapEnable object is useless and was removed


Expires December 2003                                         [Page 114]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   since setting mplsLdpEntityInitSesThreshold=0 acheives the same
   thing.  Also removed it from the descriptive text in section 3.

   Page 47, mplsLdpSessionDiscontinuityTime The initial value of this
   was changed to be sysUpTime instead of zero.  sysUpTime for when the
   session starts is more meaningful and was added to the Session
   Up/Down Traps also.  Also, added the Session specific stats to the
   up/down traps.


5.6.  Changes from <draft-ietf-mpls-ldp-mib-06.txt>

   All changes were from the second last call which took place Thursday,
   July 20th, until Thursday, July 27th, 2000 and are described in the
   remainder of this section.

   Remove the reference to the MPLS framework document.

   Add an mplsFecIndexNext type of object.

   Change the conformance of the FEC table objects to be part of the
   mplsLdpGeneralGroup.

   The mplsLdpEntityConfGenericTable is no longer needed because the
   functionality has been absorbed by the
   mplsLdpEntityConfGenericLabelRangeTable.  The
   mplsLdpEntityConfGenericTable has been removed and the front section
   was updated accordingly.

   Other editorial issues, updating references, typos and so forth.


5.7.  Changes from <draft-ietf-mpls-ldp-mib-05.txt>

   The majority of changes in this revision are based on Last Call
   comments which were received during the last call from Thursday,
   March 9, 2000 to Friday, March 17, 2000, or slightly thereafter.
   Also, changes were made to agree with the latest specifications.
   These changes are described in this section.

   Changes due to draft-ietf-mpls-ldp-07.txt and draft-ietf-mpls-
   ldp-08.txt. Specifically, removing references to IPv4/IP and using
   router id, as appropriate.

   Removed vpMerge and vpAndVcMerge choices from the object,
   mplsLdpEntityAtmMergeCap.  VP Merge is not described in [RFC3036].


Expires December 2003                                         [Page 115]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   The LIB Table was removed and replaced by mapping tables to map LDP
   LSPs created by LDP sessions to the mplsInSegment, mplsOutSegment and
   mplsXC  tables in the LSR MIB.  The conformance section was updated
   to include a Mapping Group which is to be implemented iff these LSR
   MIB tables (mplsInSegmentTable, mplsOutSegmentTable and mplsXCTable)
   are implemented.

   The front section was updated to include information on the Generic
   label table.

   Added more in the front section on on Row
   Creation/adminStatus/OperStatus in the LDP Entity and related tables.

   Added a generic label range table. NOTE: there is NO corresponding
   LDP message which relates to the information in this table, however,
   this table does provide a way for a user to 'reserve' a generic label
   range.

   A new TEXTUAL-CONVENTION, MplsAtmVcIdentifier was added.  This TC has
   the same upper bounds as AtmVcIdentifier (from rfc2514) except that
   the lower bound is 32 (and not 0).  The lower bound is 32 since this
   value is specified by [RFC3035].

   Removed the scalar object mplsLsrLabelRetentionMode and added
   mplsLdpEntityLabelRetentionMode.  The change was made to allow
   configuring the retention mode on a per LDP Entity basis, as opposed
   for the entire LSR.

   Typo in section 3.5.2 was fixed.

   Typo in the mplsLdpSessionUp notification description was fixed.

   Section 'LDP Notifications' was expanded to cover both the
   'mplsLdpSessionUp' and 'mplsLdpSessionDown' traps.  Also, the objects
   which enable and disable these traps have been described in this
   Section:

   The 'mplsLdpEntityHopCountLoopDetection' object and the
   'mplsLdpEntityHopCount' object have been combined into the new
   object, 'mplsLdpEntityHopCountLimit'.

   MplsLabel has been updated to reflect the VPI value of 12 bits and
   not 8.

   Added DEFVAL clause to the 'mplsLdpEntityWellKnownDiscoveryPort'
   object.  The default value is 646.


Expires December 2003                                         [Page 116]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   Added UNITS and DEFVAL clauses to the 'mplsLdpEntityMaxPduLength'
   object.  The default value is 4096 and the units is octets.

   Added DEFVAL clause to 'mplsLdpEntityProtocolVersion' object.  The
   default value is 1.

    Added DEFVAL clause to 'mplsLdpEntityKeepAliveHoldTimer' of 40
   seconds.

   Added DEFVAL clause to 'mplsLdpEntityInitSesThreshold' object.  The
   default value is 8.

   The mplsLdpEntityWellKnownDiscoveryPort was changed into two objects,
   one for TCP and one for UDP.  The names are

   Typo in the description for the

   The mplsLdpEntityPeerTable was (re-)named mplsLdpPeerTable.  The
   mplsLdpSessionTable now AUGMENTs the mplsLdpPeerTable in order to
   show that these two tables are related.  There has been wording added
   to the mplsLdpSessionEntry description and to the description for the
   mplsLdpPeerTable.


5.8.  Changes from <draft-ietf-mpls-ldp-mib-04.txt>

   Editorial changes, fixing typo's, fixing wrapping lines, etc.

   Updated references for latest drafts, and added [RFC3032] and
   [RFC3034] to Reference Section.

   Added to the Acknowledgements Section.

   Changed the SYNTAX and DESCRIPTION of the
   'mplsLdpLsrLoopDetectionCapable' object, so that it will also support
   the loop detection by hop count.

   Combined the 'mplsLdpEntityLoopDetectionForPV' and 'mplsLdpEntityPVL'
   objects.  The functionality of the 'mplsLdpEntityLoopDectionForPV' is
   now denoted by the value of 0 (zero) in the 'mplsLdpEntityPVL'
   object.  This results in one less object
   'mplsLdpEntityLoopDectionForPV' but does not sacrifice functionality.

   Changed 'mplsLdpLibLabelType' into two objects:
   'mplsLdpLibInLabelType' and differ from the egress label type.  The
   MIB now reflects this.


Expires December 2003                                         [Page 117]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   The following items were changed as a result of the Frame Relay Forum
   dropping support for 17-bit DLCIs:  the MplsLabel TC description has
   been modified, and other Frame Relay Object descriptions were also
   modified (as specified in this section).

   The MplsLabel TC was also modified and reference 3. was added to the
   REFERENCE Clause.

   MplsLdpLabelTypes TC was modified to use an enum.

   InterfaceIndex support was added to the Entity information.  This was
   specifically requested by several members of the working group.  An
   additional table, mplsLdpEntityConfGenericTable as a way to configure
   Generic Labels, and an object, 'mplsLdpConfGenericIfIndexOrZero was
   added to map the InterfaceIndex used by Generic Labels.  Objects were
   also added to the 'mplsLdpEntityAtmParmsTable' and the and
   'mplsLdpEntityFrIfIndex', respectively.

   Changed the name of the 'mplsLdpEntityMtu' object to be
   'mplsLdpEntityMaxPduLength' which is more consistent with the LDP
   Specification.  Also, the description and SYNTAX were changed.

   Changed the SYNTAX of the 'mplsLdpSessionMaxPduLength' to unsigned32
   and changed the Range from (0..65535) to (1..65535).

   Added and improved the front section discussion on SNMP
   Notifications.

   Also, modified the DESCRIPTION clause of the

   Added objects to enable/disable the sending of traps:

   Added an object to enable/disable sending traps for Sessions changing
   from Up to Down, or Down to Up.

   Added notifications to generate traps from session changing from Up
   to Down, or Down to up.

   Added a StorageType object to the Entity and associated tables which
   are configurable.

   Added a Discontinuity Time object to the Entity Table,

   Added discussion on row creation in the Entity and other associated
   Entity tables.  This is a new Section in the Front part of the
   document called:


Expires December 2003                                         [Page 118]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   Removed the 'mplsLdpEntityControlMethod'.

   Made 'mplsLdpFecLspId' as part of the INDEX for the FEC table.  This
   is to allow FECs to map to multiple LSPs.  Also add a RowPointer to a
   row in the Session Table.

   Added an operation status object, 'mplsLdpLspOperStatus' and a last
   Change object, 'mplsLdpLspLastChangeto the LIB Table.  This will be
   used to detect whether an LSP has changed its status.

   Changed the name of the mplsLdpPeerTable to the
   mplsLdpEntityPeerTable.  This table contains information relevant to
   Peers which are known to specific Entities.  The indexing of this
   table has also changed to include the Row in the Entity Table that
   this Peer is known by.  The mplsLdpHelloAdjacencyTable and the
   mplsLdpSessionTable have been moved under this table.  Since Hello
   Adjacencies are related to Entity-Peer information and Sessions are
   related to Entity-Peer information this was seen as a comprehensive
   and coherent modelling.  Associated descriptions in the front section
   and in the tables have been changed to reflect this change.

   Moved the 'mplsLdpConfFrLen' object from the
   'mplsLdpEntityConfFrLabelRangeTable' to the
   'mplsLdpEntityFrameRelayParmsTable' since the Frame Relay
   interface/port can only use one header length at a time, i.e. a
   specific FR interface supports one address length for all VCs on that
   interface.  Also, changed the object so that it only supports 10 and
   23 bit DLCI lengths. (The 17 bit length was dropped by the Frame
   Relay Forum and thus, is no longer required.)  The name of this
   object was changed from 'mplsLdpConfFrLen' to 'mplsLdpEntityFrLen' to
   fit in with the 'mplsLdpEntityFrameRelayParmsTable'.

   Removed the seventeenDlciBits(1) value from the mplsLdpFrSessionLen
   object.  (The 17 bit length was dropped by the Frame Relay Forum and
   thus, is no longer required.)

   Corrected the range of the 'mplsLdpEntityIndexNext' object to include
   0 (zero).


5.9.  Changes from <draft-ietf-mpls-ldp-mib-03.txt>

   Reworded the description of the mplsLdpAtmSessionTable to clarify
   that one or MORE label range intersection(s) is/are represented in
   this table.



Expires December 2003                                         [Page 119]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   Reworded the description of the mplsLdpFrameRelaySessionTable to
   clarify that one or MORE label range intersection(s) is/are
   represented in this table.

   Added a new index, mplsLdpSessionPeerIndex, to the
   mplsLdpSessionPeerAddressTable.  This new index uniquely identifies
   the entry within a given session.  (Since  adding
   mplsLdpSessionPeerNextHopAddressType,
   mplsLdpSessionPeerNextHopAddress to the INDEX clause of the
   mplsLdpSessionPeerAddressTable leaves a table with only indices and
   no objects, the work around was to add a new index which uniquely
   differentiates an entry within a given session.)

   Quite a few changes to the mplsLdpPeerTable.  First, removed the
   mplsLdpPeerIndex from the mplsLdpPeerTable and other tables.  This
   index served no purpose, so was removed.  Second, removed the
   objects: mplsLdpPeerInternetworkAddrType, and
   mplsLdpPeerInternetworkAddr.  Third, reworded the description of this
   table to include information which is known during Session
   Intialization attempts, the specific information has to do with Loop
   Dection based on Path Vectors.  Since Section 3.5.3 of the LDP Spec
   when describing the PVLim says: "Although knowledge of a peer's path
   vector limit will not change an LSR's behavior, it does enable the
   LSR to alert an operator to a possible misconfiguration." and the
   object mplsLdpPeerPVL is sent as a varbind in the mplsLdpPVLMismatch
   notification.

   Removed the mplsLdpPeerIndex from the mplsLdpHelloAdjacencyTable.

   Removed the "IANA Address Family Numbers" MIB section.

   Updated the boiler.me from the ops web page dated Weds., Dec 22,
   1999.

   Updated the Security Section from the ops web page.

   Added the following objects to the mplsLdpEntityTable:
   mplsLdpEntityControlMethod, mplsLdpEntityLoopDectionForPV, and
   mplsLdpEntityPathVectorLimit.

   Removed mplsLdpSessionLabelAdvertisement,
   mplsLdpSessionLoopDetectionForPV, and mplsLdpSessionPathVectorLimit
   from the mplsLdpSessionTable.

   Changed the mplsLdpPathVectorLimitMismatch Notification to send
   mplsLdpEntityPathVectorLimit (instead of


Expires December 2003                                         [Page 120]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   mplsLdpSessionPathVectorLimit).

   Copied the MplsLabel TC from draft-ietf-mpls-lsr-mib-00.txt and
   replaced the MplsLdpGenAddr for mplsLdpLibInLabel and
   mplsLdpLibOutLabel with MplsLabel.

   The mplsLdpSessionIndex was removed throughout the MIB.  This was
   replaced by the object mplsLdpSessionDiscontinuityTime.  The
   motivation was to reduce the number of indices.

   The descriptions for the objects in the mplsLdpSessionStatsTable,
   mplsLdpSessionStatsUnknownMessageTypeErrors and
   mplsLdpSessionStatsUnknownTlvErrors, have been updated to include a
   reference to the mplsLdpSessionDiscontinuityTime object.


5.10.  Changes from <draft-ietf-mpls-ldp-mib-02.txt>

   Added Scalar Objects: mplsLdpLsrLoopDetectionPresent, and
   mplsLdpEntityIndexNext.

   Added the following objects to the mplsLdpEntityTable:
   mplsLdpEntityProtocolVersion, mplsLdpEntityAdminStatus,
   mplsLdpEntityOperStatus, mplsLdpEntityTargetedPeer,
   mplsLdpEntityTargetedPeerAddrType, mplsLdpEntityTargetedPeerAddr, and
   mplsLdpEntityHelloHoldTimer.

   Changed the description of the mplsLdpEntityAtmParmsTable and added
   the following objects to this table: mplsLdpEntityAtmLsrConnectivity,
   mplsLdpEntityDefaultControlVpi, mplsLdpEntityDefaultControlVci,
   mplsLdpEntityUnlabTrafVpi, and mplsLdpEntityUnlabTrafVci.  NOTE:  the
   last four objects were in Version 01 of the MIB but were mistakenly
   omitted from Version 02. Now, they are back.

   Changed the indexing of the mplsLdpEntityConfAtmLabelRangeTable to
   include the minimum VPI/VCI.  This is to ensure that indices in this
   table are unique.

   Changed the indexing of the mplsLdpEntityConfFrLabelRangeTable, to
   include the minimum DLCI value.  This is to ensure that indices in
   this table are unique.

   Added [RFC3036] to Reference Section.





Expires December 2003                                         [Page 121]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


5.11.  Changes from <draft-ietf-mpls-ldp-mib-01.txt>

   The MIB was updated to correspond to draft-ietf-mpls-ldp-06.txt of
   the LDP Specification [RFC3036].

   The front section was updated.

   The MIB was made to be less ATM-centric.  Essentially, the ATM
   specific objects where removed from the tables and placed in ATM
   specific Tables.  A type was added to the base tables and a row is to
   be created in the ATM/FR/etc.  type table.  Apropos compliance
   statements were added to reflect the separation of ATM and Frame
   Relay objects into their respective tables.

   Objects for Loop Detection were removed from describing the LDP
   implementation (i.e. the scalars were removed) and Loop Dection
   objects were added to the Session Table.  (Although as the LDP
   Specification indicates loop detection should be for an LSR within a
   domain.)

   The following tables were added:  mplsLdpEntityAtmParmsTable,
   mplsLdpEntityConfAtmLabelRangeTable, mplsLdpFrameRelayParmsTable,
   mplsLdpConfFrLabelRangeTable, mplsLdpAtmSessionTable,
   mplsLdpFrameRelaySessionTable, mplsLdpSessionPeerAddressTable,
   mplsLdpLibTable, and the mplsLdpFecTable.

   The following notifications were added:  notification for Session
   removal.

   The following objects were removed from the Session Table:
   mplsLdpSessionRole was removed (this can be determined by comparing
   LSR Ids and does not need to be explicitly in the MIB.)  ATM specific
   objects (mplsLdpSessionAtmLabelRangeLowerBoundVpi
   mplsLdpSessionAtmLabelRangeLowerBoundVci,
   mplsLdpSessionAtmLabelRangeUpperBoundVpi
   mplsLdpSessionAtmLabelRangeUpperBoundVci) were removed and put into a
   separate table.  Frame Relay objects were added in a separate table.

   Hello Adjacency Table was updated.

   The objects, mplsLdpSessionRejectedParamErrors,
   mplsLdpSessionRejectedNoHelloErrors, mplsLdpBadLdpIdentifierErrors,
   mplsLdpBadPduLengthErrors, mplsLdpBadMessageLengthErrors,
   mplsLdpBadTlvLengthErrors, mplsLdpMalformedTlvValueErrors,
   mplsLdpKeepAliveTimerExpiredErrors, mplsLdpShutdownNotifReceived, and
   mplsLdpShutdownNotifSent were added to the mplsLdpEntityStatsTable.


Expires December 2003                                         [Page 122]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   The mplsLdpSessionStatsTable was added to count statics based on a
   per Session basis.

   The mplLdpPeerConfAtmLabelRangeTable has been removed.  There is no
   need to configure information for a Peer.  All information for a peer
   is learned, thus peer information is read-only.

   (Editorial) References were updated to reflect the documents which
   this version was based on.


5.12.  Changes from <draft-ietf-mpls-ldp-mib-00.txt>

   Textual conventions were added for the LSR Identifier and the LDP
   Identifier.

   Top-level mib structure was added. The LDP MIB falls under a proposed
   hierarchy of mpls.mplsProtocols.

   The mib hierarchy within the LDP MIB was also changed.  A new branch,
   under mpls.mplsProtocols.mplsLdpMIB.mplsLdpObjects was added.  This
   branch is mplsLdpLsrObjects.  Currently, this contains several new
   scalar objects:  mplsLdpLsrID, mplsLdpLsrLoopDetectionPresent,
   mplsLdpLsrLoopDetectinAdminStatus, mplsLdpLsrPathVectorLimit,
   mplsLdpLsrHopCountLimit, mplsLdpLsrLoopPreventionPresent,
   mplsLdpLsrLoopPreventionAdminStatus, and
   mplsLdpLsrLabelRetentionMode.

   mplsLdpEntityTable is now indexed by mplsLdpEntityIdentifier, which
   is the LDP Identifier used in Session establishment.
   mplsLdpEntityLoopDetection and mplsLdpEntityLoopPrevention objects
   were removed from this table.

   The following objects were added to the mplsLdpEntityTable:
   mplsLdpEntityLabelSpaceType, mplsLdpEntityUnlabTrafVpi,
   mplsLdpEntityUnlabTrafVci, mplsLdpEntityMergeCapability,
   mplsLdpEntityVcDirectionality, and
   mplsLdpEntityLabelDistributionMethod.

   The following objects were added to the mplsLdpPeerEntityTable:
   mplsLdpPeerLabelDistributionMethod.

   The following object was removed from the mplsLdpEntityStatsTable:
   mplsLdpEntityEstablishedSessions.

   References were added and revised.


Expires December 2003                                         [Page 123]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


6.  Acknowledgments

   This document is a product of the MPLS Working Group.  The authors
   would like to thank Mike MacFadden and Adrian Farrel for their
   helpful comments on several reviews.  Also, the authors would like to
   give a special acknowledgement to Bert Wijnen for his many detailed
   reviews.  Bert's assistance and guidance is greatly appreciated.

   We would also like to thank Cheenu Srinivasan, Arun Viswanathan and
   Thomas D. Nadeau, the authors of the MPLS-LSR-STD-MIB [LSRMIB], for
   their assistance.

   Additionally, there have been other members of the working group that
   have been very helpful: Alan Kullberg from NetPlane Systems gave
   input on earlier versions of this document, and more recently, Riza
   Cetin of Alcatel and Neil Jerram of Data Connection who both provided
   MIB objects.

   Early versions of this document were also reviewed by colleagues at
   Nortel Networks and Ericsson. The authors would like to thank the
   following people:  Leigh McLellan, Geetha Brown, Geping Chen and
   Charlan Zhou from Nortel Networks, and Zoltan Takacs and Bo
   Augustsson from Ericsson.

























Expires December 2003                                         [Page 124]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


7.  Normative References

[RFC2115]   Brown, C., and F. Baker, "Management Information Base for
            Frame Relay DTEs Using SMIv2", RFC 2115, September 1997.

[RFC2119]   Bradner, S., "Key words for use in RFCs to Indicate
            Requirement Levels", BCP 14, RFC 2119, Harvard University,
            March 1997

[RFC2514]   Noto, M., E. Spiegel, K. Tesink, editors, "Definition of
            Textual Conventions and OBJECT-IDENTITIES for ATM
            Management", RFC 2514, February 1999.

[RFC2578]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
            Rose, M. and S. Waldbusser, "Structure of Management
            Information Version 2 (SMIv2)", STD 58, RFC 2578, April
            1999.

[RFC2579]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
            Rose, M. and S. Waldbusser, "Textual Conventions for SMIv2",
            STD 58, RFC 2579, April 1999.

[RFC2580]   McCloghrie, K., Perkins, D., Schoenwaelder, J., Case, J.,
            Rose, M. and S. Waldbusser, "Conformance Statements for
            SMIv2", STD 58, RFC 2580, April 1999.

[RFC2863]   McCloghrie, K., F. Kastenholz,  "The Interfaces Group MIB
            using SMIv2", RFC 2863, June 2000.

[RFC3031]   Rosen, E., Viswananthan, A., and R. Callon, "Multiprotocol
            Label Switching Architecture", RFC 3031, January 2001.

[RFC3032]   Rosen, E., Tappan, D., Fedorkow, G., Rekhter, Y., Farinacci,
            D., Li, T. and A. Conta, "MPLS Label Stack Encoding", RFC
            3032, January 2001.

[RFC3034]   Conta, A., Doolan, P., and A. Malis, "Use of Label Switching
            on Frame Relay Networks Specification", RFC 3034, January
            2001.

[RFC3035]   Davie, B., Lawrence, J., McCloghrie, K., Rosen, E., Swallow,
            G., Rekhter, Y.  and P. Doolan, "MPLS using LDP and ATM VC
            Switching", RFC 3035, January 2001.

[RFC3036]   Andersson, L., Doolan, P., Feldman, N., Fredette, A., and B.
            Thomas, "LDP Specification", RFC 3036, January 2001.


Expires December 2003                                         [Page 125]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


[RFC3037]   Thomas, B. and E. Gray, "LDP Applicability", RFC 3037,
            January 2001.

[RFC3215]   Boscher, C., Cheval, P., Wu L. and E. Gray, "LDP State
            Machine", RFC 3215, January 2002.

[RFC3289]   Baker, F., Chan, K. and A. Smith, "Management Information
            Base for the Differentiated Services Architecture", RFC
            3289, May 2002.

[RFC3291]   Daniele, M., Haberman, B., Routhier, S. and J.
            Schoenwaelder, "Textual Coventions for Internet Network
            Addresses", RFC 3291, May 2002.

[LSRMIB]    Srinivansan, C., Viswanathan, A., and T. Nadeau "MPLS Label
            Switching Router Management Information Base Using SMIv2",
            draft-ietf-mpls-lsr-mib-11.txt, June 2003.

[MPLSTCMIB] Nadeau, T., J. Cucchiara, (Eds.)  "Definitions of Textual
            Conventions for Multiprotocol Label Switching Management",
            draft-ietf-mpls-tc-mib-08.txt, June 2003.



























Expires December 2003                                         [Page 126]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


8.  Informative References

[RFC2026]   S. Bradner, "The Internet Standards Process -- Revision 3",
            RFC 2026, October 1996.

[RFC2684]   Grossman, D., and J. Heinanen, "Multiprotocol Encapsulation
            over ATM Adaptation Layer 5", RFC 2684, September 1999.

[RFC3410]   Case, J., Mundy, R., Partain, D. and B. Stewart,
            "Introduction and Applicability Statements for Internet-
            Standard Management Framework", RFC 3410, December 2002.

[MPLSMGMT]  Nadeau, T., Srinivasan, C., and A. Farrel, "Multiprotocol
            Label Switching (MPLS) Management Overview", draft-ietf-
            mpls-mgmt-overview-06.txt, June 2003.



9.  Security Considerations

   This Security Considerations section consists of 4 subsections, one
   for each of the MIB Modules in this document.


9.1.  Security Considerations for MPLS-LDP-STD-MIB

   There are a number of management objects defined in this MIB module
   with a MAX-ACCESS clause of read-write and/or read-create.  Such
   objects may be considered sensitive or vulnerable in some network
   environments.  The support for SET operations in a non-secure
   environment without proper protection can have a negative effect on
   network operations.  These are the tables and objects and their
   sensitivity/vulnerability:

   o    the mplsLdpEntityTable contains objects to provision potential
        LDP sessions on the Label Switching Router (LSR) or Label Edge
        Router (LER).   The mplsLdpLspFecTable contains objects which
        associate an LSP with a FEC.  Unauthorized access to objects in
        these tables, could result in disruption of traffic on the
        network.  This is especially true if an LDP session has been
        established.  The use of stronger mechanisms such as SNMPv3
        security should be considered where possible.  Specifically,
        SNMPv3 VACM and USM MUST be used with any v3 agent which
        implements this MIB.  Administrators should consider whether
        read access to these objects should be allowed, since read
        access may be undesirable under certain circumstances.


Expires December 2003                                         [Page 127]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   Some of the readable objects in this MIB module i.e., "objects with a
   MAX-ACCESS other than not-accessible", may be considered sensitive or
   vulnerable in some network environments.  It is thus important to
   control even GET and/or NOTIFY access to these objects and possibly
   to even encrypt the values of these objects when sending them over
   the network via SNMP.  These are the tables and objects and their
   sensitivity/vulnerability:

   o    the mplsLdpEntityTable, mplsLdpPeerTable, mplsLdpSesTable and
        mplsLdpSesStatsTable collectively show the LDP LSP network
        topology.  If an Administrator does not want to reveal the LDP
        LSP topology of the network, then these tables should be
        considered sensitive/vulnerable.


9.2.  Security Considerations for MPLS-LDP-ATM-STD-MIB

   There are a number of management objects defined in this MIB module
   with a MAX-ACCESS clause of read-write and/or read-create.  Such
   objects may be considered sensitive or vulnerable in some network
   environments.  The support for SET operations in a non-secure
   environment without proper protection can have a negative effect on
   network operations.  These are the tables and objects and their
   sensitivity/vulnerability:

   o    the mplsLdpEntityAtmTable and mplsLdpEntityAtmLRTable contain
        objects to provision potential LDP sessions on the Label
        Switching Router (LSR) or Label Edge Router (LER) over Layer 2
        of ATM.  These tables extend the mplsLdpEntityTable in the MPLS-
        LDP-MIB.  Unauthorized access to objects in these tables, could
        result in disruption of traffic on the network.  This is
        especially true if an LDP session has been established.  The use
        of stronger mechanisms such as SNMPv3 security should be
        considered where possible.  Specifically, SNMPv3 VACM and USM
        MUST be used with any v3 agent which implements this MIB.
        Administrators should consider whether read access to these
        objects should be allowed, since read access may be undesirable
        under certain circumstances.

   Some of the readable objects in this MIB module i.e., "objects with a
   MAX-ACCESS other than not-accessible", may be considered sensitive or
   vulnerable in some network environments.  It is thus important to
   control even GET and/or NOTIFY access to these objects and possibly
   to even encrypt the values of these objects when sending them over
   the network via SNMP.  These are the tables and objects and their
   sensitivity/vulnerability:


Expires December 2003                                         [Page 128]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   o    the mplsLdpEntityAtmTable and mplsLdpEntityAtmLRTable show the
        Label Ranges for ATM.  If an Administrator does not want to
        reveal this information then these tables should be considered
        sensitive/vulnerable and treated accordingly.



9.3.  Security Considerations for MPLS-LDP-FRAME-RELAY-STD-MIB

   There are a number of management objects defined in this MIB module
   with a MAX-ACCESS clause of read-write and/or read-create.  Such
   objects may be considered sensitive or vulnerable in some network
   environments.  The support for SET operations in a non-secure
   environment without proper protection can have a negative effect on
   network operations.  These are the tables and objects and their
   sensitivity/vulnerability:

   o    the mplsLdpEntityFrameRelayTable and
        mplsLdpEntityFrameRelayLRTable contain objects to provision
        potential LDP sessions on the Label Switching Router (LSR) or
        Label Edge Router (LER) over Layer 2 of Frame Relay.  These
        tables extend the mplsLdpEntityTable in the MPLS-LDP-MIB.
        Unauthorized access to objects in these tables, could result in
        disruption of traffic on the network.  This is especially true
        if an LDP session has been established.  The use of stronger
        mechanisms such as SNMPv3 security should be considered where
        possible.  Specifically, SNMPv3 VACM and USM MUST be used with
        any v3 agent which implements this MIB.  Administrators should
        consider whether read access to these objects should be allowed,
        since read access may be undesirable under certain
        circumstances.

   Some of the readable objects in this MIB module i.e., "objects with a
   MAX-ACCESS other than not-accessible", may be considered sensitive or
   vulnerable in some network environments.  It is thus important to
   control even GET and/or NOTIFY access to these objects and possibly
   to even encrypt the values of these objects when sending them over
   the network via SNMP.  These are the tables and objects and their
   sensitivity/vulnerability:

   o    the mplsLdpEntityFrameRelayTable and
        mplsLdpEntityFrameRelayLRTable show the Label Ranges for Frame
        Relay.  If an Administrator does not want to reveal this
        information then these tables should be considered
        sensitive/vulnerable and treated accordingly.



Expires December 2003                                         [Page 129]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


9.4.  Security Considerations for MPLS-LDP-GENERIC-STD-MIB

   There are a number of management objects defined in this MIB module
   with a MAX-ACCESS clause of read-write and/or read-create.  Such
   objects may be considered sensitive or vulnerable in some network
   environments.  The support for SET operations in a non-secure
   environment without proper protection can have a negative effect on
   network operations.  These are the tables and objects and their
   sensitivity/vulnerability:

   o    the mplsLdpEntityGenericLRTable contains objects to provision
        potential LDP sessions on the Label Switching Router (LSR) or
        Label Edge Router (LER) over Layer 2 of Ethernet.  This table
        extends the mplsLdpEntityTable in the MPLS-LDP-MIB.
        Unauthorized access to objects in these tables, could result in
        disruption of traffic on the network.  This is especially true
        if an LDP session has been established.  The use of stronger
        mechanisms such as SNMPv3 security should be considered where
        possible.  Specifically, SNMPv3 VACM and USM MUST be used with
        any v3 agent which implements this MIB.  Administrators should
        consider whether read access to these objects should be allowed,
        since read access may be undesirable under certain
        circumstances.

   Some of the readable objects in this MIB module i.e., "objects with a
   MAX-ACCESS other than not-accessible", may be considered sensitive or
   vulnerable in some network environments.  It is thus important to
   control even GET and/or NOTIFY access to these objects and possibly
   to even encrypt the values of these objects when sending them over
   the network via SNMP.  These are the tables and objects and their
   sensitivity/vulnerability:

   o    the mplsLdpEntityGenericLRTable shows the Label Ranges for
        ethernet.  If an Administrator does not want to reveal this
        information then these tables should be considered
        sensitive/vulnerable and treated accordingly.


9.5.  Additional Security Considerations

   The following paragraphs describe additional security considerations
   which are applicable to all 4 of the MIB Modules in this document.

   SNMP versions prior to SNMPv3 did not include adequate security.
   Even if the network itself is secure "for example by using IPSec",
   even then, there is no control as to who on the secure network is


Expires December 2003                                         [Page 130]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


   allowed to access and GET/SET "read/change/create/delete" the objects
   in this MIB module.

   It is RECOMMENDED that implementers consider the security features as
   provided by the SNMPv3 framework "see [RFC3410], section 8",
   including full support for the SNMPv3 cryptographic mechanisms "for
   authentication and privacy".

   Further, deployment of SNMP versions prior to SNMPv3 is NOT
   RECOMMENDED. Instead, it is RECOMMENDED to deploy SNMPv3 and to
   enable cryptographic security.  It is then a customer/operator
   responsibility to ensure that the SNMP entity giving access to an
   instance of this MIB module, is properly configured to give access to
   the objects only to those principals "users" that have legitimate
   rights to indeed GET or SET "change/create/delete" them.



10.  IANA Considerations

   As described in [MPLSMGMT] and as requested in the MPLS-TC-STD-MIB
   [MPLSTCMIB], MPLS related standards track MIB modules should be
   rooted under the mplsStdMIB subtree.  There are 4 MPLS MIB Modules
   contained in this document, each of the following "IANA
   Considerations" subsections requests IANA for a new assignment under
   the mplsStdMIB subtree.  New assignments can only be made via a
   Standards Action as specified in [RFC2434].


10.1.  IANA Considerations for MPLS-LDP-STD-MIB

   The IANA is requested to assign { mplsStdMIB 4 } to the MPLS-LDP-STD-
   MIB module specified in this document.


10.2.  IANA Considerations for MPLS-LDP-ATM-STD-MIB

   The IANA is requested to assign { mplsStdMIB 5 } to the MPLS-LDP-ATM-
   STD-MIB module specified in this document.


10.3.  IANA Considerations for MPLS-LDP-FRAME-RELAY-STD-MIB

   The IANA is requested to assign { mplsStdMIB 6 } to the MPLS-LDP-
   FRAME-RELAY-STD-MIB module specified in this document.



Expires December 2003                                         [Page 131]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


10.4.  IANA Considerations for MPLS-LDP-GENERIC-STD-MIB

   The IANA is requested to assign { mplsStdMIB 7 } to the MPLS-LDP-
   GENERIC-STD-MIB module specified in this document.


11.  Intellectual Property Notice

   The IETF takes no position regarding the validity or scope of any
   intellectual property or other rights that might be claimed to
   pertain to the implementation or use of the technology described in
   this document or the extent to which any license under such rights
   might or might not be available; neither does it represent that it
   has made any effort to identify any such rights.  Information on the
   IETF's procedures with respect to rights in standards-track and
   standards-related documentation can be found in BCP-11 [RFC2028].
   Copies of claims of rights made available for publication and any
   assurances of licenses to be made available, or the result of an
   attempt made to obtain a general license or permission for the use of
   such proprietary rights by implementors or users of this
   specification can be obtained from the IETF Secretariat.

   The IETF invites any interested party to bring to its attention any
   copyrights, patents or patent applications, or other proprietary
   rights that may cover technology that may be required to practice
   this standard.  Please address the information to the IETF Executive
   Director.


12.  Authors' Addresses


                  James V. Luciani
                  Consultant
                  PO Box 1010
                  Concord, MA  01742
                  USA
                  Email: james_luciani@mindspring.com

                  Hans Sjostrand
                  ipUnplugged
                  P.O. Box 101 60
                  S-121 28 Stockholm, Sweden
                  Phone: +46 8 725 5930
                  Email: hans@ipunplugged.com



Expires December 2003                                         [Page 132]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


                  Joan Cucchiara
                  Artel
                  237 Cedar Hill Street
                  Marlborough, MA  01752
                  Phone: +1-508-303-8200 x302
                  Email: jcucchiara@artel.com



13.  Full Copyright Statement

   Copyright (C) The Internet Society (2003). All Rights Reserved.


   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implementation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph are
   included on all such copies and derivative works.  However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the  purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into languages other than
   English.

   The limited permissions granted above are perpetual and will not be
   revoked by the Internet Society or its successors or assigns.

   This document and the information contained herein is provided on an
   "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.











Expires December 2003                                         [Page 133]

INTERNET-DRAFT                MPLS LDP MIB                     June 2003


