





Internet Engineering Task Force                            S. Hollenbeck
Internet-Draft                                            VeriSign, Inc.
November 10, 2000                                  Expires: May 10, 2001

             Extensible Provisioning Protocol Host Mapping
                   <draft-hollenbeck-epp-host-00.txt>

Status of this Memo

  This document is an Internet-Draft and is in full conformance with all
  provisions of Section 10 of RFC2026.

  Internet-Drafts are working documents of the Internet Engineering Task
  Force (IETF), its areas, and its working groups.  Note that other
  groups may also distribute working documents as Internet-Drafts.

  Internet-Drafts are draft documents valid for a maximum of six months
  and may be updated, replaced, or obsoleted by other documents at any
  time.  It is inappropriate to use Internet-Drafts as reference
  material or to cite them other than as "work in progress".

  The list of current Internet-Drafts can be accessed at
  http://www.ietf.org/ietf/1id-abstracts.txt

  The list of Internet-Draft Shadow Directories can be accessed at
  http://www.ietf.org/shadow.html.

Abstract

  This document describes an Extensible Provisioning Protocol (EPP)
  mapping for the provisioning and management of Internet host names
  stored in a shared central repository.  Specified in XML, the mapping
  defines EPP command syntax and semantics as applied to host names.

Conventions Used In This Document

  The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
  "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
  document are to be interpreted as described in [RFC2119].

  In examples, "C:" represents lines sent by a protocol client and "S:"
  represents lines returned by a protocol server.  Indentation in
  examples is provided only to illustrate element relationships and is
  not a REQUIRED feature of this protocol.

  XML protocol elements are case sensitive.





Hollenbeck                Expires May 10, 2001                  [Page 1]

Internet-Draft              EPP Host Mapping           November 10, 2000


Table of Contents

  1. Introduction .................................................    3
  2. Object Attributes ............................................    4
  2.1 Host Names ..................................................    4
  2.2 Client Identifiers ..........................................    4
  2.3 Dates and Times .............................................    4
  2.4 Authorization Identifiers ...................................    4
  2.5 IP Addresses ................................................    4
  3. EPP Command Mapping ..........................................    5
  3.1 EPP Query Commands ..........................................    5
  3.1.1 EPP <info> Command ........................................    5
  3.1.2 EPP <ping> Command ........................................    8
  3.1.3 EPP <transfer> Command ....................................    9
  3.2 EPP Transform Commands ......................................    9
  3.2.1 EPP <create> Command ......................................    9
  3.2.2 EPP <delete> Command ......................................   12
  3.2.3 EPP <renew> Command .......................................   13
  3.2.4 EPP <transfer> Command ....................................   14
  3.2.5 EPP <update> Command ......................................   14
  4. Formal Syntax ................................................   16
  5. Internationalization Considerations ..........................   20
  6. IANA Considerations ..........................................   20
  7. Security Considerations ......................................   20
  8. References ...................................................   21
  9. Author's Address .............................................   23
  10. Full Copyright Statement ....................................   24
























Hollenbeck                Expires May 10, 2001                  [Page 2]

Internet-Draft              EPP Host Mapping           November 10, 2000


1. Introduction

  This document describes an internet host name mapping for version 1.0
  of the Extensible Provisioning Protocol (EPP).  This mapping is
  specified using the Extensible Markup Language (XML) 1.0 as described
  in [XML] and XML Schema notation as described in [XML-SD] and [XML-
  SS].

  The referenced XML Schema documents recently progressed from Working
  Draft status to Candidate Recommendation status.  The references to
  these documents and the URIs used to refer to XML Schema namespaces
  MUST be changed once XML parsers that support the updated
  specifications are available.

  [EPP] provides a complete description of EPP command and response
  structures.  A thorough understanding of the base protocol
  specification is necessary to understand the mapping described in this
  document.

  This document assumes that host names have a subordinate relationship
  to a parent domain name.  For example, host name "ns1.example.com" has
  a subordinate relationship to parent domain name "example.com".  EPP
  actions (such as object transfers) that do not preserve this
  relationship MUST be explicitly disallowed.

  It is important to note that XML is case sensitive.  XML
  specifications and examples provided in this document MUST be
  interpreted in the exact character case presented to develop a
  conforming implementation.

  This document is being discussed on the "rrp" mailing list.  To join
  the list, send a message to <majordomo@NSIRegistry.net> with the words
  "subscribe rrp" in the body of the message.  There is a web site for
  the list archives at <http://www.NSIRegistry.net/maillist/rrp>.

















Hollenbeck                Expires May 10, 2001                  [Page 3]

Internet-Draft              EPP Host Mapping           November 10, 2000


2. Object Attributes

  An EPP host object has attributes and associated values that may be
  viewed and modified by the sponsoring client or the server.  This
  section describes each attribute type in detail.

2.1 Host Names

  The syntax for host names described in this document MUST conform to
  [RFC952] as updated by [RFC1123].  These conformance requirements MAY
  change as a result of progressing work in developing standards for
  internationalized host names.

2.2 Client Identifiers

  All EPP clients are identified by a server-unique identifier.  Client
  identifiers use the contact identifier syntax described in [EPP-C].

2.3 Dates and Times

  Date and time attribute values MUST be represented in Universal
  Coordinated Time (UTC). Both extended and truncated date and time
  forms defined in [ISO8601] MAY be used.

2.4 Authorization Identifiers

  Authorization identifiers are associated with host name objects for
  future use.  They are not required for specific EPP command functions
  at this time.

2.5 IP Addresses

  The syntax for IPv4 addresses described in this document MUST conform
  to [RFC791].  The syntax for IPv6 addresses described in this document
  MUST conform to [RFC1883].

  A server SHOULD reject IP addresses that have not been allocated for
  public use.  A list of unallocated IPv4 address ranges is maintained
  in [IANAa].  A list of unallocated IPv6 address ranges is maintained
  in [IANAb].  Additional IPv4 address ranges that are not for public
  use are documented in [RFC1918].










Hollenbeck                Expires May 10, 2001                  [Page 4]

Internet-Draft              EPP Host Mapping           November 10, 2000


3. EPP Command Mapping

  A detailed description of the EPP syntax and semantics can be found in
  [EPP].  The command mappings described here are specifically for use
  in provisioning and managing internet host names via EPP.

3.1 EPP Query Commands

  EPP provides two commands to retrieve host information: <info> to
  retrieve detailed information associated with a host, <ping> to
  determine if a host is known to the server.

3.1.1 EPP <info> Command

  The EPP <info> command is used to retrieve information associated with
  a host.  In addition to the standard EPP command elements, the <info>
  command MUST contain a <host:info> element that identifies the host
  namespace and the location of the host schema.  The <host:info>
  element MUST contain the following child elements:

  - A <host:name> element that contains the fully qualified host name
  for which information is requested.

  Example <info> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xmlns:epp"
  C:     xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xmlns:epp epp.xsd">
  C:  <command>
  C:    <info>
  C:      <host:info xmlns:host="urn:iana:xmlns:host"
  C:       xsi:schemaLocation="urn:iana:xmlns:host host.xsd">
  C:        <host:name>ns1.example.com</host:name>
  C:      </host:info>
  C:    </info>
  C:    <trans-id>
  C:      <date>2000-06-08</date>
  C:      <client-id>ClientX</client-id>
  C:      <code>ABC-12345-XYZ</code>
  C:    </trans-id>
  C:  </command>
  C:</epp>

  When an <info> command has been processed successfully, the EPP
  <response-data> element MUST contain a child <host:info-data> element
  that identifies the host namespace and the location of the host
  schema.  The <host:info-data> element SHALL contain the following



Hollenbeck                Expires May 10, 2001                  [Page 5]

Internet-Draft              EPP Host Mapping           November 10, 2000


  child elements:

  - A <host:name> element that contains the fully qualified name of the
  host.

  - A <host:client-id> element that contains the identifier of the
  sponsoring client.

  - Zero or more <host:address> elements that contain the IP addresses
  associated with the host.

  - A <host:created-by> element that contains the identifier of the
  client that created the host name.

  - A <host:created-date> element that contains the date and time of
  host creation.

  - A <host:last-updated-by> element that contains the identifier of the
  client that last updated the host name.  This element MUST NOT be
  present if the host has never been modified.

  - A <host:last-updated-date> element that contains the date and time
  of the most recent host modification.  This element MUST NOT be
  present if the host has never been modified.

  - A <host:last-transfer-date> element that contains the date and time
  of the most recent successful transfer.  This element MUST NOT be
  provided if the host has never been transferred.

  - A <host:auth-id> element derived from either the original creation
  transaction or the most recent successful parent domain transfer
  transaction.  This element MUST NOT be provided if the querying client
  is not the current sponsoring client.


















Hollenbeck                Expires May 10, 2001                  [Page 6]

Internet-Draft              EPP Host Mapping           November 10, 2000



  Example <info> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xmlns:epp"
  S:     xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xmlns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <text>Command completed successfully</text>
  S:    </result>
  S:    <response-data>
  S:      <host:info-data xmlns:host="urn:iana:xmlns:host"
  S:       xsi:schemaLocation="urn:iana:xmlns:host host.xsd">
  S:        <host:name>ns1.example.com</host:name>
  S:        <host:client-id>ClientY</host:client-id>
  S:        <host:address>
  S:        <host:ipv4>192.1.2.3</host:ipv4>
  S:        </host:address>
  S:        <host:address>
  S:          <host:ipv6>1080:0:0:0:8:800:200C:417A</host:ipv6>
  S:        </host:address>
  S:        <host:created-by>ClientX</host:created-by>
  S:        <host:created-date>1999-04-03T22:00:00.0Z
  S:        </host:created-date>
  S:        <host:last-updated-by>ClientX</host:last-updated-by>
  S:        <host:last-updated-date>1999-12-03T09:00:00.0Z
  S:        </host:last-updated-date>
  S:        <host:last-transfer-date>2000-04-08T09:00:00.0Z
  S:        </host:last-transfer-date>
  S:        <host:auth-id>
  S:          <host:date>2000-04-08</host:date>
  S:          <host:client-id>ClientY</host:client-id>
  S:          <host:code>ABC-98765-XYZ</host:code>
  S:        </host:auth-id>
  S:      </host:info-data>
  S:    </response-data>
  S:    <trans-id>
  S:      <date>2000-06-08</date>
  S:      <client-id>ClientX</client-id>
  S:      <code>ABC-12345-XYZ</code>
  S:    </trans-id>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if an <info> command could not
  be processed for any reason.




Hollenbeck                Expires May 10, 2001                  [Page 7]

Internet-Draft              EPP Host Mapping           November 10, 2000


3.1.2 EPP <ping> Command

  The EPP <ping> command is used to determine if a host name is known to
  the server.  In addition to the standard EPP command elements, the
  <ping> command MUST contain a <host:ping> element that identifies the
  host namespace and the location of the host schema.  The <host:ping>
  element MUST contain the following child elements:

  - One or more (up to a maximum of sixteen) <host:name> elements that
  contain the fully qualified host names to be queried.

  Example <ping> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xmlns:epp"
  C:     xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xmlns:epp epp.xsd">
  C:  <command>
  C:    <ping>
  C:      <host:ping xmlns:host="urn:iana:xmlns:host"
  C:       xsi:schemaLocation="urn:iana:xmlns:host host.xsd">
  C:        <host:name>ns1.example.com</host:name>
  C:        <host:name>ns2.example.com</host:name>
  C:        <host:name>ns3.example.com</host:name>
  C:      </host:ping>
  C:    </ping>
  C:    <trans-id>
  C:      <date>2000-06-08</date>
  C:      <client-id>ClientX</client-id>
  C:      <code>ABC-12345-XYZ</code>
  C:    </trans-id>
  C:  </command>
  C:</epp>

  When a <ping> command has been processed successfully, the EPP
  <response-data> element MUST contain a child <host:ping-data> element
  that identifies the host namespace and the location of the host
  schema.  The <host:ping-data> element SHALL contain the following
  child elements:

  - One or more (up to a maximum of sixteen) <host:name> elements that
  contain the fully qualified names for the queried hosts and a "result"
  attribute whose value identifies the object as either "known" or
  "unknown".







Hollenbeck                Expires May 10, 2001                  [Page 8]

Internet-Draft              EPP Host Mapping           November 10, 2000



  Example <ping> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xmlns:epp"
  S:     xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xmlns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <text>Command completed successfully</text>
  S:    </result>
  S:    <response-data>
  S:      <host:ping-data xmlns:host="urn:iana:xmlns:host"
  S:       xsi:schemaLocation="urn:iana:xmlns:host host.xsd">
  S:        <host:name result="known">ns1.example.com</host:name>
  S:        <host:name result="unknown">ns2.example.com</host:name>
  S:        <host:name result="known">ns3.example.com</host:name>
  S:      </host:ping-data>
  S:    </response-data>
  S:    <trans-id>
  S:      <date>2000-06-08</date>
  S:      <client-id>ClientX</client-id>
  S:      <code>ABC-12345-XYZ</code>
  S:    </trans-id>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <ping> command could not
  be processed for any reason.

3.1.3 EPP <transfer> Command

  Transfer semantics do not apply to host names, so there is no mapping
  defined for the EPP <transfer> query command.

3.2 EPP Transform Commands

  EPP provides three commands to transform host information: <create> to
  create an instance of a host object, <delete> to delete an instance of
  a host object, and <update> to change information associated with a
  host object.  This document does not define mappings for the EPP
  <renew> and <transfer> commands.

3.2.1 EPP <create> Command

  The EPP <create> command provides a transform operation that allows a
  client to create a host object.  In addition to the standard EPP
  command elements, the <create> command MUST contain a <host:create>



Hollenbeck                Expires May 10, 2001                  [Page 9]

Internet-Draft              EPP Host Mapping           November 10, 2000


  element that identifies the host namespace and the location of the
  host schema.  The <host:create> element MUST contain the following
  child elements:

  - A <host:name> element that contains the fully qualified host name of
  the object to be created.

  - Zero or more (up to a maximum of thirteen) <host:address> elements
  that contain the IP addresses to be associated with the host.  If the
  host name exists in a TLD for which the server is not authoritative,
  then IP addresses MUST NOT be provided for the host.  For example, if
  the server is authoritative for the ".com" TLD and the name of the
  server is "ns1.example.com.au", then IP addresses MUST NOT be
  provided.  If the host name exists in a TLD for which the server is
  authoritative, then the parent domain of the host MUST be known to the
  server before the host can be created.



































Hollenbeck                Expires May 10, 2001                 [Page 10]

Internet-Draft              EPP Host Mapping           November 10, 2000



  Example <create> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xmlns:epp"
  C:     xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xmlns:epp epp.xsd">
  C:  <command>
  C:    <create>
  C:      <host:create xmlns:host="urn:iana:xmlns:host"
  C:       xsi:schemaLocation="urn:iana:xmlns:host host.xsd">
  C:        <host:name>ns1.example.com</host:name>
  C:        <host:address>
  C:          <host:ipv4>192.1.2.3</host:ipv4>
  C:        </host:address>
  C:        <host:address>
  C:          <host:ipv4>198.1.2.3</host:ipv4>
  C:        </host:address>
  C:        <host:address>
  C:          <host:ipv6>1080:0:0:0:8:800:200C:417A</host:ipv6>
  C:        </host:address>
  C:        <host:address>
  C:          <host:ipv6>::FFFF:129.144.52.38</host:ipv6>
  C:        </host:address>
  C:      </host:create>
  C:    </create>
  C:    <trans-id>
  C:      <date>2000-06-08</date>
  C:      <client-id>ClientX</client-id>
  C:      <code>ABC-12345-XYZ</code>
  C:    </trans-id>
  C:  </command>
  C:</epp>

  When a <create> command has been processed successfully, a server MUST
  respond with an EPP response with no <response-data> element.















Hollenbeck                Expires May 10, 2001                 [Page 11]

Internet-Draft              EPP Host Mapping           November 10, 2000



  Example <create> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xmlns:epp"
  S:     xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xmlns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <text>Command completed successfully</text>
  S:    </result>
  S:    <trans-id>
  S:      <date>2000-06-08</date>
  S:      <client-id>ClientX</client-id>
  S:      <code>ABC-12345-XYZ</code>
  S:    </trans-id>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <create> command could not
  be processed for any reason.

3.2.2 EPP <delete> Command

  The EPP <delete> command provides a transform operation that allows a
  client to delete a host object.  In addition to the standard EPP
  command elements, the <delete> command MUST contain a <host:delete>
  element that identifies the host namespace and the location of the
  host schema.  The <host:delete> element MUST contain the following
  child elements:

  - A <host:name> element that contains the fully qualified host name of
  the object to be deleted.

  A host name MUST NOT be deleted if the host is providing services for
  other known objects.  For example, if the host is providing DNS name
  resolution services for a known domain name, then the host MUST NOT be
  deleted until the delegation for name resolution service has been
  moved to an alternate host.












Hollenbeck                Expires May 10, 2001                 [Page 12]

Internet-Draft              EPP Host Mapping           November 10, 2000



  Example <delete> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xmlns:epp"
  C:     xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xmlns:epp epp.xsd">
  C:  <command>
  C:    <delete>
  C:      <host:delete xmlns:host="urn:iana:xmlns:host"
  C:       xsi:schemaLocation="urn:iana:xmlns:host host.xsd">
  C:        <host:name>ns1.example.com</host:name>
  C:      </host:delete>
  C:    </delete>
  C:    <trans-id>
  C:      <date>2000-06-08</date>
  C:      <client-id>ClientX</client-id>
  C:      <code>ABC-12345-XYZ</code>
  C:    </trans-id>
  C:  </command>
  C:</epp>

  When a <delete> command has been processed successfully, a server MUST
  respond with an EPP response with no <response-data> element.

  Example <delete> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xmlns:epp"
  S:     xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xmlns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <text>Command completed successfully</text>
  S:    </result>
  S:    <trans-id>
  S:      <date>2000-06-08</date>
  S:      <client-id>ClientX</client-id>
  S:      <code>ABC-12345-XYZ</code>
  S:    </trans-id>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if a <delete> command could not
  be processed for any reason.

3.2.3 EPP <renew> Command




Hollenbeck                Expires May 10, 2001                 [Page 13]

Internet-Draft              EPP Host Mapping           November 10, 2000


  Renewal semantics do not apply to host names, so there is no mapping
  defined for the EPP <renew> command.

3.2.4 EPP <transfer> Command

  Transfer semantics do not apply to host names, so there is no mapping
  defined for the EPP <transfer> command.

3.2.5 EPP <update> Command

  The EPP <update> command provides a transform operation that allows a
  client to modify the attributes of a host object.  In addition to the
  standard EPP command elements, the <update> command MUST contain a
  <host:update> element that identifies the host namespace and the
  location of the host schema. The <host:update> element SHALL contain
  the following child elements:

  - A <host:name> element that contains the fully qualified host name of
  the object to be updated.

  - A <host:newname> element that contains a new fully qualified host
  name by which the host will be known.  This element is OPTIONAL.

  - A <host:add> element that contains child elements with attribute
  values to be added to the host object.

  - A <host:remove> element that contains child elements with attribute
  values to be removed from the host object.

  The <host:add> and <host:remove> elements SHALL contain the following
  child elements:

  - One or more (up to a maximum of thirteen) <host:address> elements
  that contains the IP addresses to be associated with or removed from
  the host.  IP address restrictions explained in the <create> command
  mapping apply here as well.

  The maximum number of address attribute elements is subject to the
  number of values currently associated with the host object.  For
  example, if a host object currently has "n" address attribute
  elements, the maximum number of address attribute elements that can be
  added is 13 - "n".

  Host name changes MAY require the addition or removal of IP addresses
  to be accepted by the server.  If a new host name exists in a TLD for
  which the server is not authoritative, then the host object MUST NOT
  have any associated IP addresses.  If a new host name exists in a TLD
  for which the server is authoritative, then the host object MUST have



Hollenbeck                Expires May 10, 2001                 [Page 14]

Internet-Draft              EPP Host Mapping           November 10, 2000


  associated IP addresses.

  Example <update> command:

  C:<?xml version="1.0" standalone="no"?>
  C:<epp xmlns="urn:iana:xmlns:epp"
  C:     xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance"
  C:     xsi:schemaLocation="urn:iana:xmlns:epp epp.xsd">
  C:  <command>
  C:    <update>
  C:      <host:update xmlns:host="urn:iana:xmlns:host"
  C:       xsi:schemaLocation="urn:iana:xmlns:host host.xsd">
  C:        <host:name>ns1.example.com</host:name>
  C:        <host:newname>ns2.example.com</host:newname>
  C:        <host:add>
  C:          <host:address>
  C:          <host:ipv4>192.1.2.3</host:ipv4>
  C:          </host:address>
  C:        </host:add>
  C:        <host:remove>
  C:          <host:address>
  C:            <host:ipv6>1080:0:0:0:8:800:200C:417A</host:ipv6>
  C:          </host:address>
  C:        </host:remove>
  C:      </host:update>
  C:    </update>
  C:    <trans-id>
  C:      <date>2000-06-08</date>
  C:      <client-id>ClientX</client-id>
  C:      <code>ABC-12345-XYZ</code>
  C:    </trans-id>
  C:  </command>
  C:</epp>

  When an <update> command has been processed successfully, a server
  MUST respond with an EPP response with no <response-data> element.















Hollenbeck                Expires May 10, 2001                 [Page 15]

Internet-Draft              EPP Host Mapping           November 10, 2000



  Example <update> response:

  S:<?xml version="1.0" standalone="no"?>
  S:<epp xmlns="urn:iana:xmlns:epp"
  S:     xmlns:xsi="http://www.w3.org/1999/XMLSchema-instance"
  S:     xsi:schemaLocation="urn:iana:xmlns:epp epp.xsd">
  S:  <response>
  S:    <result code="1000">
  S:      <text>Command completed successfully</text>
  S:    </result>
  S:    <trans-id>
  S:      <date>2000-06-08</date>
  S:      <client-id>ClientX</client-id>
  S:      <code>ABC-12345-XYZ</code>
  S:    </trans-id>
  S:  </response>
  S:</epp>

  An EPP error response MUST be returned if an <update> command could
  not be processed for any reason.

4. Formal Syntax

  An EPP object mapping is specified in XML Schema notation.  The formal
  syntax presented here is a complete schema representation of the
  object mapping suitable for automated validation of EPP XML instances.

  <?xml version="1.0"?>

  <schema xmlns="http://www.w3.org/1999/XMLSchema"
          xmlns:host="urn:iana:xmlns:host"
          targetNamespace="urn:iana:xmlns:host"
          elementFormDefault="qualified">

    <annotation>
      <documentation>
        Extensible Provisioning Protocol v1.0
        host provisioning schema.
      </documentation>
    </annotation>

  <!--
  Types used within an EPP greeting.
  -->
    <complexType name="emptyType" content="empty"/>
    <element name="service" type="host:emptyType"/>




Hollenbeck                Expires May 10, 2001                 [Page 16]

Internet-Draft              EPP Host Mapping           November 10, 2000


  <!--
  Child elements found in EPP commands.
  -->
    <element name="create" type="host:createType"/>
    <element name="delete" type="host:nameOnlyType"/>
    <element name="info" type="host:nameOnlyType"/>
    <element name="ping" type="host:multiNameType"/>
    <element name="update" type="host:updateType"/>

  <!--
  Child elements of the <create> command.
  -->
    <complexType name="createType" content="elementOnly">
      <element name="name" type="host:nameType"/>
      <element name="address" type="host:addressType"
       minOccurs="0" maxOccurs="13"/>
    </complexType>

  <!--
  Child elements of the <delete> and <info> commands.
  -->
    <complexType name="nameOnlyType" content="elementOnly">
      <element name="name" type="host:nameType"/>
    </complexType>

  <!--
  Child element of commands that accept multiple names.
  -->
    <complexType name="multiNameType" content="elementOnly">
      <element name="name" type="host:nameType"
       minOccurs="1" maxOccurs="16"/>
    </complexType>

  <!--
  Child elements of the <update> command.
  -->
    <complexType name="addRemoveType" content="elementOnly">
      <element name="address" type="host:addressType"
       minOccurs="1" maxOccurs="13"/>
    </complexType>
    <complexType name="updateType" content="elementOnly">
      <element name="name" type="host:nameType" />
      <element name="newname" type="host:nameType"
       minOccurs="0" maxOccurs="1"/>
      <element name="add" type="host:addRemoveType"
       minOccurs="0" maxOccurs="1"/>
      <element name="remove" type="host:addRemoveType"
       minOccurs="0" maxOccurs="1"/>



Hollenbeck                Expires May 10, 2001                 [Page 17]

Internet-Draft              EPP Host Mapping           November 10, 2000


    </complexType>

  <!--
  Various simple type definitions.
  -->
    <simpleType name="clientIDType" base="string">
      <minLength value="3"/>
      <maxLength value="16"/>
      <pattern value="[A-Za-z0-9]{3,16}"/>
    </simpleType>

    <simpleType name="nameType" base="string">
      <minLength value="3"/>
      <maxLength value="255"/>
    </simpleType>

  <!--
  A better pattern could be used for matching IPv4 addresses. This
  pattern matches any digits in a dotted quad.
  -->
    <simpleType name="ipv4Type" base="string">
      <minLength value="7"/>
      <maxLength value="15"/>
      <pattern value="([0-9]{1,3}.){3}[0-9]{1,3}"/>
    </simpleType>

  <!--
  A regular expression for matching IPv6 addresses could be specified
  here. I haven't found a pattern that works with all parsers, though.
  -->
    <simpleType name="ipv6Type" base="string">
      <minLength value="11"/>
      <maxLength value="39"/>
    </simpleType>

    <complexType name="addressType" content="elementOnly">
      <choice>
        <element name="ipv4" type="host:ipv4Type"/>
        <element name="ipv6" type="host:ipv6Type"/>
      </choice>
    </complexType>

  <!--
  Child response elements.
  -->
    <element name="info-data" type="host:infoDataType"/>
    <element name="ping-data" type="host:pingDataType"/>




Hollenbeck                Expires May 10, 2001                 [Page 18]

Internet-Draft              EPP Host Mapping           November 10, 2000


    <simpleType name="codeType" base="string">
      <minLength value="8"/>
      <maxLength value="16"/>
      <pattern value="[A-Za-z0-9][A-Za-z0-9-]{6,14}[A-Za-z0-9]"/>
    </simpleType>
    <complexType name="xidType" content="elementOnly">
      <element name="date" type="date"/>
      <element name="client-id" type="host:clientIDType"/>
      <element name="code" type="host:codeType"/>
    </complexType>

    <complexType name="infoDataType" content="elementOnly">
      <element name="name" type="host:nameType"/>
      <element name="client-id" type="host:clientIDType"/>
      <element name="address" type="host:addressType"
       minOccurs="0" maxOccurs="13"/>
      <element name="created-by" type="host:clientIDType"/>
      <element name="created-date" type="timeInstant"/>
      <element name="last-updated-by" type="host:clientIDType"
       minOccurs="0" maxOccurs="1"/>
      <element name="last-updated-date" type="timeInstant"
       minOccurs="0" maxOccurs="1"/>
      <element name="last-transfer-date" type="timeInstant"
       minOccurs="0" maxOccurs="1"/>
      <element name="auth-id" type="host:xidType"
       minOccurs="0" maxOccurs="1"/>
    </complexType>

    <simpleType name="pingResultType" base="string">
      <enumeration value="known"/>
      <enumeration value="unknown"/>
    </simpleType>
    <complexType name="pingNameType" content="textOnly">
      <minLength value="3"/>
      <maxLength value="255"/>
      <attribute name="result" use="required" type="host:pingResultType"/>
    </complexType>
    <complexType name="pingDataType" content="elementOnly">
      <element name="name" type="host:pingNameType"
       minOccurs="1" maxOccurs="16"/>
    </complexType>

  <!--
  End of schema.
  -->
  </schema>





Hollenbeck                Expires May 10, 2001                 [Page 19]

Internet-Draft              EPP Host Mapping           November 10, 2000


5. Internationalization Considerations

  EPP is represented in XML, which provides native support for encoding
  information using the double-byte Unicode character set and its more
  compact representations including UTF-8.  Compliant XML processors are
  required to understand both UTF-8 and raw Unicode character sets; XML
  also includes a provision for identifying other character sets through
  use of an "encoding" attribute in an <?xml?> processing instruction.
  The complete list of character set encoding identifiers is maintained
  by IANA and is described in [CHARSET] and [RFC1700].

  All date-time values presented via EPP MUST be expressed in Universal
  Coordinated Time.  The XML Schema "date" format allows use of time
  zone identifiers to indicate offsets from the zero meridian, but this
  option MUST NOT be used within EPP.  Both extended and truncated date
  and time forms defined in [ISO8601] MAY be used.

  This document requires host name syntax as specified in [RFC952] as
  updated by [RFC1123].  These conformance requirements MAY change as a
  result of progressing work in developing standards for
  internationalized host names.

6. IANA Considerations

  XML schemas require a URI for unique identification.  Schemas MUST be
  registered to ensure URI uniqueness, but the IETF does not currently
  have a recommended repository for the registration of XML schemas.
  This document uses URNs to describe XML namespaces and XML schemas.
  IANA SHOULD maintain a registry of XML namespace and schema URI
  assignments.  Per policies described in [IANA], URI assignment
  requests SHOULD be reviewed by a designated expert, and values SHOULD
  be assigned only as a result of standards action taken by the IESG.

7. Security Considerations

  The object mapping described in this document does not provide any
  security services beyond those specified by [EPP].














Hollenbeck                Expires May 10, 2001                 [Page 20]

Internet-Draft              EPP Host Mapping           November 10, 2000


8. References

  [CHARSET] ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets

  [EPP] S. Hollenbeck: "Extensible Provisioning Protocol", draft-
  hollenbeck-epp-00.txt, work in progress.

  [IANA] T. Narten, H. Alvestrand: "Guidelines for Writing an IANA
  Considerations Section in RFCs", BCP 26, RFC 2434, October 1998.

  [IANAa] http://www.isi.edu/in-notes/iana/assignments/ipv4-address-
  space

  [IANAb] http://www.isi.edu/in-notes/iana/assignments/ipv6-address-
  space.txt

  [ISO8601] ISO 8601:1988 (E): "Data elements and interchange formats -
  Information interchange - Representation of dates and times - The
  International Organization for Standardization".

  [RFC791]  J. Postel: "Internet Protocol", RFC 791, September 1981.

  [RFC952] K. Harrenstien et al.: "DOD Internet Host Table
  Specification", RFC 952, October 1985.

  [RFC1123] R. Braden: "Requirements for Internet Hosts -- Application
  and Support", RFC 1123, October 1989.

  [RFC1700] J. Reynolds, J. Postel: "Assigned Numbers", STD 2, RFC 1700,
  October 1994.

  [RFC1883] S. Deering and R. Hinden: "Internet Protocol, Version 6
  (IPv6) Specification", RFC 1883, December 1995.

  [RFC1918] Y. Rekhter et al.: "Address Allocation for Private
  Internets", BCP 5, RFC 1918, February 1996.

  [RFC2119] S. Bradner: "Key Words for Use in RFCs to Indicate
  Requirement Levels", BCP 14, RFC 2119, March 1997.

  [XML] Editor T. Bray et al.: "Extensible Markup Language (XML) 1.0",
  http://www.w3.org/TR/REC-xml, W3C Recommendation February 1998

  [XML-SD] Editors P. Biron and A. Malhotra: "XML Schema Part 2:
  Datatypes", http://www.w3.org/TR/xmlschema-2/, W3C Working Draft April
  2000

  [XML-SS] Editor H. Thompson et al.: "XML Schema Part 1: Structures",



Hollenbeck                Expires May 10, 2001                 [Page 21]

Internet-Draft              EPP Host Mapping           November 10, 2000


  http://www.w3.org/TR/xmlschema-1/, W3C Working Draft April 2000


















































Hollenbeck                Expires May 10, 2001                 [Page 22]

Internet-Draft              EPP Host Mapping           November 10, 2000


9. Author's Address

  Scott Hollenbeck
  VeriSign Global Registry Services
  21345 Ridgetop Circle
  Dulles, VA 20166-6503
  USA
  shollenbeck@verisign.com











































Hollenbeck                Expires May 10, 2001                 [Page 23]

Internet-Draft              EPP Host Mapping           November 10, 2000


10. Full Copyright Statement

  Copyright (C) The Internet Society 2000.  All Rights Reserved.

  This document and translations of it may be copied and furnished to
  others, and derivative works that comment on or otherwise explain it
  or assist in its implementation may be prepared, copied, published and
  distributed, in whole or in part, without restriction of any kind,
  provided that the above copyright notice and this paragraph are
  included on all such copies and derivative works.  However, this
  document itself may not be modified in any way, such as by removing
  the copyright notice or references to the Internet Society or other
  Internet organizations, except as needed for the purpose of developing
  Internet standards in which case the procedures for copyrights defined
  in the Internet Standards process must be followed, or as required to
  translate it into languages other than English.

  The limited permissions granted above are perpetual and will not be
  revoked by the Internet Society or its successors or assigns.

  This document and the information contained herein is provided on an
  "AS IS" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
  TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT
  NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN
  WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
  MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.

Acknowledgement

  Funding for the RFC Editor function is currently provided by the
  Internet Society.




















Hollenbeck                Expires May 10, 2001                 [Page 24]