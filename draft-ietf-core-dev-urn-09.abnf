devurn = "urn:dev:" body componentpart
body = macbody / owbody / orgbody / osbody / opsbody / otherbody
macbody = "mac:" hexstring
owbody = "ow:" hexstring
orgbody = "org:" posnumber "-" identifier *( ":"  identifier )
osbody = "os:" posnumber "-" serial *( ":"  identifier )
opsbody = "ops:" posnumber "-" product "-" serial *( ":"  identifier )
otherbody = subtype ":" identifier *( ":"  identifier )
subtype = ALPHA *(DIGIT / ALPHA)
identifier = 1*devunreserved
identifiernodash = 1*devunreservednodash
product = identifiernodash
serial = identifier
componentpart = *( "_" identifier )
devunreservednodash = ALPHA / DIGIT / "."
devunreserved = devunreservednodash / "-"
hexstring = 1*(hexdigit hexdigit)
hexdigit = DIGIT / "a" / "b" / "c" / "d" / "e" / "f"
posnumber = NZDIGIT *DIGIT
ALPHA =  %x41-5A / %x61-7A
NZDIGIT = %x31-39
DIGIT =  %x30-39

   The above Augmented Backus-Naur Form (ABNF) copies the DIGIT and
   ALPHA rules originally defined in [RFC5234], exactly as defined
   there.

   The device identifier namespace includes five subtypes (see
   Section 4, and more may be defined in the future as specified in
   Section 7.

   The optional underscore-separated components following the hexstring
   are strings depicting individual aspects of a device.  The specific
   strings and their semantics are up to the designers of the device,
   but could be used to refer to specific interfaces or functions within
   the device.

   With the exception of the MAC-address and 1-Wire DEV URNs, each DEV
   URN may also contain optional colon-separated identifiers.  These are
   provided for extensibility.

   There are no special character encoding rules or considerations for
   conforming with the URN syntax, beyond those applicable for URNs in
   general [RFC8141], or the context where these URNs are carried (e.g.,
   inside JSON [RFC8259] or SenML [RFC8428]).  However, due to the SenML
   RFC 8428 Section 4.5.1 rules, DEV URNs do not support percent-
   encoding.

   DEV URNs do not use r-, q-, or f-components.

   Specific subtypes of DEV URNs may be validated through mechanisms
   discussed in Section 4.

   The string representation of the device identifier URN is fully
   compatible with the URN syntax.

