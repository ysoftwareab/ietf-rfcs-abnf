Internet Engineering Task Force             Yoshihiro Kikuchi - Toshiba
Internet Draft                                   Toshiyuki Nomura _ NEC
Document: draft-jnb-mpeg4av-rtp-00.txt           Shigeru Fukunaga _ Oki
                                          Yoshinori Matsui _ Matsushita
                                                   Hideaki Kimata _ NTT
                                                       October 22, 1999


             RTP payload format for MPEG-4 Audio/Visual streams


Status of this Memo

   This document is an Internet-Draft and is in full conformance with all
      provisions of Section 10 of RFC2026 [1].

   Internet-Drafts are working documents of the Internet Engineering Task
   Force (IETF), its areas, and its working groups. Note that other groups
   may also distribute working documents as Internet-Drafts. Internet-Drafts
   are draft documents valid for a maximum of six months and may be updated,
   replaced, or obsoleted by other documents at any time. It is
   inappropriate to use Internet- Drafts as reference material or to cite
   them other than as "work in progress."
   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt
   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.






                                   Abstract

   This document describes RTP payload formats for the carriage of MPEG-4
   Audio and Visual streams[2][3], and an RTCP format for MPEG-4 backward
   channel messages functionalities[4]. It is based on the RTP/RTCP
   specification descried in the study on Internet draft for the carriage of
   MPEG-4 on IP[5]. In this specification, MPEG-4 Audio/Visual bitstreams
   are directly mapped into RTP packets without using MPEG-4 Systems[6]. The
   RTP header fields usage and the fragmentation rule for MPEG-4 Visual and
   Audio bitstreams are specified. It also specifies an RTCP packet usage to
   carry the MPEG-4 backward channel messages.




1. Introduction

1.1 Why MPEG-4 Audio/Visual RTP format needed?

   The RTP payload formats described in this Internet-Draft specify the
   normative way on how MPEG-4 Audio/Visual streams are fragmented and
RTP payload format for MPEG-4 Audio/Visual streams        October 1999

   mapped directly onto RTP packets. No extra header field is used for such
   functionality as error protection or grouping of streams.

   H.323 terminals could be the case.  MPEG-4 Audio/Visual streams are not
   managed by Object Descriptors[6] but H.245, and directly mapped into RTP
   packets without Sync Layer[6]. The semantics of RTP headers in this case
   need to be clearly defined including the association with the MPEG-4
   Audio/Visual data elements.  In addition, it would be beneficial to
   define the fragmentation rule of RTP packets for MPEG-4 Video streams to
   enhance error resiliency by utilizing the error resilience tools provided
   inside the MPEG-4 Video stream.  However, they have not been studied
   until now.


1.2 Consideration on the MPEG-4 Visual RTP payload format

   Considering that MPEG-4 Visual is used on a wide variety of networks from
   several Kbps to many Mbps, from guarantied networks with almost error-
   free to mobile networks with high error rate, it is not desired to apply
   too much restriction on the fragmentation like a single video packet
   shall always be mapped on a single RTP packet. On the other hand, a
   careless media unaware fragmentation will cause degradation of the error
   resiliency and the bandwidth efficiency. The fragmentation rule described
   in this document is flexible but to define the minimum rules to prevent
   the meaningless fragmentation of e.g. splitting a header into packets.

   For video coding media such as H.261 or MPEG-1/2, the additional media
   specific RTP header works effectively for recovering e.g. a picture
   header corrupt by packet losses. However, there is an error resilience
   functionality inside MPEG-4 Visual to recover corrupt headers. This
   functionality can commonly be used on RTP/IP network as well as other
   networks. (H.223/mobile, MPEG-2/TS, etc.) Therefore, there is no strong
   reason to define MPEG-4 Visual specific extra RTP header fields.


1.3 Consideration on the MPEG-4 Audio RTP payload format

   MPEG-4 Audio is a new kind of audio standard that integrates many
   different types of audio coding tools. It also supports a mechanism
   representing synthesized sounds. Low-overhead MPEG-4 Audio Transport
   Multiplex (LATM) manages the sequence of the compressed or the
   represented audio data by MPEG-4 Audio tools with relatively small
   overhead. In audio-only applications, the LATM-based MPEG-4 Audio
   bitstreams, therefore, are desirable to be directly mapped into the RTP
   packets without using MPEG-4 Systems.

   Furthermore, if the payload of a packet is a single audio frame, a packet
   loss does not impair the decodability of adjacent packets. Therefore, a
   payload specific header for MPEG-4 Audio is not required as same as one
   for the other audio coders.
RTP payload format for MPEG-4 Audio/Visual streams        October 1999

1.4 MPEG-4 Audio/Visual backward channel messaging on RTCP packets

   In some cases, MPEG-4 Audio/Visual has backward channel messaging
   functionalities. These messages are extremely Audio/Visual specific,
   since coders directly use these messages for controlling coding
   parameters. From the point of view of controlling parameters, these
   messages should be transmitted without delay. Therefore these messages
   are directly mapped onto some kind of low delay RTCP packets.



2. Conventions used in this document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED",  "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC-2119 [7].



3. RTP Packetization of MPEG-4 Visual bitstream

   This section specifies the RTP packetization rule for MPEG-4 Visual
   content. An MPEG-4 Visual bitstream is mapped directly onto the RTP
   payload without any addition of extra header fields or removal of any
   Visual syntax elements. The Combined Configuration/Elementary streams
   mode is used so that the configuration information is carried in the same
   RTP port as the elementary stream. (see 6.2.1 "Start codes" of ISO/IEC
   14496-2 [2])

   When the short video header mode is used, RTP payload format for H.263
   specified in the relevant RFCs or other standards MAY be used.


   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |V=2|P|X|  CC   |M|     PT      |       sequence number         | RTP
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                           timestamp                           | Header
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           synchronization source (SSRC) identifier            |
   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
   |            contributing source (CSRC) identifiers             |
   |                             ....                              |
   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
   |                                                               | RTP
   |       MPEG-4 Visual stream (byte aligned)                     | Payload
   |                                                               |
   |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                               :...OPTIONAL RTP padding        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

        Figure 1 - An RTP packet for MPEG-4 Visual stream
RTP payload format for MPEG-4 Audio/Visual streams        October 1999



3.1 RTP header fields usage for MPEG-4 Visual

   Payload Type (PT): Distinct payload type should be assigned to specify
   MPEG-4 Visual RTP payload format. If the dynamic payload type assignment
   is used, it is specified by some out-of-band means (e.g. H.245, SDP,
   etc.) that the MPEG-4 Visual payload format is used for the corresponding
   RTP packet.


   Extension (X) bit: Defined by the RTP profile used.


   Sequence Number: Increment by one for each RTP data packet sent. It
   starts with a random initial value for security reasons.


   Marker (M) bit: The marker bit is set to one when the RTP packet contains
   the configuration information (see 6.2.1 "Start codes" of ISO/IEC 14496-2
   [2]), Group_of_VideoObjectPlane(), and/or the first fragment of an intra-
   coded VOP. Otherwise, set to zero.



   This bit is used to indicate that the RTP packet is a point for random
   access, error-recovery using an intra-coded VOP, and recovering the
   configuration information.


   Timestamp: The timestamp indicates the composition time, or the
   presentation time in a no-compositor decoder by adding a constant random
   offset for security reasons. For a video object plane, it is defined by
   vop_time_increment (in units of 1/vop_time_increment_resolution seconds)
   plus the cumulative number of whole seconds specified by module_time_base
   and time_code of Group_of_VideoObjectPlane() if present. In the case of
   interlaced video, a VOP consists of lines from two fields and the
   timestamp indicates the composition time of the first field. If the RTP
   packet contains only configuration information and/or
   Group_of_VideoObjectPlane(), the composition time of the subsequent VOP
   in the coding order is used.

   Unless specified by an out-of-band means, the resolution of the timestamp
   is set to its default.


   SSRC, CC and CSRC fields are used as described in RFC 1889 [8].


3.2 Fragmentation of MPEG-4 Visual bitstream

   A fragmented MPEG-4 Visual bitstream is mapped directly onto the RTP
   payload without any addition of extra header fields or removal of any
RTP payload format for MPEG-4 Audio/Visual streams        October 1999

   Visual syntax elements. The Combined Configuration/Elementary streams
   mode is used. The following rules apply for the fragmentation.

   (1) A header of the configuration information function and
   Group_of_VideoObjectPlane() SHALL be placed at the beginning of the RTP
   payload (just after the RTP header) or just after the header of the
   syntactically upper layer function.

   (2) If one or more headers exist in the RTP payload, the RTP payload
   SHALL begin with the header of the syntactically highest function.

   (3) A header SHALL NOT be split into a plurality of RTP packets.

   (4) Two or more VOPs SHALL be fragmented into different RTP packets so
   that one RTP packet consists of the data bytes associated with an unique
   presentation time (that indicated to the timestamp field in the RTP
   packet header).

   (5) A single video packet SHOULD NOT be split into a plurality of RTP
   packets. The size of a video packet SHOULD be adjusted such that the
   resulting RTP packet is not larger than the path-MTU.


   Here, header means the header of the configuration information functions
   (VisualObjectSequence(), VisualObject(), VisualObjectLayer()) and the
   entry point functions for a elementary stream
   (Group_of_VideoObjectPlane(), VideoObjectPlane(),
   video_plane_with_short_header(), MeshObject(), FaceObject()), the header
   of gob_layer(), and video_packet_header(). (see 6.2.1 "Start codes" of
   ISO/IEC 14496-2 [2])


3.3 Examples of packetized MPEG-4 Visual bitstream

   Considering that MPEG-4 Visual is used on a wide variety of networks from
   several Kbps to many Mbps, from guarantied networks with almost error-
   free to mobile networks with high error rate, it is not desired to apply
   too much restriction on the fragmentation like a single video packet
   shall always be mapped on a single RTP packet. On the other hand, a
   careless media unaware fragmentation will cause degradation of the error
   resiliency and the bandwidth efficiency. The fragmentation criteria
   described in 3.2 are flexible but to define the minimum rules to prevent
   the meaningless fragmentation of e.g. splitting a header into packets.

   For video coding media such as H.261 or MPEG-1/2, the additional media
   specific RTP header works effectively for recovering e.g. a picture
   header corrupt by packet losses. However, there is an error resilience
   functionality inside MPEG-4 Visual to recover corrupt headers. This
   functionality can commonly be used on RTP/IP network as well as other
   networks. (H.223/mobile, MPEG-2/TS, etc.) Therefore, there is no strong
   reason to define MPEG-4 Visual specific extra RTP header fields.
RTP payload format for MPEG-4 Audio/Visual streams        October 1999

   Figure 2 shows examples of RTP packets generated based on the criteria
   described in 3.2

   (a) is an example of the first RTP packet of an MPEG-4 visual object
   sequence. This packet contains the configuration information. According
   to the criterion (1), the header of VisualObjectSequence(VS header) is
   placed at the beginning of the RTP payload, and the headers of
   VisualObject and VisualObjectLayer(VO header, VOL header) follow it.

   (b) is an example the RTP packet that contains
   Group_of_VideoObjectPlane(GOV). Following the criterion (1), the GOV is
   placed at the beginning of the RTP payload. It is a waste of RTP/UDP/IP
   header overhead to generate a RTP packet containing only a GOV whose
   length is 7 bytes. Therefore, (a part of) the following VOP can be placed
   in the same RTP packet as shown in (b).

   (c) is an example that one video packet is packetized into one RTP
   packet. When the packet-loss rate of the underlying network is high, this
   kind of packetization is recommended. It is strongly recommended to set
   resync_marker_disable to 0 in the VOL header to enable adjustment of the
   video packet size. Even when the RTP packet containing the VOP header is
   discarded by a packet loss, the other RTP packets can be decoded by using
   the HEC(Header Extension Code) information in the video packet header. No
   extra RTP header field is necessary.

   (d) is an example that more than one video packets are packetized into
   one RTP packet. This kind of packetization is effective to save the
   overhead of RTP/UDP/IP headers if the bit-rate of the underlying network
   is low. However, it will decrease the packet-loss resiliency because
   multiple video packets are discarded by a single RTP packet loss. The
   adequate number of video packets in a RTP packet and the RTP packet
   length depend the packet-loss rate and the bit-rate of the underlying
   network.

   Figure 3 shows examples of RTP packets prohibited by the criteria of 3.2.

   Fragmentation of a header into multiple RTP packets, like (a), will not
   only increase the overhead of RTP/UDP/IP headers but also decrease the
   error resiliency. Therefore, it is prohibited by the criterion (3).

   When concatenating more than one video packets into a RTP packet, VOP
   header or video_packet_header() shall not be placed in the middle of the
   RTP payload. The packetization like (b) is not allowed by the criterion
   (2). This is because of the error resiliency. Comparing this example with
   Figure 2(c), two video packets are mapped onto two RTP packets in both
   cases. However, there is a difference between the packet-loss resiliency.
   When the second RTP packet is lost, both video packets 1 and 2 are lost
   in the case of Figure 3(b) whereas only video packet 2 is lost in the
   case of Figure 2(c).

   A RTP packet containing more than one VOPs, like (c), is not allowed.
RTP payload format for MPEG-4 Audio/Visual streams        October 1999

       +------+------+------+------+
   (a) | RTP  |  VS  |  VO  | VOL  |
       |header|header|header|header|
       +------+------+------+------+

       +------+-----+------------------+
   (b) | RTP  | GOV |Video Object Plane|
       |header|     |                  |
       +------+-----+------------------+

       +------+------+------------+  +------+------+------------+
   (c) | RTP  | VOP  |Video Packet|  | RTP  |  VP  |Video Packet|
       |header|header|    (1)     |  |header|header|    (2)     |
       +------+------+------------+  +------+------+------------+

       +------+------+------------+------+------------+------+------------+
   (d) | RTP  |  VP  |Video Packet|  VP  |Video Packet|  VP  |Video Packet|
       |header|header|     (1)    |header|    (2)     |header|    (3)     |
       +------+------+------------+------+------------+------+------------+

        Figure 2 - Examples of RTP packetized MPEG-4 Visual bitstream


       +------+-------------+  +------+------------+------------+
   (a) | RTP  |First half of|  | RTP  |Last half of|Video Packet|
       |header|  VP header  |  |header|  VP header |            |
       +------+-------------+  +------+------------+------------+

       +------+------+----------+  +------+---------+------+------------+
   (b) | RTP  | VOP  |First half|  | RTP  |Last half|  VP  |Video Packet|
       |header|header| of VP(1) |  |header| of VP(1)|header|    (2)     |
       +------+------+----------+  +------+---------+------+------------+

       +------+------+------------------+------+------------------+
   (c) | RTP  | VOP  |Video Object Plane| VOP  |Video Object Plane|
       |header|header|        (1)       |header|       (2)        |
       +------+------+------------------+------+------------------+

   Figure 3 - Examples of prohibited RTP packetization for MPEG-4 Visual
   bitstream




4. RTP Packetization of MPEG-4 Audio bitstream

   When tools defined in MPEG-4 Systems are not used MPEG-4 Audio stream is
   formatted by LATM (Low-overhead MPEG-4 Audio Transport Multiplex)
   format[9], and then mapped onto RTP packets as described the subsequent
   section.

4.1 RTP Packet Format
RTP payload format for MPEG-4 Audio/Visual streams        October 1999

   The LATM consists of the sequence of audioMuxElements that include one or
   more audio frames. A complete audioMuxElement or the part of
   audioMuxElements SHALL be mapped directly onto the RTP payload without
   removal of any audioMuxElement syntax elements as shown in Figure 4. The
   first byte of each audioMuxElement SHALL be located at the first payload
   location of an RTP packet.


   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |V=2|P|X|  CC   |M|     PT      |       sequence number         |RTP
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                           timestamp                           |Header
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |           synchronization source (SSRC) identifier            |
   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
   |            contributing source (CSRC) identifiers             |
   |                             ....                              |
   +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
   |                                                               |RTP
   :                 audioMuxElement (byte aligned)                :Payload
   |                                                               |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
                Figure 4 - An RTP packet for MPEG-4 Audio

   It is required for the audioMuxElement to indicate the following
   information by an out-of-band means.

   dataTypePresentEnable: If this information is ON, audioMuxElement SHALL
   include an indication bit "dataType". This bit indicates the data type of
   audioMuxElement is whether "setupData" element or "payloadMux" element.
   If this information is OFF, audioMuxElement contains the payloadMux
   element.

   errorProtectionEnable: This information indicates whether error
   protection is used.

   Furthermore, the length of the audioMuxElement in bytes SHALL be required
   for the LATM-based audio decoder. This length MAY be equal with the
   length of the RTP payload. If the audioMuxElement is fragmented into
   several RTP packets, the cumulative length of all RTP packets MAY be
   used.

4.2 RTP Header Fields Usage

   Payload Type (PT): Distinct payload type should be assigned to specify
   MPEG-4 Audio RTP payload format. If the dynamic payload type assignment
   is used, it is specified by some out-of-band means (e.g. H.245, SDP,
   etc.) that the MPEG-4 Audio payload format is used for the corresponding
   RTP packet.
RTP payload format for MPEG-4 Audio/Visual streams        October 1999

   Marker (M) bit: The marker bit indicates audioMuxElement boundaries. This
   bit is set to one to mark the RTP packet contains a complete
   audioMuxElement or the last fragment of an audioMuxElement.

   Timestamp: The timestamp indicates the composition time, or the
   presentation time in a no-compositor decoder. Timestamps are recommended
   to start at a random value for security reasons.

   Unless specified by an out-of-band means, the resolution of the timestamp
   is set to its default.

   Sequence Number: Increment by one for each RTP packet sent. It starts
   with a random value for security reasons.

   SSRC, CC and CSRC fields are used as described in RFC 1889 [8].

4.3 Fragmentation of MPEG-4 Audio bitstream

   It is desirable to put one audioMuxElement per RTP packet. The size of an
   audioMuxElement is tried to be adjusted such that the resulting RTP
   packet is not larger than the path-MTU. If this is not possible, the
   audioMuxElement MAY be fragmented across several packets based on the
   following rules.

   (1) "payloadMux" which consists of payload elements MAY be fragmented
   into several RTP packets so that one RTP packet consists of one or more
   payload elements. A payload element SHOULD NOT be fragmented.

   (2) If the audioMuxElement consists of the configuration information
   "setupData", the configuration information SHALL NOT be fragmented.




5. RTCP Packetization of MPEG-4 backward channel messages

   This section specifies the usage of particular RTCP packets to carry the
   backward channel messages generated using the MPEG-4 Audio/Visual
   backward channel messaging functionalities, e.g. NEWPRED[4]. RTCP packets
   specified in this section SHALL ONLY be used when it is indicated by the
   profile and level indication of MPEG-4 the codecs have such
   functionalities. (e.g. Advanced Real Time Simple Visual Profile[4])


   The MPEG-4 backward channel messages are transmitted on particular RTCP
   packets, like H.261 RTCP control packets [10].

   The MPEG-4 backward message packets differ from normal RTCP packets in
   that they are not transmitted to the normal RTCP destination transport
   address for the RTP session (which is often a multicast address).
   Instead, these backward packets are sent directly via unicast from the
   decoder to the coder.  The destination port for these control packets is
   the same port that the coder uses as a source port for transmitting RTP
RTP payload format for MPEG-4 Audio/Visual streams        October 1999

   (data) packets.  Therefore, these packets may be considered "reverse"
   control packets.

   As a consequence, these control packets may only be used when no RTP
   mixers or translators intervene in the path from the coder to the
   decoder.  If such intermediate systems do intervene, the address of
   the coder would no longer be present as the network-level source
   address in packets received by the decoder, and in fact, it might not
   be possible for the decoder to send packets directly to the coder.

   Some reliable multicast protocols use similar NACK control packets
   transmitted over the normal multicast distribution channel, however
   they typically use random delays to prevent a NACK implosion problem.
   The goal of such protocols is to provide reliable multicast packet
   delivery at the expense of delay, which is appropriate for
   applications such as a shared whiteboard.

   On the other hand, real-time Audio/Visual transmission is more sensitive
   to delay and does not require full reliability.  For Audio/Visual
   applications it is more effective to send the MPEG-4 backward message
   packets as soon as possible, i.e. as soon as a loss is detected, without
   adding any random delays.

5.1.  MPEG-4 Visual backward channel message packets definition

        0                   1                   2                   3
        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |V=2|P|   BMT             |  PT |           length              |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                              SSRC                             |
       +=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+
       |    MPEG-4 Backward Channel Message Payload (byte aligned)     |
       |                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
       |                               :             padding           |
       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   version (V): 2 bits
        Identifies the version of RTP, which is the same in RTCP packets
        as in RTP data packets.

   padding (P): 1 bit
        If the padding bit is set, this RTCP packet contains some
        additional padding octets at the end which are not part of the
        control information. The last octet of the padding is a count of
        how many padding octets should be ignored. Padding may be needed
        by some encryption algorithms with fixed block sizes. In a
        compound RTCP packet, padding should only be required on the
        last individual packet because the compound packet is encrypted
        as a whole.

   backward channel message type (BMT): 5 bits
        Identifies the type of the MPEG-4 backward channel messages.
RTP payload format for MPEG-4 Audio/Visual streams        October 1999

        0:      forbidden
        1:      MPEG-4 Visual NEWPRED
        2-63:   reserved
        In this internet-draft, only NEWPRED is assigned as the candidate of
        the BMT for the moment.  Some other MPEG-4 Audio/Visual applications
        using the backward channel messages may be assigned in the future.

   packet type (PT): 8 bits
        The value of the packet type (PT) identifier is the constant
                for MPEG-4 backward channel messages. The assignment of an
   RTCP payload type for this new packet format is outside the scope of
        this document, and will not be specified here.

   SSRC: 32 bits
        SSRC is the synchronization source identifier for the sender of
        this packet.

   MPEG-4 Backward Channel Message Payload: variable
        The syntax and semantics of the MPEG-4 backward channel messages are
        defined in the ISO/IEC 14496-2/3[4][11]. All messages are byte
        aligned.  Normally one message is mapped onto one RTCP packet, and
        several messages with same BMT could be continuously mapped onto one
        RTCP packet.  One message SHALL NOT be fragmented into different
        RTCP packets.





6. Security Considerations

   RTP packets using the payload format defined in this specification are
   subject to the security considerations discussed in the RTP specification
   [8]. This implies that confidentiality of the media streams is achieved
   by encryption. Because the data compression used with this payload format
   is applied end-to-end, encryption may be performed on the compressed data
   so there is no conflict between the two operations.

   This payload type does not exhibit any significant non-uniformity in the
   receiver side computational complexity for packet processing  to cause a
   potential denial-of-service threat.


7. References


   1  Bradner, S., "The Internet Standards Process -- Revision 3", BCP 9,
      RFC 2026, October 1996.

   2 ISO/IEC 14496-2 FDIS, _Information technology _ Generic coding of
      audio-visual objects _ Part2: Visual_, October 1998.
RTP payload format for MPEG-4 Audio/Visual streams        October 1999


   3 ISO/IEC 14496-3 FDIS, _Information technology _ Generic coding of
      audio-visual objects _ Part3: Audio_, October 1998.

   4 ISO/IEC 14496-2 FPDAM 1, July 1999.

   5 _Study on Internet draft for the carriage of MPEG-4 on IP_, ISO/IEC JTC
      1/SC 29/WG 11 N3021, October 1999.

   6 ISO/IEC 14496-1 FDIS, _Information technology _ Generic coding of
      audio-visual objects _ Part1: Systems_, October 1998.

   7  Bradner, S., "Key words for use in RFCs to Indicate Requirement
      Levels", BCP 14, RFC 2119, March 1997

   8 H. Schulzrinne, S. Casner, R. Frederick, V. Jacobson "RTP: A Transport
      Protocol for Real Time Applications",  RFC 1889, Internet Engineering
      Task Force, January 1996.

   9 ISO/IEC JTC1/SC29/WG11/N2794, "Technical Description of the Low
      Overhead MPEG-4 Audio Transport Multiplex (LATM)", July 1999.

   10 T. Turletti, C. Hitema, "RTP Payload Format for H.261 Video Streams",
      RFC 2032, Octover 1996.

   11 ISO/IEC 14496-3 FPDAM 1, July 1999.




8. Author's Addresses


   Yoshihiro Kikuchi
   Toshiba corporation
   1, Komukai Toshiba-cho, Saiwai-ku, Kawasaki, 210-8582, Japan
   Email: kiku@eel.rdc.toshiba.co.jp

   Yoshinori Matsui
   Matsushita Electric Industrial Co., LTD.
   1006, Kadoma, Kadoma-shi, Osaka, Japan
   Email: matsui@drl.mei.co.jp

   Toshiyuki Nomura
   NEC Corporation
   4-1-1,Miyazaki,Miyamae-ku,Kawasaki,JAPAN
   Email: t-nomura@ccm.cl.nec.co.jp

   Shigeru Fukunaga
   Oki Electric Industry Co., Ltd.
   1-2-27 Shiromi, Chuo-ku, Osaka 540-6025 Japan.
   Email: fukunaga444@oki.co.jp
RTP payload format for MPEG-4 Audio/Visual streams        October 1999

   Hideaki Kimata
   Nippon Telegraph and Telephone Corporation
   1-1, Hikari-no-oka, Yokosuka-shi, Kanagawa, Japan
   Email: kimata@nttvdt.hil.ntt.co.jp

















































Kikuchi/Nomura/Fukunaga/Kimata/Matsui
RTP payload format for MPEG-4 Audio/Visual streams        October 1999


Full Copyright Statement

   "Copyright (C) The Internet Society (date). All Rights Reserved.
   This document and translations of it may be copied and furnished to
   others, and derivative works that comment on or otherwise explain it
   or assist in its implmentation may be prepared, copied, published
   and distributed, in whole or in part, without restriction of any
   kind, provided that the above copyright notice and this paragraph
   are included on all such copies and derivative works. However, this
   document itself may not be modified in any way, such as by removing
   the copyright notice or references to the Internet Society or other
   Internet organizations, except as needed for the purpose of
   developing Internet standards in which case the procedures for
   copyrights defined in the Internet Standards process must be
   followed, or as required to translate it into





































Kikuchi/Nomura/Fukunaga/Kimata/Matsui
