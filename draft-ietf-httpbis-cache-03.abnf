HTTP-date     = <HTTP-date, see [Semantics], Section 10.1.1.1>
OWS           = <OWS, see [Semantics], Section 4.3>
field-name    = <field-name, see [Semantics], Section 4.2>
quoted-string = <quoted-string, see [Semantics], Section 4.2.3>
token         = <token, see [Semantics], Section 4.2.3>
uri-host      = <host, see [RFC3986], Section 3.2.2>
port          = <port, see [RFC3986], Section 3.2.3>
pseudonym     = <pseudonym, see [Semantics], Section 5.5.1>

delta-seconds  = 1*DIGIT
response_is_fresh = (freshness_lifetime > current_age)

apparent_age = max(0, response_time - date_value);

response_delay = response_time - request_time;
corrected_age_value = age_value + response_delay;

corrected_initial_age = max(apparent_age, corrected_age_value);

resident_time = now - response_time;
current_age = corrected_initial_age + resident_time;

Age = delta-seconds

Cache-Control   = 1#cache-directive

cache-directive = token [ "=" ( token / quoted-string ) ]
Expires = HTTP-date

Pragma           = 1#pragma-directive
pragma-directive = "no-cache" / extension-pragma
extension-pragma = token [ "=" ( token / quoted-string ) ]

Age = delta-seconds

Cache-Control = *( "," OWS ) cache-directive *( OWS "," [ OWS
    cache-directive ] )

Expires = HTTP-date

HTTP-date = <HTTP-date, see [Semantics], Section 10.1.1.1>

OWS = <OWS, see [Semantics], Section 4.3>

Pragma = *( "," OWS ) pragma-directive *( OWS "," [ OWS
    pragma-directive ] )

cache-directive = token [ "=" ( token / quoted-string ) ]

delta-seconds = 1*DIGIT

extension-pragma = token [ "=" ( token / quoted-string ) ]

field-name = <field-name, see [Semantics], Section 4.2>

port = <port, see [RFC3986], Section 3.2.3>
pragma-directive = "no-cache" / extension-pragma
pseudonym = <pseudonym, see [Semantics], Section 5.5.1>

quoted-string = <quoted-string, see [Semantics], Section 4.2.3>

token = <token, see [Semantics], Section 4.2.3>

uri-host = <host, see [RFC3986], Section 3.2.2>

