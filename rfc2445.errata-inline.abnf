method  = 1*(ALPHA / DIGIT / "-")
component       = ("VEVENT" / "VTODO" / "VJOURNAL" / "VFREEBUSY"
                        / "VTIMEZONE" / x-name / iana-token)

optinfo = infovalue / qinfovalue

infovalue       = iana-token / x-name

qinfovalue      = DQUOTE (infovalue) DQUOTE

contentline        = name *(";" param ) ":" value CRLF
        ; This ABNF is just a general definition for an initial parsing
        ; of the content line into its property name, parameter list,
        ; and value string

name               = x-name / iana-token

iana-token = 1*(ALPHA / DIGIT / "-")
x-name             = "X-" [vendorid "-"] 1*(ALPHA / DIGIT / "-")
vendorid   = 3*(ALPHA / DIGIT)     ;Vendor identification

param              = param-name "=" param-value
                          *("," param-value)
        ; Each property defines the specific ABNF for the parameters
        ; allowed on the property. Refer to specific properties for
        ; precise parameter ABNF.

param-name = iana-token / x-token

param-value        = paramtext / quoted-string

paramtext  = *SAFE-CHAR

value      = *VALUE-CHAR

quoted-string      = DQUOTE *QSAFE-CHAR DQUOTE

NON-US-ASCII       = %x80-F8
QSAFE-CHAR = WSP / %x21 / %x23-7E / NON-US-ASCII
SAFE-CHAR  = WSP / %x21 / %x23-2B / %x2D-39 / %x3C-7E
                / NON-US-ASCII
VALUE-CHAR = WSP / %x21-7E / NON-US-ASCII
CR = %x0D
LF = %x0A
CRLF       = CR LF
CTL        = %x00-08 / %x0A-1F / %x7F
        ; Controls

ALPHA      = %x41-5A / %x61-7A   ; A-Z / a-z

DIGIT      = %x30-39
        ; 0-9

DQUOTE     = %x22
        ; Quotation Mark

WSP        = SPACE / HTAB

SPACE      = %x20

HTAB       = %x09

parameter  = altrepparam           ; Alternate text representation
                / cnparam               ; Common name
                / cutypeparam           ; Calendar user type
                / delfromparam          ; Delegator
                / deltoparam            ; Delegatee
                / dirparam              ; Directory entry
                / encodingparam         ; Inline encoding
                / fmttypeparam          ; Format type
                / fbtypeparam           ; Free/busy time type
                / languageparam         ; Language for text
                / memberparam           ; Group or list membership
                / partstatparam         ; Participation status
                / rangeparam            ; Recurrence identifier range
                / trigrelparam          ; Alarm trigger relationship
                / reltypeparam          ; Relationship type
                / roleparam             ; Participation role
                / rsvpparam             ; RSVP expectation
                / sentbyparam           ; Sent by
                / tzidparam             ; Reference to time zone object
                / valuetypeparam        ; Property value data type
                / ianaparam
        ; Some other IANA registered iCalendar parameter.
                / xparam
        ; A non-standard, experimental parameter.

ianaparam  = iana-token "=" param-value *("," param-value)

xparam     =x-name "=" param-value *("," param-value)

altrepparam        = "ALTREP" "=" DQUOTE uri DQUOTE

cnparam    = "CN" "=" param-value

cutypeparam        = "CUTYPE" "="
                         ("INDIVIDUAL"          ; An individual
                        / "GROUP"               ; A group of individuals
                        / "RESOURCE"            ; A physical resource
                        / "ROOM"                ; A room resource
                        / "UNKNOWN"             ; Otherwise not known
                        / x-name                ; Experimental type
                        / iana-token)           ; Other IANA registered
                                                ; type
delfromparam       = "DELEGATED-FROM" "=" DQUOTE cal-address DQUOTE
                          *("," DQUOTE cal-address DQUOTE)

deltoparam = "DELEGATED-TO" "=" DQUOTE cal-address DQUOTE
                  *("," DQUOTE cal-address DQUOTE)

dirparam   = "DIR" "=" DQUOTE uri DQUOTE

encodingparam      = "ENCODING" "="
                          ("8BIT"
        ; "8bit" text encoding is defined in [RFC 2045]
                        / "BASE64"
        ; "BASE64" binary encoding format is defined in [RFC 2045]
                        / iana-token
        ; Some other IANA registered iCalendar encoding type
                        / x-name)
        ; A non-standard, experimental encoding type

fmttypeparam       = "FMTTYPE" "=" iana-token
                                        ; A IANA registered content type
                                     / x-name
                                        ; A non-standard content type

fbtypeparam        = "FBTYPE" "=" ("FREE" / "BUSY"
                        / "BUSY-UNAVAILABLE" / "BUSY-TENTATIVE"
                        / x-name
        ; Some experimental iCalendar data type.
                        / iana-token)

        ; Some other IANA registered iCalendar data type.

languageparam =    "LANGUAGE" "=" language

language = <Text identifying a language, as defined in [RFC 1766]>

memberparam        = "MEMBER" "=" DQUOTE cal-address DQUOTE
                          *("," DQUOTE cal-address DQUOTE)

partstatparam      = "PARTSTAT" "="
                         ("NEEDS-ACTION"        ; Event needs action
                        / "ACCEPTED"            ; Event accepted
                        / "DECLINED"            ; Event declined

                        / "TENTATIVE"           ; Event tentatively
                                                ; accepted
                        / "DELEGATED"           ; Event delegated
                        / x-name                ; Experimental status
                        / iana-token)           ; Other IANA registered
                                                ; status
rangeparam = "RANGE" "=" ("THISANDPRIOR"
        ; To specify all instances prior to the recurrence identifier
                / "THISANDFUTURE")
        ; To specify the instance specified by the recurrence identifier
        ; and all subsequent recurrence instances

trigrelparam       = "RELATED" "="
                         ("START"       ; Trigger off of start
                        / "END")        ; Trigger off of end

reltypeparam       = "RELTYPE" "="
                         ("PARENT"      ; Parent relationship. Default.
                        / "CHILD"       ; Child relationship
                        / "SIBLING      ; Sibling relationship
                        / iana-token    ; Some other IANA registered
                                        ; iCalendar relationship type
                        / x-name)       ; A non-standard, experimental
                                        ; relationship type

roleparam  = "ROLE" "="
                 ("CHAIR"               ; Indicates chair of the
                                        ; calendar entity
                / "REQ-PARTICIPANT"     ; Indicates a participant whose
                                        ; participation is required
                / "OPT-PARTICIPANT"     ; Indicates a participant whose
                                        ; participation is optional
                / "NON-PARTICIPANT"     ; Indicates a participant who is
                                        ; copied for information
                                        ; purposes only
                / x-name                ; Experimental role
                / iana-token)           ; Other IANA role
rsvpparam = "RSVP" "=" ("TRUE" / "FALSE")
sentbyparam        = "SENT-BY" "=" DQUOTE cal-address DQUOTE

tzidparam  = "TZID" "=" [tzidprefix] paramtext CRLF

tzidprefix = "/"

valuetypeparam = "VALUE" "=" valuetype

valuetype  = ("BINARY"
                / "BOOLEAN"
                / "CAL-ADDRESS"
                / "DATE"
                / "DATE-TIME"
                / "DURATION"
                / "FLOAT"
                / "INTEGER"
                / "PERIOD"
                / "RECUR"
                / "TEXT"
                / "TIME"
                / "URI"
                / "UTC-OFFSET"
                / x-name
                ; Some experimental iCalendar data type.
                / iana-token)
                ; Some other IANA registered iCalendar data type.

binary     = *(4b-char) [b-end]
b-end      = (2b-char "==") / (3b-char "=")

b-char = ALPHA / DIGIT / "+" / "/"

boolean    = "TRUE" / "FALSE"

cal-address        = uri

date               = date-value

date-value         = date-fullyear date-month date-mday
date-fullyear      = 4DIGIT

date-month         = 2DIGIT        ;01-12
date-mday          = 2DIGIT        ;01-28, 01-29, 01-30, 01-31
                                        ;based on month/year

date-time  = date "T" time ;As specified in the date and time
                                ;value definitions

dur-value  = (["+"] / "-") "P" (dur-date / dur-time / dur-week)

dur-date   = dur-day [dur-time]
dur-time   = "T" (dur-hour / dur-minute / dur-second)
dur-week   = 1*DIGIT "W"
dur-hour   = 1*DIGIT "H" [dur-minute]
dur-minute = 1*DIGIT "M" [dur-second]
dur-second = 1*DIGIT "S"
dur-day    = 1*DIGIT "D"

float      = (["+"] / "-") 1*DIGIT ["." 1*DIGIT]

integer    = (["+"] / "-") 1*DIGIT

period     = period-explicit / period-start

period-explicit = date-time "/" date-time
period-start = date-time "/" dur-value
recur      = "FREQ"=freq *(

                ; either UNTIL or COUNT may appear in a 'recur',
                ; but UNTIL and COUNT MUST NOT occur in the same 'recur'

                ( ";" "UNTIL" "=" enddate ) /
                ( ";" "COUNT" "=" 1*DIGIT ) /

                ; the rest of these keywords are optional,
                ; but MUST NOT occur more than once

                ( ";" "INTERVAL" "=" 1*DIGIT )          /
                ( ";" "BYSECOND" "=" byseclist )        /
                ( ";" "BYMINUTE" "=" byminlist )        /
                ( ";" "BYHOUR" "=" byhrlist )           /
                ( ";" "BYDAY" "=" bywdaylist )          /
                ( ";" "BYMONTHDAY" "=" bymodaylist )    /
                ( ";" "BYYEARDAY" "=" byyrdaylist )     /
                ( ";" "BYWEEKNO" "=" bywknolist )       /
                ( ";" "BYMONTH" "=" bymolist )          /
                ( ";" "BYSETPOS" "=" bysplist )         /
                ( ";" "WKST" "=" weekday )              /

                ( ";" x-name "=" text )
                )

freq       = "SECONDLY" / "MINUTELY" / "HOURLY" / "DAILY"
                / "WEEKLY" / "MONTHLY" / "YEARLY"

enddate    = date
enddate    =/ date-time            ;An UTC value

byseclist  = seconds / ( seconds *("," seconds) )

seconds    = 1DIGIT / 2DIGIT       ;0 to 59

byminlist  = minutes / ( minutes *("," minutes) )

minutes    = 1DIGIT / 2DIGIT       ;0 to 59

byhrlist   = hour / ( hour *("," hour) )

hour       = 1DIGIT / 2DIGIT       ;0 to 23

bywdaylist = weekdaynum / ( weekdaynum *("," weekdaynum) )

weekdaynum = [([plus] ordwk / minus ordwk)] weekday

plus       = "+"

minus      = "-"

ordwk      = 1DIGIT / 2DIGIT       ;1 to 53

weekday    = "SU" / "MO" / "TU" / "WE" / "TH" / "FR" / "SA"
bymodaylist = monthdaynum / ( monthdaynum *("," monthdaynum) )

monthdaynum = ([plus] ordmoday) / (minus ordmoday)

ordmoday   = 1DIGIT / 2DIGIT       ;1 to 31

byyrdaylist = yeardaynum / ( yeardaynum *("," yeardaynum) )

yeardaynum = ([plus] ordyrday) / (minus ordyrday)

ordyrday   = 1DIGIT / 2DIGIT / 3DIGIT      ;1 to 366

bywknolist = weeknum / ( weeknum *("," weeknum) )

weeknum    = ([plus] ordwk) / (minus ordwk)

bymolist   = monthnum / ( monthnum *("," monthnum) )

monthnum   = 1DIGIT / 2DIGIT       ;1 to 12

bysplist   = setposday / ( setposday *("," setposday) )

setposday  = yeardaynum

BYMINUTE=30

FREQ=DAILY;COUNT=10;INTERVAL=2

text       = *(TSAFE-CHAR / ":" / DQUOTE / ESCAPED-CHAR)
ESCAPED-CHAR = "\\" / "\;" / "\," / "\N" / "\n")
        ; \\ encodes \, \N or \n encodes newline
        ; \; encodes ;, \, encodes ,
TSAFE-CHAR = %x20-21 / %x23-2B / %x2D-39 / %x3C-5B
                  %x5D-7E / NON-US-ASCII
        ; Any character except CTLs not needed by the current
        ; character set, DQUOTE, ";", ":", "\", ","

time               = time-hour time-minute time-second [time-utc]

time-hour          = 2DIGIT        ;00-23
time-minute        = 2DIGIT        ;00-59
time-second        = 2DIGIT        ;00-60
time-utc   = "Z"

uri        = <As defined by any IETF RFC>

utc-offset = time-numzone  ;As defined above in time data type

time-numzone       = ("+" / "-") time-hour time-minute [time-
icalobject = 1*("BEGIN" ":" "VCALENDAR" CRLF
                  icalbody
                  "END" ":" "VCALENDAR" CRLF)

icalbody   = calprops component

calprops   = 2*(

                ; 'prodid' and 'version' are both REQUIRED,
                ; but MUST NOT occur more than once

                prodid /version /

                ; 'calscale' and 'method' are optional,
                ; but MUST NOT occur more than once

                calscale        /
                method          /

                x-prop

                )

component  = 1*(eventc / todoc / journalc / freebusyc /
                / timezonec / iana-comp / x-comp)

iana-comp  = "BEGIN" ":" iana-token CRLF

                  1*contentline

                  "END" ":" iana-token CRLF

x-comp     = "BEGIN" ":" x-name CRLF

                  1*contentline

                  "END" ":" x-name CRLF

eventc     = "BEGIN" ":" "VEVENT" CRLF
                  eventprop *alarmc
                  "END" ":" "VEVENT" CRLF

eventprop  = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                class / created / description / dtstart / geo /

                last-mod / location / organizer / priority /
                dtstamp / seq / status / summary / transp /
                uid / url / recurid /

                ; either 'dtend' or 'duration' may appear in
                ; a 'eventprop', but 'dtend' and 'duration'
                ; MUST NOT occur in the same 'eventprop'

                dtend / duration /

                ; the following are optional,
                ; and MAY occur more than once

                attach / attendee / categories / comment /
                contact / exdate / exrule / rstatus / related /
                resources / rdate / rrule / x-prop

                )

todoc      = "BEGIN" ":" "VTODO" CRLF
                  todoprop *alarmc
                  "END" ":" "VTODO" CRLF

todoprop   = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                class / completed / created / description / dtstamp /
                dtstart / geo / last-mod / location / organizer /
                percent / priority / recurid / seq / status /
                summary / uid / url /

                ; either 'due' or 'duration' may appear in
                ; a 'todoprop', but 'due' and 'duration'
                ; MUST NOT occur in the same 'todoprop'

                due / duration /

                ; the following are optional,
                ; and MAY occur more than once
                attach / attendee / categories / comment / contact /
                exdate / exrule / rstatus / related / resources /
                rdate / rrule / x-prop

                )

journalc   = "BEGIN" ":" "VJOURNAL" CRLF
                  jourprop
                  "END" ":" "VJOURNAL" CRLF

jourprop   = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                class / created / description / dtstart / dtstamp /
                last-mod / organizer / recurid / seq / status /
                summary / uid / url /

                ; the following are optional,
                ; and MAY occur more than once

                attach / attendee / categories / comment /
                contact / exdate / exrule / related / rdate /
                rrule / rstatus / x-prop

                )

freebusyc  = "BEGIN" ":" "VFREEBUSY" CRLF
                  fbprop
                  "END" ":" "VFREEBUSY" CRLF

fbprop     = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                contact / dtstart / dtend / duration / dtstamp /
                organizer / uid / url /

                ; the following are optional,
                ; and MAY occur more than once

                attendee / comment / freebusy / rstatus / x-prop

                )

timezonec  = "BEGIN" ":" "VTIMEZONE" CRLF

                  2*(

                  ; 'tzid' is required, but MUST NOT occur more
                  ; than once

                tzid /

                  ; 'last-mod' and 'tzurl' are optional,
                but MUST NOT occur more than once

                last-mod / tzurl /

                  ; one of 'standardc' or 'daylightc' MUST occur
                ..; and each MAY occur more than once.

                standardc / daylightc /

                ; the following is optional,
                ; and MAY occur more than once

                  x-prop

                  )

                  "END" ":" "VTIMEZONE" CRLF

standardc  = "BEGIN" ":" "STANDARD" CRLF

                  tzprop

                  "END" ":" "STANDARD" CRLF

daylightc  = "BEGIN" ":" "DAYLIGHT" CRLF

                  tzprop

                  "END" ":" "DAYLIGHT" CRLF

tzprop     = 3*(

                ; the following are each REQUIRED,
                ; but MUST NOT occur more than once

                dtstart / tzoffsetto / tzoffsetfrom /

                ; the following are optional,
                ; and MAY occur more than once

                comment / rdate / rrule / tzname / x-prop

                )

alarmc     = "BEGIN" ":" "VALARM" CRLF
                       (audioprop / dispprop / emailprop / procprop)
                       "END" ":" "VALARM" CRLF

audioprop  = 2*(

                ; 'action' and 'trigger' are both REQUIRED,
                ; but MUST NOT occur more than once

                action / trigger /

                ; 'duration' and 'repeat' are both optional,
                ; and MUST NOT occur more than once each,
                ; but if one occurs, so MUST the other

                duration / repeat /

                ; the following is optional,
                ; but MUST NOT occur more than once

                attach /

                ; the following is optional,
                ; and MAY occur more than once

                x-prop

                )



dispprop   = 3*(

                ; the following are all REQUIRED,
                ; but MUST NOT occur more than once

                action / description / trigger /

                ; 'duration' and 'repeat' are both optional,
                ; and MUST NOT occur more than once each,
                ; but if one occurs, so MUST the other

                duration / repeat /

                ; the following is optional,
                ; and MAY occur more than once

                *x-prop

                )



emailprop  = 5*(

                ; the following are all REQUIRED,
                ; but MUST NOT occur more than once

                action / description / trigger / summary

                ; the following is REQUIRED,
                ; and MAY occur more than once

                attendee /

                ; 'duration' and 'repeat' are both optional,
                ; and MUST NOT occur more than once each,
                ; but if one occurs, so MUST the other

                duration / repeat /

                ; the following are optional,
                ; and MAY occur more than once

                attach / x-prop

                )



procprop   = 3*(

                ; the following are all REQUIRED,
                ; but MUST NOT occur more than once

                action / attach / trigger /

                ; 'duration' and 'repeat' are both optional,
                ; and MUST NOT occur more than once each,
                ; but if one occurs, so MUST the other

                duration / repeat /

                ; 'description' is optional,
                ; and MUST NOT occur more than once

                description /

                ; the following is optional,
                ; and MAY occur more than once

                x-prop

                )

calscale   = "CALSCALE" calparam ":" calvalue CRLF

calparam   = *(";" xparam)

calvalue   = "GREGORIAN" / iana-token

method     = "METHOD" metparam ":" metvalue CRLF

metparam   = *(";" xparam)

metvalue   = iana-token

prodid     = "PRODID" pidparam ":" pidvalue CRLF

pidparam   = *(";" xparam)

pidvalue   = text
version    = "VERSION" verparam ":" vervalue CRLF

verparam   = *(";" xparam)

vervalue   = "2.0"         ;This memo
                / maxver
                / (minver ";" maxver)

minver     = <A IANA registered iCalendar version identifier>
maxver     = <A IANA registered iCalendar version identifier>
attach     = "ATTACH" attparam ":" uri  CRLF

attach     =/ "ATTACH" attparam ";" "ENCODING" "=" "BASE64"
                   ";" "VALUE" "=" "BINARY" ":" binary

attparam   = *(

                ; the following is optional,
                ; but MUST NOT occur more than once

                (";" fmttypeparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

categories = "CATEGORIES" catparam ":" text *("," text)
                  CRLF

catparam   = *(

                ; the following is optional,
                ; but MUST NOT occur more than once

                (";" languageparam ) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

class      = "CLASS" classparam ":" classvalue CRLF

classparam = *(";" xparam)

classvalue = "PUBLIC" / "PRIVATE" / "CONFIDENTIAL" / iana-token
                / x-name
comment    = "COMMENT" commparam ":" text CRLF

commparam  = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" altrepparam) / (";" languageparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

description        = "DESCRIPTION" descparam ":" text CRLF

descparam  = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" altrepparam) / (";" languageparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

decimal = degrees + minutes/60 + seconds/3600.

geo        = "GEO" geoparam ":" geovalue CRLF

geoparam   = *(";" xparam)

geovalue   = float ";" float
location   = "LOCATION locparam ":" text CRLF

locparam   = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" altrepparam) / (";" languageparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

percent = "PERCENT-COMPLETE" pctparam ":" integer CRLF

pctparam   = *(";" xparam)

priority   = "PRIORITY" prioparam ":" privalue CRLF
prioparam  = *(";" xparam)

privalue   = integer       ;Must be in the range [0..9]
        ; All other values are reserved for future use

resources  = "RESOURCES" resrcparam ":" text *("," text) CRLF

resrcparam = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" altrepparam) / (";" languageparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

status     = "STATUS" statparam] ":" statvalue CRLF

statparam  = *(";" xparam)

statvalue  = "TENTATIVE"           ;Indicates event is
                                        ;tentative.
                / "CONFIRMED"           ;Indicates event is
                                        ;definite.
                / "CANCELLED"           ;Indicates event was
                                        ;cancelled.
        ;Status values for a "VEVENT"

statvalue  =/ "NEEDS-ACTION"       ;Indicates to-do needs action.
                / "COMPLETED"           ;Indicates to-do completed.
                / "IN-PROCESS"          ;Indicates to-do in process of
                / "CANCELLED"           ;Indicates to-do was cancelled.
        ;Status values for "VTODO".

statvalue  =/ "DRAFT"              ;Indicates journal is draft.
                / "FINAL"               ;Indicates journal is final.
                / "CANCELLED"           ;Indicates journal is removed.
        ;Status values for "VJOURNAL".

summary    = "SUMMARY" summparam ":" text CRLF

summparam  = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" altrepparam) / (";" languageparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

completed  = "COMPLETED" compparam ":" date-time CRLF

compparam  = *(";" xparam)

dtend      = "DTEND" dtendparam":" dtendval CRLF

dtendparam = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" "VALUE" "=" ("DATE-TIME" / "DATE")) /
                (";" tzidparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )



dtendval   = date-time / date
due        = "DUE" dueparam":" dueval CRLF

dueparam   = *(
                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" "VALUE" "=" ("DATE-TIME" / "DATE")) /
                (";" tzidparam) /

                ; the following is optional,
                ; and MAY occur more than once

                  *(";" xparam)

                )



dueval     = date-time / date
dtstart    = "DTSTART" dtstparam ":" dtstval CRLF

dtstparam  = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" "VALUE" "=" ("DATE-TIME" / "DATE")) /
                (";" tzidparam) /

                ; the following is optional,
                ; and MAY occur more than once

                  *(";" xparam)

                )



dtstval    = date-time / date
duration   = "DURATION" durparam ":" dur-value CRLF
                  ;consisting of a positive duration of time.

durparam   = *(";" xparam)

freebusy   = "FREEBUSY" fbparam ":" fbvalue
                  CRLF

fbparam    = *(
                ; the following is optional,
                ; but MUST NOT occur more than once

                (";" fbtypeparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

fbvalue    = period *["," period]
transp     = "TRANSP" tranparam ":" transvalue CRLF

tranparam  = *(";" xparam)

transvalue = "OPAQUE"      ;Blocks or opaque on busy time searches.
                / "TRANSPARENT" ;Transparent on busy time searches.
        ;Default value is OPAQUE

tzid       = "TZID" tzidpropparam ":" [tzidprefix] text CRLF

tzidpropparam      = *(";" xparam)

tzname     = "TZNAME" tznparam ":" text CRLF

tznparam   = *(

                ; the following is optional,
                ; but MUST NOT occur more than once

                (";" languageparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

tzoffsetfrom       = "TZOFFSETFROM" frmparam ":" utc-offset
                          CRLF

frmparam   = *(";" xparam)

tzoffsetto = "TZOFFSETTO" toparam ":" utc-offset CRLF

toparam    = *(";" xparam)

tzurl      = "TZURL" tzurlparam ":" uri CRLF

tzurlparam = *(";" xparam)

attendee   = "ATTENDEE" attparam ":" cal-address CRLF

attparam   = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" cutypeparam) / (";"memberparam) /
                (";" roleparam) / (";" partstatparam) /
                (";" rsvpparam) / (";" deltoparam) /
                (";" delfromparam) / (";" sentbyparam) /
                (";"cnparam) / (";" dirparam) /
                (";" languageparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

contact    = "CONTACT" contparam ":" text CRLF

contparam  = *(
                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" altrepparam) / (";" languageparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

c=3DUS??(cn=3DBJim%20Dolittle)":Jim Dolittle\, ABC Industries\,
organizer  = "ORGANIZER" orgparam ":"
                  cal-address CRLF

orgparam   = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" cnparam) / (";" dirparam) / (";" sentbyparam) /
                (";" languageparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

recurid    = "RECURRENCE-ID" ridparam ":" ridval CRLF

ridparam   = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" "VALUE" "=" ("DATE-TIME" / "DATE)) /
                (";" tzidparam) / (";" rangeparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

ridval     = date-time / date
related    = "RELATED-TO" [relparam] ":" text CRLF

relparam   = *(

                ; the following is optional,
                ; but MUST NOT occur more than once

                (";" reltypeparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparm)

                )

url        = "URL" urlparam ":" uri CRLF

urlparam   = *(";" xparam)

uid        = "UID" uidparam ":" text CRLF

uidparam   = *(";" xparam)

exdate     = "EXDATE" exdtparam ":" exdtval *("," exdtval) CRLF

exdtparam  = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" "VALUE" "=" ("DATE-TIME" / "DATE")) /

                (";" tzidparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

exdtval    = date-time / date
exrule     = "EXRULE" exrparam ":" recur CRLF

exrparam   = *(";" xparam)

rdate      = "RDATE" rdtparam ":" rdtval *("," rdtval) CRLF

rdtparam   = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                (";" "VALUE" "=" ("DATE-TIME" / "DATE" / "PERIOD")) /
                (";" tzidparam) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

rdtval     = date-time / date / period
rrule      = "RRULE" rrulparam ":" recur CRLF

rrulparam  = *(";" xparam)

BYMONTH=1;BYDAY=SU,MO,TU,WE,TH,FR,SA
BYDAY=MO,WE,FR
action     = "ACTION" actionparam ":" actionvalue CRLF

actionparam        = *(";" xparam)

actionvalue        = "AUDIO" / "DISPLAY" / "EMAIL" / "PROCEDURE"
                        / iana-token / x-name

repeatcnt  = "REPEAT" repparam ":" integer CRLF
repparam   = *(";" xparam)

trigger    = "TRIGGER" (trigrel / trigabs)

trigrel    = *(

                ; the following are optional,
                ; but MUST NOT occur more than once

                  (";" "VALUE" "=" "DURATION") /
                  (";" trigrelparam) /

                ; the following is optional,
                ; and MAY occur more than once

                  (";" xparam)
                  ) ":"  dur-value

trigabs    = 1*(

                ; the following is REQUIRED,
                ; but MUST NOT occur more than once

                  (";" "VALUE" "=" "DATE-TIME") /

                ; the following is optional,
                ; and MAY occur more than once

                  (";" xparam)

                  ) ":" date-time

created    = "CREATED" creaparam ":" date-time CRLF

creaparam  = *(";" xparam)

dtstamp    = "DTSTAMP" stmparam ":" date-time CRLF

stmparam   = *(";" xparam)

last-mod   = "LAST-MODIFIED" lstparam ":" date-time CRLF

lstparam   = *(";" xparam)

seq = "SEQUENCE" seqparam ":" integer CRLF
seqparam   = *(";" xparam)

x-prop     = x-name *(";" xparam) [";" languageparam] ":" text CRLF
        ; Lines longer than 75 octets should be folded

rstatus    = "REQUEST-STATUS" rstatparam ":"
                  statcode ";" statdesc [";" extdata]

rstatparam = *(

                ; the following is optional,
                ; but MUST NOT occur more than once

                (";" languageparm) /

                ; the following is optional,
                ; and MAY occur more than once

                (";" xparam)

                )

statcode   = 1*DIGIT *("." 1*DIGIT)
statdesc   = text
extdata    = text
