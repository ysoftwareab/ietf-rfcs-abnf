K = MD4(UNICODE(password)) 
         
Ksign = HMAC(K, "signature key")  //includes zero octet at end 
tmp = MD5(concat(T, data)) 
CHKSUM = HMAC(Ksign, tmp) 
    
    
T = the message type, encoded as a little-endian four byte integer. 
    
L = concat("fortybits", T) //includes zero octet at 
                                           //end of string constant 
L = T 
Ksign = HMAC(K,L) 
Confounder = nonce(8) // get an 8 octet nonce for a confounder 
Checksum = HMAC(Ksign, concat(Confounder, data)) 
Ke = Ksign 
Ke2 = HMAC(Ke, Checksum) 
data = RC4(Ke2, data) 
    
T = the message type, encoded as a little-endian four byte integer. 
    
IV = SND_SEQ 
K = XOR(K, 0xf0f0f0f0f0f0f0f0f0f0f0f0f0f0f0) 
L = concat("fortybits", T) //includes zero octet at end 
L = T 
Ksign = HMAC(K, L) 
Ke = Ksign 
Ke2 = HMAC(Ke, IV) 
Data = RC4(Ke2, data) 
SND_SEQ = RC4(Ke, seq#) 
         
