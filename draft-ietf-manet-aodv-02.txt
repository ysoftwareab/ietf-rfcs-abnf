


Mobile Ad Hoc Networking Working Group                Charles E. Perkins
INTERNET DRAFT                             Sun Microsystems Laboratories
20 November 1998                                      Elizabeth M. Royer
                                 University of California, Santa Barbara

            Ad Hoc On Demand Distance Vector (AODV) Routing
                      draft-ietf-manet-aodv-02.txt


Status of This Memo

   This document is a submission by the Mobile Ad Hoc Networking Working
   Group of the Internet Engineering Task Force (IETF).  Comments should
   be submitted to the manet@itd.nrl.navy.mil mailing list.

   Distribution of this memo is unlimited.

   This document is an Internet-Draft.  Internet-Drafts are working
   documents of the Internet Engineering Task Force (IETF), its areas,
   and its working groups.  Note that other groups may also distribute
   working documents as Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at
   any time.  It is inappropriate to use Internet- Drafts as reference
   material or to cite them other than as ``work in progress.''

   To view the entire list of current Internet-Drafts, please check
   the ``1id-abstracts.txt'' listing contained in the Internet-Drafts
   Shadow Directories on ftp.is.co.za (Africa), ftp.nordu.net (Northern
   Europe), ftp.nis.garr.it (Southern Europe), munnari.oz.au (Pacific
   Rim), ftp.ietf.org (US East Coast), or ftp.isi.edu (US West Coast).


Abstract

   The Ad Hoc On-Demand Distance Vector (AODV) routing protocol is
   intended for use by mobile nodes in an ad hoc network characterized
   by frequent changes in link connectivity to each other caused
   by relative movement.  It offers quick adaptation to dynamic
   link conditions, low processing and memory overhead, low network
   utilization, and establishment of both unicast and multicast routes
   between sources and destinations which are loop free at all times.
   It makes use of destination sequence numbers, which are a novel means
   of ensuring loop freedom even in the face of anomalous delivery of
   routing control messages, and solving classical problems associated
   with distance vector protocols, including the problem of ``counting
   to infinity''.







Perkins, Royer              Expires 20 April 1999               [Page i]

Internet Draft                   AODV                   20 November 1998




                                Contents


Status of This Memo                                                    i

Abstract                                                               i

 1. Introduction                                                       1

 2. Overview                                                           1

 3. AODV Terminology                                                   3

 4. Route Request (RREQ) Message Format                                5

 5. Route Reply (RREP) Message Format                                  6

 6. Node Operation - Unicast                                           7
     6.1. Maintaining Route Utilization Records . . . . . . . . . .    7
     6.2. Generating Route Requests (RREQs) . . . . . . . . . . . .    8
     6.3. Forwarding Route Requests . . . . . . . . . . . . . . . .    8
     6.4. Generating Route Replies (RREPs)  . . . . . . . . . . . .    9
     6.5. Maintaining Local Connectivity  . . . . . . . . . . . . .   10
     6.6. Initiating Triggered Route Replies (Triggered RREPs)  . .   11

 7. Multicast Route Activation (MACT) Message Format                  12

 8. Node Operation - Multicast                                        13
     8.1. Maintaining Multicast Tree Utilization Records  . . . . .   13
     8.2. Generating Multicast RREQs  . . . . . . . . . . . . . . .   13
     8.3. Forwarding Multicast Route Requests . . . . . . . . . . .   14
     8.4. Generating Multicast Route Replies  . . . . . . . . . . .   14
     8.5. Forwarding Route Replies  . . . . . . . . . . . . . . . .   15
     8.6. Route Deletion and Multicast Tree Pruning . . . . . . . .   16
     8.7. Repairing Link Breakages  . . . . . . . . . . . . . . . .   17
     8.8. Initiating Triggered Route Replies  . . . . . . . . . . .   19

 9. Quality of Service                                                20

10. AODV and Aggregated Networks                                      20

11. Using AODV with Other Networks                                    21

12. Extensions                                                        21
    12.1. Hello Interval Extension Format . . . . . . . . . . . . .   22
    12.2. Multicast Group Leader Extension Format . . . . . . . . .   22
    12.3. Multicast Group Information Extension Format  . . . . . .   23



Perkins, Royer              Expires 20 April 1999              [Page ii]

Internet Draft                   AODV                   20 November 1998


    12.4. Maximum Delay Extension Format  . . . . . . . . . . . . .   24
    12.5. Minimum Bandwidth Extension Format  . . . . . . . . . . .   24

13. Configuration Parameters                                          25

14. Security Considerations                                           26


1. Introduction

   The Ad Hoc On-Demand Distance Vector (AODV) algorithm enables
   dynamic, self-starting, multihop routing between participating mobile
   nodes wishing to establish and maintain an ad hoc network.  AODV
   allows mobile nodes to obtain routes quickly for new destinations,
   and does not require nodes to maintain routes to destinations that
   are not in active communication.  Additionally, AODV allows for the
   formation of multicast groups whose membership is free to change
   during the lifetime of the network.  AODV allows mobile nodes to
   respond quickly to link breakages and changes in network topology.
   The operation of AODV is loop free, and by avoiding the Bellman-Ford
   ``counting to infinity'' problem offers quick convergence when the
   ad hoc network topology changes (typically, when a node moves in the
   network).

   One distinguishing feature of AODV is its use of a destination
   sequence number for each route entry.  The destination sequence
   number is created by the destination or the multicast group leader
   for any usable route information it sends to requesting nodes.  Using
   destination sequence numbers ensures loop freedom and is simple to
   program.  Given the choice between two routes to a destination, a
   requesting node always selects the one with the greatest sequence
   number.

   Another feature of AODV is that link breakages cause immediate
   notifications to be sent to the affected set of nodes, but only that
   set of nodes.


2. Overview

   Route Requests (RREQs), Route Replies (RREPs), and Multicast
   Route Activations (MACTs) are the three message types defined by
   AODV. These message types are handled by UDP, and normal IP header
   processing applies.  So, for instance, the requesting node is
   expected to use its IP address as the source IP address for the
   messages.  The range of dissemination of broadcast RREQs can be
   indicated by the TTL in the IP header.  Fragmentation is typically
   not required.




Perkins, Royer              Expires 20 April 1999               [Page 1]

Internet Draft                   AODV                   20 November 1998


   As long as the endpoints of a communication connection have valid
   routes to each other, AODV does not play any role.  When a route
   to a new destination (either a single node or a multicast group)
   is needed, the node uses a broadcast RREQ to find a route to the
   destination.  A route can be determined when the RREQ reaches either
   the destination itself, or an intermediate node with a fresh enough
   route to the destination.  The route is made available by unicasting
   a RREP back to the source of the RREQ. Since each node receiving the
   request caches a route back to the source of the request, the RREP
   can be unicast back from the destination to the source, or from any
   intermediate node that is able to satisfy the request back to the
   source.  RREQs are also used when a node wishes to join a multicast
   group.  A join flag in the RREQ informs nodes that when receiving the
   RREP, they are not just setting route pointers but are also setting
   multicast route pointers, which will be used if the route is selected
   to be added onto the tree.

   In case AODV cannot rely on lower-level mechanisms for neighborhood
   determination, a special ``hello'' message is defined for use at the
   network layer.

   For multicast groups, a ``Group Hello'' message is broadcast across
   the network by the multicast group leader.  The message carries
   multicast group and corresponding group leader IP addresses.  This
   information is used for repairing multicast trees after a previously
   disconnected portion of the network containing part of the multicast
   tree becomes reachable once again.

   Since AODV is a routing protocol, it deals with route table
   management.  Route table information must be kept even for ephemeral
   routes, such as are created to temporarily keep track of reverse
   paths towards nodes originating RREQs.  AODV assumes the following
   fields exist in each route table entry:

      - Destination IP Address
      - Destination Sequence Number
      - Hop Count
      - Next Hop
      - Lifetime
      - Routing Flags

   The following information is stored in each entry of the multicast
   route table for multicast tree routes:

      - Multicast Group IP Address
      - Multicast Group Leader IP Address
      - Multicast Group Sequence Number
      - Hop Count to next Multicast Group member
      - Hop Count to Multicast Group leader



Perkins, Royer              Expires 20 April 1999               [Page 2]

Internet Draft                   AODV                   20 November 1998


      - Next Hops
      - Lifetime

   The Next Hops field is a linked list of structures, each of which
   contains the IP address of a neighbor in the multicast tree.

   The IP Address of a Next Hop is only used to forward multicast
   messages after a MACT message has activated the route (see
   Section 8.6).


3. AODV Terminology

   This protocol specification uses conventional meanings [1] for
   capitalized words such as MUST, SHOULD, etc., to indicate requirement
   levels for various protocol features.  This section defines other
   terminology used with AODV that is not already defined in [2].

      forwarding node

         A node which agrees to forward packets destined for another
         destination node, by retransmitting them to a next hop which is
         closer to the destination along a path which has been set up
         using routing control messages.

      group leader

         A node which is a member of the given multicast group and which
         is the first such group member in the connected portion of
         the network.  This node is responsible for initializing and
         maintaining the multicast group destination sequence number.

      multicast tree

         The tree containing all nodes which are members of the
         multicast group and all nodes which are needed to connect the
         multicast group members.

      multicast route table

         The table where ad hoc nodes keep routing (including next hops)
         information for various multicast groups.

      request table

         The table where ad hoc nodes keep information concerning the
         first node to request to join a multicast group.  There is one
         entry in the table for each multicast group for which the node
         has received a RREQ with the `J' flag set (see Section 8.2).



Perkins, Royer              Expires 20 April 1999               [Page 3]

Internet Draft                   AODV                   20 November 1998


      subnet leader

         A node which is a member of the subnet defined by a specific
         routing prefix, and which offers reachability to every other
         node with the same routing prefix.  The subnet leader is
         responsible for initializing and maintaining the destination
         sequence number for every node on the subnet.













































Perkins, Royer              Expires 20 April 1999               [Page 4]

Internet Draft                   AODV                   20 November 1998


4. Route Request (RREQ) Message Format

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |J|R|        Reserved           |   Hop Count   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                          Broadcast ID                         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     Destination IP address                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  Destination Sequence Number                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                       Source IP address                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     Source Sequence Number                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   The format of the Route Request message is illustrated above, and
   contains the following fields:

      Type           xx

      J              Join flag; set when source node wants to join a
                     multicast group.

      R              Repair flag; set when a node wants to initiate
                     a repair to connect two previously disconnected
                     portions of the multicast tree.

      Reserved       Sent as 0; ignored on reception.

      Hop Count      The number of hops from the Source IP Address to
                     the node handling the request.

      Broadcast ID   A sequence number uniquely identifying the
                     particular RREQ when taken in conjunction with the
                     source node's IP address.

      Destination IP Address
                     The IP address of the destination for which a route
                     is desired.

      Destination Sequence Number
                     The last sequence number received in the past by
                     the source for any route towards the destination.






Perkins, Royer              Expires 20 April 1999               [Page 5]

Internet Draft                   AODV                   20 November 1998


      Source IP Address
                     The IP address of the node which originated the
                     Route Request.

      Source Sequence Number
                     The current sequence number to be used for route
                     entries pointing to (and generated by) the source
                     of the route request.

   When a node wishes to repair a multicast tree, it appends the
   Multicast Group Leader extension (see Section 12.2).


5. Route Reply (RREP) Message Format

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |L|R|U| Reserved|  Prefix Size  |   Hop Count   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     Destination IP address                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  Destination Sequence Number                  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                           Lifetime                            |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   The format of the Route Reply message is illustrated above, and
   contains the following fields:

      Type          xx

      L             If the `L' bit is set, the message is a ``hello''
                    message and contains a list of the node's neighbors.

      R             Repair flag; set when a node wants to initiate
                    a repair to connect two previously disconnected
                    portions of the multicast tree.

      U             Update flag; set in a Group Hello, when the group
                    leader information has changed.

      Reserved      Sent as 0; ignored on reception.

      Prefix Size   If nonzero, the Prefix Size specifies that the
                    indicated route vector may be used for any nodes
                    with the same routing prefix (as defined by the
                    Prefix Size) as the requested destination.




Perkins, Royer              Expires 20 April 1999               [Page 6]

Internet Draft                   AODV                   20 November 1998


      Hop Count     The number of hops from the Source IP Address to
                    the Destination IP Address.  For multicast route
                    requests this indicates the number of hops to the
                    multicast group leader.

      Destination IP Address
                    The IP address of the destination for which a route
                    is supplied.

      Destination Sequence Number
                    The destination sequence number associated to the
                    route.

      Lifetime      The time for which nodes receiving the RREP consider
                    the route to be valid.

   When the RREP is sent for a multicast destination, the Multicast
   Group Information extension is appended (see Section 12.3).

   Note that the Prefix Size allows a Subnet Leader to supply a route
   for every host in the subnet defined by the routing prefix, which
   is determined by the IP address of the Subnet Leader and the Prefix
   Size.  In order to make use of this feature, the Subnet Leader has to
   guarantee reachability to all the hosts sharing the indicated subnet
   prefix.  The Subnet Leader is also responsible for maintaining the
   Destination Sequence Number for the whole subnet.


6. Node Operation - Unicast

   This section describes the scenarios under which nodes generate
   RREQs and RREPs for unicast communication, and how the fields in the
   message are handled.


6.1. Maintaining Route Utilization Records

   For each valid route maintained by a node (containing a finite
   metric), the node also maintains a list of those neighbors that
   are actively using the route.  This active-list of neighbors will
   receive notifications from the node in the event of detection of a
   link breakage.  A neighbor is on the active list if it has sent any
   packet to the node to be forwarded to the destination within the last
   ACTIVE_ROUTE_TIMEOUT milliseconds.








Perkins, Royer              Expires 20 April 1999               [Page 7]

Internet Draft                   AODV                   20 November 1998


6.2. Generating Route Requests (RREQs)

   A node broadcasts a RREQ when it determines that it needs a route to
   a destination and does not have one available.  This can happen if
   the destination is previously unknown to the node, or if a previously
   valid route to the destination expires or is broken (i.e., an
   infinite metric is associated with the route).  When a route table
   entry is marked with an infinite metric, its expiration time is also
   updated to be the current time plus BAD_LINK_LIFETIME milliseconds.
   After the expiration time, the route MAY be expunged from the node's
   route table.

   After broadcasting a RREQ a node waits for a RREP, and if the reply
   is not received within RREP_WAIT_TIME milliseconds, the node may
   rebroadcast the RREQ. The RREQ may be rebroadcast up to a maximum of
   RREQ_RETRIES times.  Each rebroadcast has to increment the Broadcast
   ID field.  The node MAY choose to use larger TTL values in the IP
   header field, or wait for longer times for the RREP to arrive.


6.3. Forwarding Route Requests

   When a node receives a broadcast RREQ, it first checks to see
   whether it has received a RREQ with the same Source IP Address and
   a broadcast ID field of equal unsigned integer value within the
   last BCAST_ID_SAVE milliseconds.  If such a RREQ has been received,
   the node silently discards the newly received RREQ. Otherwise, the
   node checks to see whether it has a route to the destination.  If
   the node does not have a route, it rebroadcasts the RREQ from its
   interface(s) but using its own IP address in the IP header of the
   outgoing RREQ. The TTL or hop limit field in the outgoing IP header
   is decreased by one.  The Hop Count field in the broadcast RREQ
   message is incremented by one, to account for the new hop through the
   intermediate node.  In this case, the node also creates or updates a
   reverse route to the Source IP Address in its routing table with next
   hop equal to the IP address of the neighboring node that sent the
   broadcast RREQ (often not equal to the Source IP Address field in the
   RREQ message).  This reverse route might be used for an eventual RREP
   back to the node which originated the RREQ (identified by the Source
   IP Address).  If no route exists for the Source IP address, or if an
   existing route would expire too soon, the reverse route is put into
   the route table with lifetime REV_ROUTE_LIFE milliseconds.

   If, on the other hand, the node does have a route for the
   destination, it compares the destination sequence number (dest-seqno)
   for that route with the Destination Sequence Number field of the
   incoming RREQ. If the node's existing dest-seqno is smaller than
   the Destination Sequence Number field of the RREQ, the node again




Perkins, Royer              Expires 20 April 1999               [Page 8]

Internet Draft                   AODV                   20 November 1998


   rebroadcasts the RREQ just as if it did not have a route to the
   destination at all.

   If the node has a route to the destination, and the node's existing
   dest-seqno is greater than or equal to the Destination Sequence
   Number of the RREQ, then the node generates a RREP as discussed
   further in section 6.4.


6.4. Generating Route Replies (RREPs)

   If a node receives a route request for a destination, and has a
   fresh enough route to satisfy the request, the node generates a
   RREP message and unicasts it back to the node indicated by the
   Source IP Address field of the received RREQ. If the node is not the
   destination node, it copies over the destination sequence number from
   the route table entry.  If the generating node is the destination
   itself, it uses a destination sequence number at least equal to a
   sequence number generated after the last detected change in its
   neighbor set and at least equal to the destination sequence number in
   the RREQ. If the destination node has not detected any change in its
   set of neighbors since it last incremented its destination sequence
   number, it may use the same destination sequence number.

   As part of the process of generating the RREP, the generating node
   creates or updates an entry in its routing table for the Source
   IP Address, if necessary as described in section 6.3.  The Source
   Sequence Number is put into the route entry, along with the Hop Count
   from the RREQ. The expiration time for the route table entry is set
   to the current time plus ACTIVE_ROUTE_TIMEOUT milliseconds.

   If the generating node is not the destination node, then the
   generating node places its distance in hops from the destination
   in the Hop Count field.  If the generating node is the destination
   node, it places the value zero in the Hop Count field.  The Hop Count
   field is incremented by one at each hop as the RREP is forwarded to
   the source.  When the RREP reaches the source, the Hop Count will
   represent the distance, in hops, of the destination from the source.

   If the node is not the destination node, it calculates the Lifetime
   field of the RREP by subtracting the current time from the expiration
   time in its route table entry.  Otherwise, if the generating node
   is also the destination node, it copies the value MY_ROUTE_TIMEOUT
   into the Lifetime field of the RREP. Each node MAY make a separate
   determination about its value MY_ROUTE_TIMEOUT.

   If the generating node is not the node indicated by the Destination
   IP Address, then it puts the next hop towards the destination in the
   active-list for the reverse path route entry.



Perkins, Royer              Expires 20 April 1999               [Page 9]

Internet Draft                   AODV                   20 November 1998


6.5. Maintaining Local Connectivity

   Each forwarding node SHOULD keep track of which of its neighbors are
   active next hops (i.e., which next hops have been used to forward
   packets towards some destination within the last ACTIVE_ROUTE_TIMEOUT
   milliseconds).  Each forwarding node SHOULD attempt to determine
   which of its active next hop neighbors are actually within its
   broadcast range by using the following procedure.

   When a forwarding node receives a (unicast or multicast) packet
   from one of its active neighbors, and retransmits the packet to
   the next hop, the node SHOULD NOT transmit any additional data for
   NEXT_HOP_WAIT milliseconds.  Instead, the node SHOULD listen to see
   if the next hop retransmitted the packet.  If the retransmission is
   detected, the node can assume that the next hop is still within its
   broadcast range, and can then resume transmission.  Otherwise, the
   node SHOULD attempt to detect a response from the next hop, using the
   following methods:

    -  Any suitable link-layer indication, e.g.  a link-layer
       acknowledgement, or a CTS to receive the packet, or a RTS the
       packet to its own downstream next hop.

    -  Receiving a ICMP ACK message from the next hop.

    -  A RREQ unicast to the next hop, asking for a route to the next
       hop.

    -  An ICMP Echo Request message unicast to the next hop.

   The ICMP ACK message SHOULD be sent to a forwarding node by a next
   hop which is also the destination IP address shown in the IP header
   of the packet, when the destination has not sent any packets to the
   forwarding node within the last HELLO_INTERVAL milliseconds.  If the
   next hop cannot be detected by any of these methods, the forwarding
   node MUST assume that the link is broken, and take corrective action
   by following the methods specified in Section 6.6.

   A node MAY detect a link breakage by listening for broadcasts
   and ``hello'' messages from its set of neighbors.  If it has
   received hello messages from a neighbor, but misses more than
   ALLOWED_HELLO_LOSS consecutive broadcasts or hello messages from
   that neighbor, the node MUST assume that its neighbor is no longer
   in the neighborhood.  When this happens, the node SHOULD proceed as
   in Section 6.6.  A node SHOULD assume that a hello message has been
   missed if it is not received within 2.1 times the duration of the
   HELLO_INTERVAL.





Perkins, Royer              Expires 20 April 1999              [Page 10]

Internet Draft                   AODV                   20 November 1998


   A node MAY offer connectivity information by broadcasting local
   ``hello'' messages as follows.  Every HELLO_INTERVAL milliseconds,
   the node checks whether it has sent a broadcast (e.g., a RREQ) within
   the last HELLO_INTERVAL. If it has not, it MAY generate a ``hello''
   message.  This hello message is a broadcast RREP with TTL = 1, and
   the message fields set as follows:

      Destination IP Address
                  The node's IP address.

      Destination Sequence Number
                  The node's latest sequence number.

      Hop Count   0

      Lifetime    (1 + ALLOWED_HELLO_LOSS) * HELLO_INTERVAL

   In addition to regular Hello messages, each multicast group
   leader will also broadcast a Group Hello message system-wide every
   GROUP_HELLO_INTERVAL milliseconds.  This system-wide Group Hello
   message has IP TTL value greater than the diameter of the network
   and is initialized to a hop count of zero.  The hop count value is
   incremented by one by each node as the message is forwarded.  This
   Group Hello message contains the IP Addresses of the Multicast Groups
   for which the node is the Group Leader, along with the corresponding
   multicast group sequence numbers.  Nodes in the multicast tree can
   use these messages to update their current distance from the group
   leader.  The information in the message is also used for merging
   partitioned multicast trees, as is described later.  See Section 12.3
   for extensions needed to complete a GROUP_HELLO message.


6.6. Initiating Triggered Route Replies (Triggered RREPs)

   A node can trigger an unsolicited RREP if either it detects a link
   breakage for a next hop along an active route in its route table, or
   if it receives a RREP from a neighbor with an infinite metric for an
   active route (i.e., containing a Destination IP Address for which
   there is a route table entry with a nonempty active-list)

   The unsolicited RREP is broadcast to inform each neighbor in the
   nonempty active-list for the route to that destination.  The contents
   of the RREP fields are set as follows:

      L           0

      Hop Count   255 (= infinity)





Perkins, Royer              Expires 20 April 1999              [Page 11]

Internet Draft                   AODV                   20 November 1998


      Destination IP Address
                  The destination in the broken route

      Destination Sequence Number
                  One plus the destination sequence number recorded for
                  the route.


7. Multicast Route Activation (MACT) Message Format

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |P|G|        Reserved                           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                  Multicast Group IP address                   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                       Source IP address                       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     Source Sequence Number                    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


   The format of the Multicast Route Activation message is illustrated
   above, and contains the following fields:

      Type        xx

      P           Prune flag; set when a node wishes to prune itself
                  from the tree, unset when the node is activating a
                  tree link.

      G           Group Leader flag; set by a multicast tree member that
                  fails to repair a multicast tree link breakage, and
                  indicates to the group member receiving the message
                  that it should become the new multicast group leader.

      Reserved    Sent as 0; ignored on reception.

      Multicast Group IP Address
                  The IP address of the Multicast Group for which a
                  route is supplied.

      Source IP Address
                  The IP address of the node which originated the Route
                  Request.






Perkins, Royer              Expires 20 April 1999              [Page 12]

Internet Draft                   AODV                   20 November 1998


      Source Sequence Number
                  The current sequence number for route information
                  generated by the source of the route request.

   To prune itself from the tree (i.e., inactivate its last link to the
   multicast tree), a multicast tree member sends an MACT with the 'P'
   flag = 1 to the next hop.  A multicast tree member that has more than
   one next hop to the multicast tree SHOULD NOT try to prune itself
   from the multicast tree.


8. Node Operation - Multicast

   This section describes the scenarios under which nodes generate
   RREQs, RREPs, and MACTs for multicast communication, and how the
   fields in the messages are handled.


8.1. Maintaining Multicast Tree Utilization Records

   For each multicast tree to which a node belongs, either because it
   is a member of the group or because it is a router for the multicast
   tree, the node also maintains a list of next hops -- i.e., those
   neighbors that are likewise a part of the multicast tree.  This
   list of next hops is used for forwarding messages received for
   the multicast group.  A node will forward a multicast message to
   every such next hop, except that neighbor from which the message
   arrived.  If there are multiple next hops, the forwarding operation
   MAY be performed by broadcasting the multicast packet to the node's
   neighbors; only the neighbors that belong to the multicast tree will
   continue to forward the multicast packet.


8.2. Generating Multicast RREQs

   A node sends a multicast RREQ either when it determines that it
   should be a part of a multicast group, and it is not already a member
   of that group, or when it has a message to send to the multicast
   group but does not have a route to that group.  If the node wishes
   to join the multicast group, it sets the `J' flag in the RREQ;
   otherwise, it leaves the flag unset.  The destination address of
   the RREQ is always set to the multicast group address.  If the node
   knows the group leader and has a route to it, the node will place
   the group leader's address in the Multicast Group Leader extension
   (Section 12.2), and will unicast the RREQ to the corresponding next
   hop for that destination.  Otherwise, if the node does not have a
   route to the group leader, or if it does not know who the multicast
   group leader is, it will broadcast the RREQ and will not include the
   extension field.



Perkins, Royer              Expires 20 April 1999              [Page 13]

Internet Draft                   AODV                   20 November 1998


   The process of waiting for a RREP to a RREQ with a multicast
   destination address is the same as that described in Section 6.2.
   The node may resend the RREQ up to RREQ_RETRIES times if a RREP
   is not received.  If a RREQ was unicast to a group leader and a
   RREP is not received within RREP_WAIT_TIME milliseconds, the node
   will broadcast subsequent RREQs for that multicast group across
   the network.  If a RREP is not received after RREQ_RETRIES total
   requests, the node may assume that there are no other members of that
   particular group within the connected portion of the network.  If it
   wanted to join the multicast group, it MAY then become the multicast
   group leader for that multicast group and initialize the destination
   sequence number of the multicast group.  Otherwise, if it only wanted
   to send packets to that group without actually joining the group, it
   will drop the packets it had for that group.

   Each node in the network receiving a RREQ message with the `J' flag
   set MAY check its request table to see whether there is already an
   entry for this multicast group.  If there is no entry for the group,
   the node records the IP Address of the node which sent the RREQ,
   together with the IP address of the group for which it requested to
   be a member, in the Request Table.  Because the first node to request
   membership in a group becomes the multicast group leader, entries
   in the Request Table represent multicast group leaders.  If the
   multicast group leader changes at any time, the nodes will note this
   change by updating their Request Table so that the node IP address
   matches that of the new group leader.  If the node wishes to join or
   send a message to a multicast group, it first consults its Request
   Table.  Based on the existence of an entry for the multicast group
   in this table, the node will then send the RREQ as described at the
   beginning of this section.


8.3. Forwarding Multicast Route Requests

   The operation of nodes forwarding RREQs for multicast is similar
   to that for the reception and forwarding of RREQs as described in
   Section 6.3, with one exception.  If the RREQ is a join request, when
   the node creates a reverse route to the Source IP Address, it places
   the information in its Multicast Route table.  The generation of the
   route reply (RREP) message is discussed in the following section.


8.4. Generating Multicast Route Replies

   If a node receives a multicast join RREQ for a multicast group, and
   it is already a member of the multicast tree for that group, the
   node updates its Multicast Route Table and then generates a RREP
   message.  It unicasts the RREP back to the node indicated by the
   Source IP Address field of the received RREQ. The RREP contains



Perkins, Royer              Expires 20 April 1999              [Page 14]

Internet Draft                   AODV                   20 November 1998


   the current sequence number for the multicast group, the distance
   of the responding node from the nearest multicast group member,
   and the IP address of the group leader.  Further information about
   the multicast group leader is entered into the Multicast Group
   Information extension (see Section 12.3).

   A node can only respond to a join RREQ if it is a member of the
   multicast tree.  If a node receives a multicast route request that is
   not a join message, it can reply if it has a route to the multicast
   tree.  Otherwise it will continue forwarding the message.  If a node
   receives a multicast join route request for a multicast group and it
   is not already a member of the multicast tree for that group, it will
   rebroadcast the RREQ to its neighbors.

   In the event that a node receives a unicasted multicast route request
   that specifies its own IP address as the destination address (i.e.,
   the source node believes this destination node to be the multicast
   group leader), but the node is in fact not the group leader, it
   can simply ignore the RREQ. The source node will time out after
   RREP_WAIT_TIME milliseconds and will broadcast a new RREQ without the
   group leader address specified.

   Regardless of whether the multicast group leader or an intermediate
   node generates the RREP, the RREP fields are set as follows:

      Hop Count    Distance of the responding node to the nearest
                   multicast group member.

      Destination IP Address
                   The IP address of the node which supplies a route to
                   the multicast group.

      Destination Sequence Number
                   The destination sequence number of the node which
                   supplies a route to the multicast group.

      Lifetime     The time for which nodes receiving the RREP consider
                   the route to be valid.

   The Multicast Group Information extension described in Section 12.3
   is also included.


8.5. Forwarding Route Replies

   If an intermediate node receives a RREP in response to a RREQ that it
   has transmitted (or retransmitted on behalf of some other node), it
   increments the Hop Count and forward the RREP along the path to the
   source of the RREQ.



Perkins, Royer              Expires 20 April 1999              [Page 15]

Internet Draft                   AODV                   20 November 1998


   When the node receives more than one RREP for the same RREQ, it
   operates in a manner similar to the source node by saving the route
   information with the greatest sequence number, and beyond that the
   lowest hop count; it discards all other RREPs.  This node forwards
   the first RREP towards the source of the RREQ, and then forwards
   later RREPs only if they have a greater sequence number or smaller
   metric.


8.6. Route Deletion and Multicast Tree Pruning

   When a node broadcasts a RREQ message, it is likely to receive more
   than one reply since any node in the multicast tree can respond.
   If the RREQ was a join request, the RREP message traveling back to
   the node which originated the request sets up route pointers, which
   may eventually graft a branch onto the multicast tree.  If multiple
   branches to the same destination are created in such a manner, a
   loop will be formed.  Hence, in order to prevent the formation of
   any such loops, it is necessary to activate only one of the routes
   created by the RREP messages.  The RREP containing the largest
   destination sequence number is chosen to be the added branch to the
   multicast tree.  In the event that a node receives more than one
   RREP with the same (largest) sequence number, it selects the first
   one with the smallest hop count, i.e., the shortest distance to a
   member of the multicast group.  After waiting for RREP_WAIT_TIME
   milliseconds, the node must choose the route it wishes to use as
   its link to the multicast tree.  This is accomplished by sending a
   Multicast Activation (MACT) message.  The Destination IP Address of
   the MACT packet is set to the IP address of the multicast group.  The
   node will unicast this message to the selected next hop, effectively
   activating the route.  After receiving this message, the node's
   neighbor to which the MACT was sent activates the route entry for the
   link in the multicast route table, thereby finalizing the creation of
   the tree branch.  All neighbors not receiving this message will time
   out and delete that node as a next hop for the multicast group in
   their route tables, having never activated the route entry for that
   next hop.

   Two scenarios exist for a neighboring node receiving the MACT
   message.  If this node was previously a member of the multicast
   tree, it will not propagate the MACT message any further.  However,
   if the next hop selected by the source node's MACT message was not
   previously a multicast tree member, it will have propagated the
   original RREQ further up the network in search of nodes which are
   tree members.  Thus it is possible that this node also received more
   than one RREP, as noted in section 8.5.

   When the node receives an MACT announcing it as the next hop, it will
   send its own MACT announcing the node it has chosen as its next hop,



Perkins, Royer              Expires 20 April 1999              [Page 16]

Internet Draft                   AODV                   20 November 1998


   and so on up the tree, until a node which was already a part of the
   multicast tree is reached.

   If a multicast group member revokes its member status and wishes to
   remove itself from the multicast tree, it can do so if it is not a
   multicast router for any other nodes in the multicast group (i.e.,
   if it is a leaf node).  If this is the case, it may unicast to its
   next hop on the tree an MACT message with the 'P' flag set and with
   the Destination IP Address set to the IP address of the multicast
   group in order to prune itself from the tree.  Similarly, if the node
   receiving this message is not a member of the multicast group and
   does not have any other nodes routing through it, it may send its own
   MACT message up the tree.


8.7. Repairing Link Breakages

   Branches of the multicast tree become invalid if they time out
   (the Lifetime associated with the route expires), or if a link
   breakage results in an infinite metric being associated with the
   route.  When a link breakage is detected between two nodes on the
   multicast tree, the node downstream of the break (i.e., the node
   which is further from the multicast group leader) is responsible
   for initiating the repair of the broken link.  In order to build
   the route back up, this node will broadcast a RREQ with destination
   IP address set to the IP address of the group leader and with the
   `J' flag set.  The destination sequence number of the RREQ is the
   last known sequence number of the multicast group.  The Multicast
   Group Hop Count field is set to the distance of the source node from
   the multicast group leader.  Only a node which has a hop count for
   the multicast group less than or equal to the indicated value can
   respond.  This hop count requirement is included to prevent nodes
   on the same side of the break as the node initiating the repair
   from replying to the RREQ. The RREQ is broadcast using an expanding
   rings search.  Because of the high probability that other nearby
   nodes can be used to rebuild the route to the group leader, the
   original RREQ is broadcast with a TTL (time to live) field value
   equal to the Multicast Group Hop Count.  In this way, the effects of
   the link breakage may be localized.  If no reply is received within
   RREP_WAIT_TIME milliseconds, all subsequent RREQs (up to RREQ_RETRIES
   total attempts) will be broadcast across the entire network.  Any
   node that is a part of the multicast tree and that has a multicast
   group hop count smaller than that contained in the RREQ can return
   a RREP. If there is more than one RREP received at the originating
   node, route deletions occur as described in the previous section.

   If no response is received after RREQ_RETRIES broadcasts, it can be
   assumed that the network has become partitioned and the multicast
   tree cannot be repaired at this time.  In this situation, if the



Perkins, Royer              Expires 20 April 1999              [Page 17]

Internet Draft                   AODV                   20 November 1998


   node which had initiated the route rebuilding was a multicast group
   member, it will become the new multicast group leader for its part of
   the multicast tree partition.  It broadcasts a Group Hello with the
   multicast group address extension field containing the corresponding
   multicast group IP address included.  The `U' flag in the Group Hello
   is set, indicating that there has been a change in the group leader
   information.  All nodes receiving this message update their Request
   Tables to indicate the new group leader information.  Nodes which are
   a part of the multicast tree also update the group leader information
   for that group in their Multicast Route Table to indicate the new
   group leader.  On the other hand, if the node which had initiated the
   repair is not a multicast group member, there are two possibilities.
   If it only has one next hop for the multicast tree, it will unicast
   a MACT message, with the 'P' flag set, to its next hop, thereby
   indicating that it is pruning itself from the tree.  The node
   receiving this message will note that it is coming from its upstream
   link, i.e., from a node that is closer to the group leader than it
   is.  If the node receiving this message is a multicast group member,
   it will become the new group leader and will broadcast a Group
   Hello message as indicated above.  If it is not a multicast group
   member and it only has one other next hop link, it will similarly
   prune itself from the tree and this process will continue until a
   multicast group member is reached.  On the other hand, if the node
   which initiated the rebuilding is not a group member and it has more
   than one next hop for the tree, it cannot prune itself, since doing
   so would partition the tree.  It instead chooses one of its next hops
   and sends an MACT with the 'G' flag set.  This flag indicates that
   the next group member to receive this message should become the new
   group leader.  If the node's next hop is a group member, this node
   will become the group leader.  Otherwise, the node will unicast its
   own MACT message with the 'G' flag set to one of its next hops, and
   so on until a group member is reached.

   In the event that the link break can not be repaired, the multicast
   tree will remain partitioned until the two parts of the network
   become connected once again.  A node from one partition of the
   network will know that it has come into contact with a node from the
   other partition of the network by noting the difference in the Group
   Hello message multicast group leader information.  A node which is a
   part of the network partition with the lower group leader IP address
   and which is also a member of the multicast tree can initiate the
   tree repair.  It will unicast a RREQ message with the `R' flag set
   back to the multicast group leader of its partition in order to get
   permission to rebuild the tree.  The node must seek permission to
   rebuild the tree in order to prevent multiple nodes from attempting
   to rebuild the tree if contact between the two partitions is
   re-established in more than one place.  Multiple repairs would create
   loops within the multicast tree.  The group leader is the only node
   which can respond to a RREQ with the `R' flag set.  It will respond



Perkins, Royer              Expires 20 April 1999              [Page 18]

Internet Draft                   AODV                   20 November 1998


   to the request by sending a RREP granting permission to one and only
   one node to rebuild the tree.  Any nodes which requested permission
   and which do not receive a RREP will time out and not attempt the
   repair.  As the RREP travels back to the node, it will establish a
   multicast tree branch if one did not already exist.  After receiving
   the RREP, the node which sent the repair request will unicast a RREQ
   to the group leader of the other network partition, using the node
   it had received the Group Hello message from as the next hop.  This
   RREQ will contain the current value of the partitions multicast group
   sequence number.  Upon receiving the RREQ, the multicast group leader
   will take the larger of its and the received multicast group sequence
   number, increment this value by one, and respond with a RREP. This
   is the group leader which will become the leader of the reconnected
   multicast tree.  As the RREP is propagated back to the source node, a
   branch on to the multicast tree is added.  When the initiating node
   receives the RREP, the tree will be reconnected.  The next time the
   group leader broadcasts a Group Hello, it will set the `U' flag to
   indicate that there is a change in the group leader information and
   group members should update the corresponding information.  The node
   which was the group leader of the other partition will also note this
   message and update its tables to indicate that the other group leader
   is now the multicast group leader for the entire network.


8.8. Initiating Triggered Route Replies

   A node can trigger an unsolicited RREP if it sends a RREQ to join
   a multicast group and after RREQ_RETRIES times does not receives
   a response.  The node will then become the new multicast group
   leader, and it will broadcast a RREP with infinity TTL (a Group
   Hello message) and with the multicast group IP Address / Sequence
   number extension information set to reflect that it is now the group
   leader for the multicast group.  In addition, in order to ensure
   nodes maintain consistent and up-to-date information about who the
   multicast group leaders are, any node which is a group leader for a
   multicast group will broadcast such a Group Hello across the network
   every GROUP_HELLO_INTERVAL milliseconds.  The contents of the RREP
   fields (including the Multicast Group Information Extension) are set
   as follows:

      L           0

      Hop Count   0

      Destination IP Address
                  The IP Address of the node sending the Group Hello.

      Destination Sequence Number
                  The node's latest destination sequence number.



Perkins, Royer              Expires 20 April 1999              [Page 19]

Internet Draft                   AODV                   20 November 1998


      Multicast Group IP Address
                  The IP Address of the Multicast Group for which the
                  node is the group leader.

      Multicast Group Sequence Number
                  One plus the last known sequence number of the
                  multicast group.

   Nodes receiving the Group Hello incrememt the Hop Count field by one
   before forwarding the message.


9. Quality of Service

   AODV currently provides some minimal controls to enable mobile nodes
   in an ad hoc network to specify, as part of a RREQ, certain Quality
   of Service parameters that a route to a destination must satisfy.
   In particular, a RREQ MAY include a Maximum Delay extension (see
   Section 12.4) or a Minimum Bandwidth extension (see Section 12.5).

   If, after establishment of such a route, any node along the path
   detects that the requested Quality of Service parameters can no
   longer be maintained, that node MUST originate a ICMP QOS_LOST
   message back to the node which had originally requested the now
   unavailable parameters.


10. AODV and Aggregated Networks

   AODV has been designed for use by mobile nodes with IP addresses
   that are not necessarily related to each other, to create an ad hoc
   network.  However, in some cases a collection of mobile nodes MAY
   operate in a fixed relationship to each other and share a common
   subnet prefix, moving together within an area where an ad hoc network
   has formed.  Call such a collection of nodes a ``subnet''.  In this
   case, it is possible for a single node within the subnet to advertise
   reachability for all other nodes on the subnet, by responding with
   a RREP message to any RREQ message requesting a route to any node
   with the subnet routing prefix.  Call the single node the ``subnet
   router''.  In order for a subnet router to operate the AODV protocol
   for the whole subnet, it has to maintain a destination sequence
   number for the entire subnet.  In any such RREP message sent by the
   subnet router, the Prefix Length field of the RREP message MUST be
   set to the length of the subnet prefix.  Other nodes sharing the
   subnet prefix SHOULD NOT issue RREP messages.







Perkins, Royer              Expires 20 April 1999              [Page 20]

Internet Draft                   AODV                   20 November 1998


11. Using AODV with Other Networks

   In some configurations, an ad hoc network may be able to provide
   connectivity between external routing domains that do not use
   AODV. If the points of contact to the other networks can act as
   subnet routers (see section 10) for any relevant networks within
   the external routing domains, then the ad hoc network can maintain
   connectivity to the external routing domains.  Indeed, the external
   routing networks can use the ad hoc network defined by AODV as a
   transit network.

   In order to provide this feature, a point of contact to an external
   network (call it an Infrastructure Router) has to act as a ``subnet
   router'' for every subnet of interest within the external network
   for which the Infrastructure Router can provide reachability.  This
   includes the need for maintaining a destination sequence number for
   that external subnet.

   If multiple Infrastructure Routers offer reachability to the same
   external subnet, those Infrastructure Routers have to cooperate (by
   means outside the scope of this specification) to provide consistent
   AODV semantics for ad hoc access to those subnets.


12. Extensions

   RREQ, RREP, and MACT messages have extensions defined in this version
   (and, possibly, future versions) of the protocol.  Extensions have
   the following format:

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |     type-specific data ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   where:

      Type     xx

      Length   The length of the type-specific data, not including the
               Type and Length fields of the extension.

   Extensions with types between 128 and 255 may NOT be skipped.  The
   rules for extensions will be spelled out more fully, and conform with
   the rules for handling IPv6 options.






Perkins, Royer              Expires 20 April 1999              [Page 21]

Internet Draft                   AODV                   20 November 1998


12.1. Hello Interval Extension Format

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |  Hello Interval ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ... Hello Interval, continued   |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      Type     xx

      Length   The length of the extension field.

      Hello Interval
               The number of milliseconds between successive
               transmissions of a ``hello'' message (RREP).

   The Hello Interval extension MAY be appended to a RREP message with
   TTL == 1, to be used by a neighboring receiver in determine how long
   to wait for subsequent such RREP messages.


12.2. Multicast Group Leader Extension Format

   This extension is appended to a RREQ by a node wishing to repair a
   multicast tree.

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |     Type      |    Length     |   Multicast Group Hop Count   |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |              Multicast Group Leader IP Address                |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      Type     xx

      Length   The length of the extension.

      Multicast Group Hop Count
               The distance in hops of the node sending the RREQ from
               the Multicast Group Leader.

      Multicast Group Leader IP Address
               The IP Address of the Multicast Group Leader.

   This extension is only used for rebuilding a multicast tree branch.
   In that case, a route to the Multicast Group Leader was known before



Perkins, Royer              Expires 20 April 1999              [Page 22]

Internet Draft                   AODV                   20 November 1998


   the need for the repair was discovered, and the IP address of the
   group leader is placed in the extension field.


12.3. Multicast Group Information Extension Format

   The following extension is used to carry additional information for
   the RREP message (see Section 5) when sent to establish a route to a
   multicast destination.

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |  Multicast Group IP Address ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ... Multicast Group IP Address  |  Multicast Group Seq Number ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ... Multicast Group Seq Number  |  Multicast Group Ldr IP Addr ..
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   .. Multicast Group Ldr IP Addr  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      Type     xx

      Length   The length of the extension field.

      Multicast Group IP Address
               The IP Address of the Multicast Group.

      Multicast Group Seq Number
               The current sequence number of the Multicast Group.

      Multicast Group Ldr IP Addr
               The IP Address of the current Multicast Group Leader.

   This extension is included when responding to a multicast group
   RREQ. It is also used by a multicast group leader when sending a
   Group Hello.  The extension fields indicate which group the node
   is the group leader of and the current sequence number for that
   group.  For a Group Hello the Multicast Group Ldr IP Address field
   is not included, since this information is already indicated by the
   Destination IP Address field of the message.










Perkins, Royer              Expires 20 April 1999              [Page 23]

Internet Draft                   AODV                   20 November 1998


12.4. Maximum Delay Extension Format

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |          Max Delay            |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      Type         xx

      Length       The length of the extension field.

      Max Delay    The number of seconds allowed for a transmission from
                   the source to the destination.

   The Maximum Delay Extension can be appended to a RREQ by a requesting
   node in order to place a maximum bound on the acceptable time
   delay experienced on any acceptable path from the source to the
   destination.

   Before forwarding the RREQ, an intermediate node MUST compare its
   NODE_TRAVERSAL_TIME to the (remaining) Max Delay indicated in the
   Maximum Delay Extension.  If the Max Delay is less, the node MUST
   discard the RREQ and not process it any further.  Otherwise, the
   node subtracts NODE_TRAVERSAL_TIME from the Max Delay value in
   the extension and continues processing the RREQ as specified in
   Section 6.3.


12.5. Minimum Bandwidth Extension Format

    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |    Length     |    Minimum Bandwidth ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     ...  Minimum Bandwidth        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

      Type         xx

      Length       The length of the extension field.

      Minimum Bandwidth
                   The amount of bandwidth (in kilobits/sec) needed
                   for acceptable transmission from the source to the
                   destination.





Perkins, Royer              Expires 20 April 1999              [Page 24]

Internet Draft                   AODV                   20 November 1998


   The Minimum Bandwidth Extension can be appended to a RREQ by a
   requesting node in order to specify the minimal amount of bandwidth
   that must be made available along acceptable path from the source to
   the destination.

   Before forwarding the RREQ, an intermediate node MUST compare its
   available link capacity to the Minimum Bandwidth indicated in the
   extension.  If the requested amount of bandwidth is not available,
   the node MUST discard the RREQ and not process it any further.
   Otherwise, the node continues processing the RREQ as specified in
   Section 6.3.


13. Configuration Parameters

   This section gives default values for some important values
   associated with AODV protocol operations.  A particular
   mobile node may wish to change certain of the parameters, in
   particular the NET_DIAMETER, MY_ROUTE_TIMEOUT, MY_TRAVERSAL_TIME,
   ALLOWED_HELLO_LOSS, RREQ_RETRIES, and possibly the HELLO_INTERVAL. In
   the latter case, the node should advertise the HELLO_INTERVAL in its
   ``hello'' messages, by appending a Hello Interval Extension to the
   RREP message.

      ACTIVE_ROUTE_TIMEOUT   3000

      ALLOWED_HELLO_LOSS     2

      BAD_LINK_LIFETIME      2 * RREP_WAIT_TIME

      BCAST_ID_SAVE          30000

      GROUP_HELLO_INTERVAL   5000

      HELLO_INTERVAL         1000

      MTREE_BUILD            2 * REV_ROUTE_LIFE

      NET_DIAMETER           35

      NEXT_HOP_WAIT          NODE_TRAVERSAL_TIME + 10

      NODE_TRAVERSAL_TIME    40

      MY_TRAVERSAL_TIME      NODE_TRAVERSAL_TIME

      MY_ROUTE_TIMEOUT       6000

      REV_ROUTE_LIFE         RREP_WAIT_TIME



Perkins, Royer              Expires 20 April 1999              [Page 25]

Internet Draft                   AODV                   20 November 1998


      RREP_WAIT_TIME         3 * NODE_TRAVERSAL_TIME * NET_DIAMETER / 2

      RREQ_RETRIES           2

   Note that the network may contain more than NET_DIAMETER ** 2 nodes.
   NET_DIAMETER measures the number of ``cells'' (typically wireless)
   that would have to be placed end to end in order to stretch across
   the network at its widest point.


14. Security Considerations

   Currently, AODV does not specify any special security measures.
   Route protocols, however, are prime targets for impersonation
   attacks, and must be protected by use of authentication techniques
   involving generation of unforgeable and cryptographically strong
   message digests or digital signatures.  It is expected that, in
   environments where security is an issue, that IPSec authentication
   headers will be deployed along with the necessary key management to
   distribute keys to the members of the ad hoc network using AODV.
































Perkins, Royer              Expires 20 April 1999              [Page 26]

Internet Draft                   AODV                   20 November 1998


References

   [1] S. Bradner.  Key Words for Use in RFCs to Indicate Requirement
       Levels.  RFC 2119, March 1997.

   [2] Charles E. Perkins.  Terminology for Ad-Hoc Networking.
       draft-ietf-manet-terms-00.txt, November 1997.  (work in
       progress).


Author's Address

   Questions about this memo can be directed to:

      Charles E. Perkins
      Networking and Security Center
      Sun Microsystems Laboratories
      901 San Antonio Rd.
      Palo Alto, CA 94303
      USA
      +1 650 786 6464
      +1 650 786 6445 (fax)
      cperkins@eng.sun.com


      Elizabeth M. Royer
      Dept.  of Electrical and Computer Engineering
      University of California, Santa Barbara
      Santa Barbara, CA 93106
      +1 805 893 7788
      +1 805 893 3262 (fax)
      eroyer@alpha.ece.ucsb.edu




















Perkins, Royer              Expires 20 April 1999              [Page 27]


